{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/application/application.component.ts","webpack:///src/app/application/application.component.html","webpack:///src/app/application/dialog-open.html","webpack:///src/app/application/dialog-editApplication.ts","webpack:///src/app/application/dialog-editApplication.html","webpack:///src/app/audit-scan-header/audit-scan-header.component.ts","webpack:///src/app/audit-scan-header/audit-scan-header.component.html","webpack:///src/app/auditscan/auditscan.component.ts","webpack:///src/app/auditscan/auditscan.component.html","webpack:///src/app/client/client.component.ts","webpack:///src/app/client/client.component.html","webpack:///src/app/client/dialog-open.html","webpack:///src/app/client/dialog-editClient.ts","webpack:///src/app/client/dialog-edit.html","webpack:///src/app/employee/employee.component.ts","webpack:///src/app/employee/employee.component.html","webpack:///src/app/feature/dialog-editFeature.ts","webpack:///src/app/feature/dialog-editFeature.html","webpack:///src/app/feature/feature.component.ts","webpack:///src/app/feature/feature.component.html","webpack:///src/app/feature/dialog-open.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/customValidationService.ts","webpack:///src/app/header/dialog-editHeader.ts","webpack:///src/app/header/dialog-editHeader.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/login/dialogOpen.ts","webpack:///src/app/login/dialogOpen.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/resetPassword.ts","webpack:///src/app/login/resetPassword.html","webpack:///src/app/managePermission/managePermission.component.ts","webpack:///src/app/managePermission/managePermission.component.html","webpack:///src/app/reportForAuditScan/reportAuditScan.ts","webpack:///src/app/reportForAuditScan/reportAuditScan.html","webpack:///src/app/restapi_auditScan_Service.ts","webpack:///src/app/restapiservice.service.ts","webpack:///src/app/role/dialog-edit.ts","webpack:///src/app/role/dialog-edit.html","webpack:///src/app/role/role.component.ts","webpack:///src/app/role/role.component.html","webpack:///src/app/role/dialog-open.html","webpack:///src/app/service/http-client.service.ts","webpack:///src/app/user/dialog-editUser.ts","webpack:///src/app/user/dialog-editUser.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/user/dialog-open.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","entryComponents","providers","bootstrap","ApplicationComponent","service","router","dialog","apps","client","form","active","applicationName","clientName","displayedColumns","dataSource","listStatus","name","value","checked","getClientName","subscribe","result","clientname","error","console","getApplicationData","data","sort","paginator","log","JSON","stringify","ValidateForm","resp","doSaveApplication","observe","response","dialogRef","open","DialogClose","width","message","filterValue","trim","toLowerCase","filter","action","obj","params","row","afterClosed","updateRow","row_obj","key","applicationId","doEditApplication","_isValid","clientNameInvalid","applicationNameInvalid","applyFilter","close","DialogEditApplication","local_data","drpClient","event","doAction","closeDialog","AuditScanHeaderComponent","userName","parse","sessionStorage","getItem","app","getApplicationToFeature","appdata","clear","navigate","doLogout","AuditscanComponent","formBuilder","userId","uploadResponse","status","filePath","progress","percentage","selectedFile","changeImage","uploadFilePath","uploadPath","startScan","scanType","selectScanOption","currentFileUpload","selectedFiles","item","pushFileToStorage","setTimeout","target","files","selectFile","upload","ClientComponent","clientIndustry","getClientData","doSaveClient","alert","clientId","clientLogo","doEditClient","clientIndustryInvalid","DialogEditClient","logo","EmployeeComponent","httpClientService","getUserRequestList","handleSuccessfulResponse","employees","DialogEditFeature","drpApplication","FeatureComponent","featureName","features","getApplicationName","applicationname","getFeatureData","doSaveFeature","featureId","doEditFeature","featureNameInvalid","FooterComponent","CustomvalidationService","control","regex","RegExp","valid","test","invalidPassword","controlName","matchingControlName","formGroup","controls","matchingControl","errors","mustMatch","setErrors","providedIn","DialogEditHeader","customValidator","submitted","username","registerForm","group","oldPassword","required","newPassword","compose","patternValidator","confirmPassword","validator","MustMatch","invalid","password","doChangePassword","onSubmit","onNoClick","HeaderComponent","getUserToApplication","history","state","role","showMenu","setItem","DialogOpen","emailId","forgotPasswordEmail","doSubmit","LoginComponent","captchaShow","hide","isLoggedIn","isLoginFailed","errorMessage","loginCounter","captchaText","imgCaptcha","login","navigateByUrl","err","setLoginCounter","loginForm","localStorage","toString","captchaLogo","preventDefault","ResetPasswordComponent","resetPassword","RoleFeature","UserRoleMenus","ManagePermissionComponent","location","users","role_name","listFeatureID","Array","listUserRoleMenus","userEmail","roleName","getRoleByUserId","roleNamebyuserId","forEach","roleItem","_userRoleMenus","roleId","dyRows","push","BindFeatureData","getUserFeatureMapping","BindDataSource","featureData","columns","columnDef","columnId","header","isCheckBox","map","a","element","x","_markCheck","some","i","isChecked","c","columndata","dyColumns","featureIdList","doSaveUserFeatureData","OnSave","ReportAuditScanComponent","Restapi_auditScan_Service","http","https","url","auditInput","post","get","file","FormData","append","responseType","RestapiserviceService","isPasswordEnter","isPasswordFailed","credentials","headers","Authorization","btoa","paswdData","userPassword","put","roleData","userData","applicationData","columnData","DialogEdit","RoleComponent","getRoleData","doSaveRole","doEditRole","roleNameInvalid","UserRequest","_userId","_userName","_userEmail","HttpClientService","DialogEditUser","drpRoles","drpClients","split","application","UserComponent","changeDetectorRefs","userFirstName","empLastName","getRoleName","getUserData","doSaveUser","doEditUser","userFirstNameInvalid","empLastNameInvalid","userEmailInvalid","userNameInvalid","roleInvalid","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n\n</style>\n</head>\n<body>\n\n<app-header></app-header>\n<div class=\"main\">\n  <br> <br>\n\n \n <router-outlet></router-outlet>\n  \n</div>\n\n</body>\n</html> \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeComponent } from './employee/employee.component';\nimport{ LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\n\nimport { RoleComponent } from './role/role.component';\nimport { ClientComponent } from './client/client.component';\nimport { UserComponent } from './user/user.component';\nimport { ApplicationComponent } from './application/application.component';\nimport {ManagePermissionComponent} from './managePermission/managePermission.component';\n\nimport { FeatureComponent } from './feature/feature.component';\nimport { AuditscanComponent } from './auditscan/auditscan.component';\nimport { ResetPasswordComponent } from './login/resetPassword';\nimport{ReportAuditScanComponent} from './reportForAuditScan/reportAuditScan';\n\nconst routes: Routes = [\n {path: \"\", redirectTo: \"/wecaast/user\", pathMatch: \"full\" },\n  {path: '', component: EmployeeComponent},\n  {path: 'wecaast/user/userpage', component: LoginComponent},\n  {path: 'wecaast/user/login', component: LoginComponent},\n  {path: 'wecaast/user/welcome', component: LoginComponent},\n  {path: 'wecaast/auditscan/seedUrlFunction', component: AuditscanComponent},\n  {path: 'wecaast/auditscan', component: AuditscanComponent},\n  {path: 'user/managePermission', component: ManagePermissionComponent},\n  {path: 'wecaast/auditscan/savefile', component: AuditscanComponent}, \n  {path:'wecaast/auditscan/reportAuditScan',component:ReportAuditScanComponent},\n  {path:'wecaast/user/login/resetPassword',component:ResetPasswordComponent},\n  {path:\"wecaast/user\",component:AdminComponent, children:[\n    {\n      path: 'role',\n      component: RoleComponent\n    },\n    {\n      path: 'client',\n      component: ClientComponent\n    },\n    {\n      path: 'adduser',\n      component: UserComponent\n    },\n    {\n      path: 'application',\n      component: ApplicationComponent\n    },\n    {\n      path: 'feature',\n      component: FeatureComponent\n    },\n    {\n      path: 'adduser/managePermission',\n      component: ManagePermissionComponent\n    },\n  ]},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weCaast';\n}\n","\r\n      <router-outlet></router-outlet>\r\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport{ReportAuditScanComponent} from './reportForAuditScan/reportAuditScan';\nimport { ResetPasswordComponent } from './login/resetPassword';\n\nimport { EmployeeComponent } from './employee/employee.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { RestapiserviceService } from './restapiservice.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\n\nimport { RoleComponent } from './role/role.component';\nimport {ClientComponent } from './client/client.component';\n\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\n\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule } from '@angular/material/form-field';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { DialogEdit } from './role/dialog-edit';\nimport { DialogEditClient } from './client/dialog-editClient';\nimport { DialogEditUser } from './user/dialog-editUser';\nimport { DialogOpen } from './login/dialogOpen';\nimport { UserComponent } from './user/user.component';\nimport { ApplicationComponent } from './application/application.component';\nimport { DialogEditApplication } from './application/dialog-editApplication';\nimport { ManagePermissionComponent } from './managePermission/managePermission.component';\nimport { FeatureComponent } from './feature/feature.component';\nimport { DialogEditFeature } from './feature/dialog-editFeature';\nimport { AuditscanComponent } from './auditscan/auditscan.component';\nimport { DialogEditHeader } from './header/dialog-editHeader';\nimport { NgxBootstrapSliderModule } from 'ngx-bootstrap-slider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { AuditScanHeaderComponent } from './audit-scan-header/audit-scan-header.component' \n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    LoginComponent,\n    AdminComponent,\n    HeaderComponent,\n    FooterComponent,\n\n    RoleComponent,\n    ClientComponent,\n    UserComponent,\n    DialogEdit, \n    DialogEditClient, \n    DialogOpen,\n    UserComponent,\n    DialogEditUser, \n    ApplicationComponent,\n    DialogEditApplication, \n    ManagePermissionComponent, FeatureComponent,DialogEditFeature, AuditscanComponent\n  ,DialogEditHeader, AuditScanHeaderComponent,ResetPasswordComponent,ReportAuditScanComponent\n    \n  ],\n  imports: [\n    MatProgressSpinnerModule ,\n    NgxBootstrapSliderModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatListModule,\n   \n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n   \n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    \n  ],\n  entryComponents: [\n    DialogEdit,\n    DialogEditClient,\n    DialogEditUser,DialogEditApplication, DialogEditFeature,DialogOpen\n  ],\n  providers: [RestapiserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit, ViewChild, Input, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { DialogEditApplication } from './dialog-editApplication';\n\n\n\ninterface Clients {\n  name: string;\n\n}\nexport interface applicationData {\n  applicationId: number;\n  applicationName: string;\n  active: number;\n  clientName: string;\n  clientId: number;\n\n}\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n \n\n  apps: applicationData[] = [];\n  client: Clients[] = [];\n  clientname: any\n  form: any = { active: 1, applicationName:'',clientName:'' };\n  displayedColumns: string[] = ['applicationId', 'clientName', 'applicationName', 'active', 'action'];\n  dataSource = new MatTableDataSource(this.apps);\n\n  listStatus = [\n    { name: 'Active', value: 1, checked: true },\n    { name: 'Inactive', value: 0, checked: false }\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n  clientNameInvalid: boolean;\n  applicationNameInvalid: boolean;\nmessage:any\n\n  constructor(private service: RestapiserviceService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n    this.service.getClientName().subscribe(result => {\n      this.clientname = result;\n    }, error => console.error(error));\n\n    this.service.getApplicationData().subscribe(\n      data => {\n        this.apps = data;\n        this.dataSource = new MatTableDataSource(this.apps);\n\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        console.log(\"getApplicationData\" + JSON.stringify(data))\n      }\n    );\n  }\n  doSaveApplication() {\n    if (this.ValidateForm()) {\n\n\n      let resp = this.service.doSaveApplication(this.form,{observe:'response'}).subscribe((response: any) => {\n\n        if (response === 200) {\n          const dialogRef = this.dialog.open(DialogClose, {\n            width: '250px',\n\n          });\n\n        } else {\n\n          this.message = 'Details not saved successfully';\n\n        }\n      }\n\n      );\n    }\n  }\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n    //  this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  editApplication(action, obj) {\n\n    obj.action = action;\n    let params = {\n      row: obj,\n      clientName: this.clientname\n    };\n\n    const dialogRef = this.dialog.open(DialogEditApplication, {\n      width: '250px',\n      data: params\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n  updateRow(row_obj) {\n\n    this.dataSource.data.filter((value, key) => {\n      if (value.applicationId == row_obj.applicationId) {\n        value.applicationName = row_obj.applicationName;\n        value.active = row_obj.active;\n\n      }\n\n      return true;\n\n    });\n    let resp = this.service.doEditApplication(row_obj);\n\n  }\n\n\n  ValidateForm() {\n    let _isValid = true;\n\n    this.clientNameInvalid = (!this.form.clientName || this.form.clientName == '')\n    this.applicationNameInvalid = (!this.form.applicationName || this.form.applicationName == '')\n    if (this.applicationNameInvalid || this.clientNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n\n}\n\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>) { }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"example-container\" style=\"margin-left: 250px;\">\n    <form id=\"accesspanel\" action=\"\"  name=\"form\"   #appForm=\"ngForm\" (ngSubmit)=\"appForm.form.valid\" \n    novalidate  class=\"app-form\">\n        <mat-form-field class=\"example-full-width\">\n        <mat-label>Select Client</mat-label>\n        <mat-select  name=\"clientName\" [(ngModel)]=\"form.clientName\" #appForm=\"ngModel\"\n        (click)=\"clientNameInvalid = false\" [ngClass]=\"{ 'is-invalid': clientNameInvalid }\" required>\n          <mat-option *ngFor=\"let clients of clientname\" value={{clients.clientName}}>\n            {{clients.clientName}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div>\n        <span *ngIf=\"clientNameInvalid\" style=\"color: red;\">Please Select Client</span>\n      </div>\n      <br>\n\n\n\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Application Name</mat-label>\n      <input matInput class=\"form-control\" name=\"applicationName\" [(ngModel)]=\"form.applicationName\" #appForm=\"ngModel\"\n      (click)=\"applicationNameInvalid = false\" [ngClass]=\"{ 'is-invalid': applicationNameInvalid }\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"applicationNameInvalid\" style=\"color: red;\">Application Name is required</span>\n    </div>\n    <br>\n   <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>Logo</mat-label>\n        <input matInput name =\"logo\" >\n      </mat-form-field>-->\n\n  \n      \n    <br>\n  <mat-radio-group aria-label=\"Select Status\" name=\"appActive\" [(ngModel)]=\"form.active\">\n    <mat-radio-button for=\"appActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n  </mat-radio-group>\n  <br><br><br>\n  <div class=\"example-button-row\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"doSaveApplication()\">Save</button>\n    <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n   \n  \n  </div>\n  </form>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n      <span style=\"color: red;\">{{ message }}</span>\n  \n    </div>\n  </div>\n\n\n  \n\n  <br><br>\n  <div class=\"example-header\">\n    <mat-form-field>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n    </mat-form-field>\n  </div>\n  <br>\n  <div class=\"example-container mat-elevation-z8\">\n\n    <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n    \n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- ApplicationId Column -->\n      <ng-container matColumnDef=\"applicationId\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Application Id </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.applicationId}} </mat-cell>\n      </ng-container>\n    \n<!-- ClientName Column -->\n<ng-container matColumnDef=\"clientName\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n  <mat-cell *matCellDef=\"let element\"> {{element.clientName}} </mat-cell>\n</ng-container>\n\n      <!-- ApplicationName Column -->\n      <ng-container matColumnDef=\"applicationName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Application Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.applicationName}} </mat-cell>\n      </ng-container>\n      \n      <!-- Active Column -->\n      <ng-container matColumnDef=\"active\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n      </ng-container>\n    \n       <!-- Action Column -->\n       <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"editApplication('Update',row)\">\n              <mat-icon aria-label=\"Edit\">edit</mat-icon>\n            </button>\n         \n        </mat-cell>\n      </ng-container>\n      \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n      </mat-table>\n    \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    \n   \n    </div>\n  ","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface applicationData {\r\n  applicationId: number;\r\n  applicationName: string;\r\n  active:number;\r\nclientName:string;\r\nclientId:any;\r\n} \r\n\r\n@Component({\r\n    selector: 'dialog-editApplication',\r\n    templateUrl: 'dialog-editApplication.html',\r\n    styleUrls: ['./application.component.css']\r\n  })\r\n\r\n \r\n\r\n  export class DialogEditApplication {\r\n  \r\n    action:string;\r\n    local_data:any;\r\n    drpClient: any;\r\n    \r\n   \r\n  \r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEditApplication>,\r\n      //@Optional() is used to prevent error if no data is passed\r\n      @Optional() @Inject(MAT_DIALOG_DATA) public data) {\r\n      console.log(data);\r\n      if(data){\r\n      \r\n        this.local_data=data.row;\r\n        this.action = this.local_data.action;\r\n        this.drpClient=data.clientName;\r\n        \r\n      }\r\n      // this.local_data =data\r\n      \r\n    }\r\n    doAction(){\r\n      this.dialogRef.close({event:this.action,data:this.local_data});\r\n      \r\n    }\r\n  \r\n    closeDialog(){\r\n      this.dialogRef.close({event:'Cancel'});\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n\r\n\r\n\r\n    <mat-form-field>\r\n        \r\n        <input class=\"form-control\" placeholder=\"{{action}} ApplicationName\" name =\"applicationName\" matInput [(ngModel)]=\"local_data.applicationName\">\r\n        \r\n      </mat-form-field><br>\r\n\r\n\r\n      <mat-form-field>\r\n        <mat-label>Select Client</mat-label>\r\n        <mat-select  name=\"clientName\" [(ngModel)]=\"local_data.clientName\">\r\n          <mat-option *ngFor=\"let clients of drpClient\" value={{clients.clientName}}>\r\n            {{clients.clientName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br><br>\r\n  \r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Restapi_auditScan_Service } from '../restapi_auditScan_Service';\nimport { Router } from '@angular/router';\n\n\n\nexport interface ApplicationToFeature {\n  applicationId:number;\n\tfeatureId:number;\n\t featureName:String;\n\t servicePath:String;\n\t featureSequence:number;\n\t\n \n}\n\n\n@Component({\n  selector: 'app-audit-scan-header',\n  templateUrl: './audit-scan-header.component.html',\n  styleUrls: ['./audit-scan-header.component.css']\n})\nexport class AuditScanHeaderComponent implements OnInit {\n  userName: String;\n  appdata:any;\n  username:String;\n  constructor(private service: Restapi_auditScan_Service, private router: Router) { }\n  ngOnInit(): void {\n\n    this.userName = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    let applicationId=JSON.parse(sessionStorage.getItem('applicationIdInSession'));\n     \n    let app =this.service.getApplicationToFeature(applicationId);\n    app.subscribe(result=>{\n      this.appdata = JSON.parse(JSON.stringify(result));\n      console.log(\"ApplicationName DATTATATTATTATATTA : \",this.appdata)\n      // setTimeout(() => {\n      //   this.loading=false;\n      // }, 500);\n    })\n\n  }\n\n  doLogout(){\n    sessionStorage.clear();\n    this.userName = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    this.router.navigate([\"wecaast/user/login\"])\n  }\n\n}\n","\n\n<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container\">\n    <img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\">\n      \n      <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\" aria-controls=\"navbarCollapse\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav mr-auto\">\n          \n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"\">TagSure</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/eSat\">eSat</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/WebAssure\">WebAssure</a>\n          </li> -->\n         \n\n\n\n\n          \n    \n       \n      <li class=\"nav-item\"  *ngFor=\"let apps of appdata\" value={{apps.featureName}} style=\"width: max-content;\" >\n        <a class=\"nav-link\" href={{apps.servicePath}}> {{apps.featureName}} \n        </a>\n      </li>\n    \n\n      <!-- <li class=\"nav-item\">\n        <a name =\"userName\" class=\"nav-link menu-item dropdown-toggle\" [matMenuTriggerFor] = \"userMenu\" style=\"cursor: pointer;margin-left: 296px;\">{{userName}}</a>\n        <mat-menu #userMenu = \"matMenu\">\n         \n          <button mat-menu-item (click)=\"doLogout()\">Logout</button>\n           \n        </mat-menu>\n      </li> -->\n\n   \n\n        </ul>\n\n        <ul class=\"ml-auto navbar-nav\">\n          <li class=\"logoutLink\"><a class=\"nav-link\" (click)=\"doLogout()\"><mat-icon>exit_to_app</mat-icon></a></li>\n        </ul>\n        \n       \n      </div>\n    </div>\n    </nav>\n    ","import { Component, OnInit } from '@angular/core';\nimport { Restapi_auditScan_Service } from '../restapi_auditScan_Service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nexport interface AuditScanData {\n  userName: String;\n  projectName: String;\n  selectScanOption: number;\n  selectTagOption: number;\n  pageDepth: number;\n  pageUrl: String;\n  txtPageURL: String;\n  selectBrowser: number; \n  isAuthenticated:boolean;\n uploadFilePath:String; \n}\n\n\n\n\nexport interface ApplicationToFeature {\n  applicationId: number;\n  featureId: number;\n  featureName: String;\n  servicePath: String;\n  featureSequence: number;\n\n\n}\n\n\n@Component({\n  selector: 'app-auditscan',\n  templateUrl: './auditscan.component.html',\n  styleUrls: ['./auditscan.component.css']\n})\nexport class AuditscanComponent implements OnInit {\n\n  formatLabel(value: number) {\n\n\n    return value;\n  }\n\n\n  listStatus =[\n    {name:'Chrome',value:1,checked:true},\n    {name:'Mozilla',value:0,checked:false},\n    {name:'IE',value:0,checked:false}\n  ];\n\n\n  form2: FormGroup;\n  error: string;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  title = 'File-Upload-Save';\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  selectedFile = null;\n  changeImage = false;\n\n  userName: String;\n  appdata: any;\n  form: any = {};\n  uploadPath:any;\n  constructor(private service: Restapi_auditScan_Service, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n\n  }\n\n  startScan() {\n    console.log(\"UPLOAD FORM : \" , this.form);\n   this.userName = JSON.parse(sessionStorage.getItem('UserNameInSession'))\n   this.form.uploadFilePath = this.uploadPath;\n    let resp = this.service.startScan(this.form, this.userName); \n\n    \n  }\n  \n    upload() {\n        let scanType = this.form.selectScanOption;\n        if (scanType == \"2\") {\n          this.currentFileUpload = this.selectedFiles.item(0);\n          return this.service.pushFileToStorage(this.currentFileUpload).subscribe((result) => {\n            console.log(\"resultresult : \" , result);\n          this.uploadPath = result;\n          setTimeout(() => {\n            this.startScan();\n          }, 500);\n    }); \n\n  } else {\n          this.uploadPath = \"URL_Based\";\n          setTimeout(() => {\n            this.startScan();\n          }, 500);\n        }\n      }\n    \n\n   selectFile(event) {\n      this.selectedFiles = event.target.files;\n      } \n}\n","<app-audit-scan-header></app-audit-scan-header>\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <title>WeCaast - Audit Scan</title>\n\n</head>\n\n<body>\n\n\n\n  <!-- Content Start -->\n\n  <div class=\"container\">\n\n    <main class=\"row mt-4 mb-5\">\n      <section class=\"col-xl-8 mb-5 mb-xl-0\">\n        <div class=\"pageHeding\">Audit Scan</div>\n        <form name=\"form\" #auditScanForm=\"ngForm\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group mb-4\">\n                <label>Type Project Name</label>\n                <input type=\"text\" class=\"form-control\" name=\"projectName\" [(ngModel)]=\"form.projectName\"\n                  id=\"projectName\" placeholder=\"\">\n              </div>\n            </div>\n          </div>\n          <!-- row End -->\n          <div class=\"row mb-4\">\n            <div class=\"col-lg-4\">\n              <div class=\"radiotitle mb-2\">Type of SCan</div>\n              <section class=\"imgRadioWrapper\">\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioScan_1\" name=\"selectScanOption\" value=\"1\" [(ngModel)]=\"form.selectScanOption\">\n                    <label for=\"radioScan_1\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon1\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">URL Based</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioScan_2\" name=\"selectScanOption\" value=\"2\" checked [(ngModel)]=\"form.selectScanOption\">\n                    <label for=\"radioScan_2\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon2\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">File Based</div>\n                    </label>\n                  </div>\n                </div>\n              </section>\n            </div>\n            <!-- Col end -->\n            <div class=\"col-lg-4\">\n              <div class=\"radiotitle mb-2\">Extract Tags From</div>\n              <section class=\"imgRadioWrapper\">\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioTag_1\" name=\"selectTagOption\" value=\"1\" checked [(ngModel)]=\"form.selectTagOption\">\n                    <label for=\"radioTag_1\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon1\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Beacon</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioTag_2\" name=\"selectTagOption\" value=\"2\"  [(ngModel)]=\"form.selectTagOption\">\n                    <label for=\"radioTag_2\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon2\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Data Layer</div>\n                    </label>\n                  </div>\n                </div>\n              </section>\n            </div>\n            <!-- Col end -->\n            <div class=\"col-lg-4\">\n              <div class=\"radiotitle mb-2\">Page Depth</div>\n              <div class=\"row\">\n\n\n\n\n\n\n                <div class=\"col-12 mb-3\">\n                  <mat-slider class=\"custom-range\" name=\"pageDepth\" [(ngModel)]=\"form.pageDepth\" thumbLabel\n                    [displayWith]=\"formatLabel\" tickInterval=\"10\" min=\"0\" max=\"10\"></mat-slider>\n\n\n\n                </div>\n                <br><br><br>\n                <div class=\"col-12 mb-3\" style=\"margin-left: 5px;\"> <span style=\"    font-size: 0.75rem;\n              padding: 0.5rem 0 0.5rem 0;\n              text-transform: uppercase;\n              font-weight: 600;\n          \">Selected Value is :</span>\n                  <br>\n                  <ul class=\"list-inline sliderCount\">\n                    <li class=\"list-inline-item slideNum active\">{{form.pageDepth}}</li>\n\n                  </ul>\n\n                </div>\n\n\n              </div>\n            </div>\n            <!-- Col end -->\n          </div>\n          <!-- row End -->\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <label>Starting Page URL</label>\n            </div>\n            <div class=\"col-lg-2\">\n              <select class=\"form-control\" id=\"selectURL\" name=\"pageUrl\" [(ngModel)]=\"form.pageUrl\">\n                <option>http://</option>\n                <option>https://</option>\n              </select>\n            </div>\n            <div class=\"col-lg-10\">\n              <input type=\"text\" class=\"form-control\" id=\"txtPageURL\" name=\"txtPageURL\" [(ngModel)]=\"form.txtPageURL\">\n            </div>\n          </div><br>\n          <!-- row End -->\n\n          <!-- <div class=\"row mb-4\">\n        <div class=\"col-lg-12 mt-5\">\n          <div class=\"form-group\">\n            <label>Add Keywords</label>\n            <div class=\"selectDiv1\">\n              <select id=\"keywordSelect\" name=\"character\" class=\"form-control\" multiple=\"multiple\">\n                <option value=\"Peter\">Shopping Cart</option>\n                <option value=\"Lois\">Add to Cart</option>\n                <option value=\"Chris\">Big Sale</option>\n                <option value=\"Meg\">Discount</option>\n                <option value=\"Stewie\">Festival offer</option>\n                <option value=\"Cleveland\">Big Offer</option>\n                <option value=\"Joe\">Add to Favourite</option>\n                <option value=\"Quagmire\">Glwenn Qtuagmire</option>\n                <option value=\"Evil Monkey\">Etgvil Monkey</option>\n                <option value=\"Herbert\">Jiohn Herbert</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div> -->\n          <!-- row End -->\n\n          <div class=\"row mb-4\">\n            <div class=\"col-lg-12\">\n              <div class=\"radiotitle mb-2\">Select Browser</div>\n              <mat-radio-group class=\"imgRadioWrapper radioForBrowser\"  name=\"selectBrowser\" >\n                <div>\n                  <div class=\"input-group\">\n                    <input type=\"radio\" id=\"radioBrowser_1\" name=\"selectBrowser\" value=\"1\" checked [(ngModel)]=\"form.selectBrowser\">\n                    <label for=\"radioBrowser_1\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon1\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Google Chrome</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group\">\n                    <input type=\"radio\" id=\"radioBrowser_2\" name=\"selectBrowser\" value=\"2\"  [(ngModel)]=\"form.selectBrowser\">\n                    <label for=\"radioBrowser_2\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon2\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Mozilla Firefox</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group\">\n                    <input type=\"radio\" id=\"radioBrowser_3\" name=\"selectBrowser\" value=\"3\"  [(ngModel)]=\"form.selectBrowser\">\n                    <label for=\"radioBrowser_3\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon3\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Internet Explorer</div>\n                    </label>\n                  </div>\n                </div>\n              </mat-radio-group>\n            </div>\n            <!-- Col end -->\n          </div>\n          <!-- row End -->\n\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"custom-control custom-checkbox mb-3\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck\" name=\"isAuthenticated\" [(ngModel)]=\"form.isAuthenticated\">\n                <label class=\"custom-control-label customCheckboxLabel\" for=\"customCheck\">Authenticated</label>\n              </div>\n            </div>\n          </div>\n          <!-- row End -->\n\n          <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\n          <input type=\"hidden\" class=\"form-control\" name=\"uploadFilePath\" [(ngModel)]=\"form.uploadFilePath\"\n          id=\"uploadFilePath\" placeholder=\"\">\n\n\n        </form>\n        <div class=\"row buttonWrapper\">\n          <div class=\"col\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"upload()\">Start Scan</button>\n            <div class=\"d-inline-block orBlock\"><span class=\"\">OR</span></div>\n            <button type=\"button\" class=\"btn btn-outline-info\">Schedule Audit</button>\n          </div>\n        </div>\n      </section>\n      <!-- section End -->\n\n\n      <!-- section End -->\n    </main>\n    <!-- main End -->\n\n\n\n\n  </div>\n  <!-- container-fluid End -->\n\n  <!-- Content End -->\n<br>\n\n</body>\n\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport {MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {MatTableDataSource,MatTable} from '@angular/material/table';\nimport {DialogEditClient} from './dialog-editClient';\n\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nexport interface clientData {\n  clientId: number;\n  clientName: string;\n  clientIndustry: string;\n  clientLogo: string;\n  active: number;\n  uploadFilePath:String; \n\n}\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  form2: FormGroup;\n  error: string;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  title = 'File-Upload-Save';\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  selectedFile = null;\n  changeImage = false;\n uploadPath:any;\n  \n  client: clientData[] = [];\n  form: any = { active: 1,clientName:'',clientIndustry:''};\n  message: any\n  listStatus =[\n    {name:'Active',value:1,checked:true},\n    {name:'Inactive',value:0,checked:false}\n  ];\n\n  displayedColumns: string[] = ['clientId', 'clientName','clientIndustry','imageUrl', 'active','action'];\n  dataSource = new MatTableDataSource(this.client);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  table: MatTable<any>\n\n  clientNameInvalid :boolean\n  clientIndustryInvalid:boolean\n\n  constructor(private service: RestapiserviceService,private router:Router,public dialog: MatDialog, private formBuilder: FormBuilder) { }\n\n  selectFile(event) {\n     //Select File\n     this.selectedFiles = event.target.files;\n   }\n\n\n \n\n  ngOnInit(): void {\n    // this.dataSource.sort = this.sort;\n    this.service.getClientData().subscribe(\n      data => {\n        this.client = data;\n        this.dataSource = new MatTableDataSource(this.client);\n        this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n       console.log(\"GET_CLIENT::\"+JSON.stringify(data))\n      }\n    );\n  }\n\n  upload() {\n    this.progress.percentage = 0;\n    this.currentFileUpload = this.selectedFiles.item(0);\n\n    console.log(\"this.selectedFiles : \", this.currentFileUpload);\n    this.service.pushFileToStorage(this.currentFileUpload).subscribe(result => {\n    console.log(\"LOGOPARH:\",result)\n    setTimeout(() => {\n          this.doSaveClient();\n        }, 500);\n\n    });\n  }\n\n  doSaveClient(){\n\n    if(this.ValidateForm()){\n     \n       this.form.uploadFilePath = this.uploadPath;\n     \n     let resp = this.service.doSaveClient(this.form,{observe:'response'})\n\n    .subscribe((response: any) => {\n\n\n\n      \n      if (response === 200) {\n        const dialogRef = this.dialog.open(DialogClose, {\n          width: '250px',\n\n        });\n\n      } else {\nalert(\"Client not saved successfully\")\n       // this.message = 'Client not saved successfully';\n\n      }\n    });\n  }\n  }\n  \n   // let tabl = this.service.getUser();\n   \n  \n    /*resp.subscribe(data => {\n      this.message = data;\n      console.log(data);\n    });*/\n    ngAfterViewInit() {\n     \n    }\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n\n    editClient(action,obj){\n      obj.action=action;\n      const dialogRef = this.dialog.open(DialogEditClient, {\n        width: '250px',\n      data:obj\n      });\n      dialogRef.afterClosed().subscribe(result=>{\n        this.updateRow(result.data);\n        \n        //let resp = this.service.doEditRole(result.data);\n      })\n    \n      }\n      \n      updateRow(row_obj){\n    \n        this.dataSource.data.filter((value,key)=>{\n          if(value.clientId == row_obj.clientId){\n            value.clientName = row_obj.clientName;\n            value.clientIndustry= row_obj.clientIndustry;\n            value.clientLogo=row_obj.clientLogo;\n            value.active = row_obj.active;\n            \n          }\n          \n          return true;\n          \n        });\n        this.service.doEditClient(row_obj);\n        \n      }\n      ValidateForm() {\n        let _isValid = true;\n    \n        this.clientNameInvalid = (!this.form.clientName || this.form.clientName == '')\n        this.clientIndustryInvalid = (!this.form.clientIndustry || this.form.clientIndustry == '')\n    \n        if (this.clientNameInvalid || this.clientIndustryInvalid) {\n          _isValid = false;\n        }\n    \n        return _isValid;\n    \n      }\n    \n\n}\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>){}\n   \n\n   close() {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\" name=\"form\" #clientForm=\"ngForm\" (ngSubmit)=\"clientForm.form.valid\"\n    enctype=\"multipart/form-data\" novalidate class=\"client-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Client Name</mat-label>\n      <input matInput class=\"form-control\" name=\"clientName\" [(ngModel)]=\"form.clientName\" #clientForm=\"ngModel\"\n        (click)=\"clientNameInvalid == false\" [ngClass]=\"{ 'is-invalid': clientNameInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"clientNameInvalid\" style=\"color: red;\">ClientName is required</span>\n    </div>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Domain</mat-label>\n      <input matInput class=\"form-control\" name=\"clientIndustry\" [(ngModel)]=\"form.clientIndustry\" #clientForm=\"ngModel\"\n        (click)=\"clientIndustryInvalid == false\" [ngClass]=\"{ 'is-invalid': clientIndustryInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"clientIndustryInvalid\" style=\"color: red;\">Domain is required</span>\n    </div>\n\n    <br>\n    <!-- <label class=\"image-upload-container btn btn-bwm\">\n        <span>Select Logo</span>&nbsp; -->\n\n    <div class=\"container row\">\n      <div class=\"col-md-6\">\n           <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\n          <input type=\"hidden\" class=\"form-control\" name=\"uploadFilePath\" [(ngModel)]=\"form.uploadFilePath\"\n          id=\"uploadFilePath\" placeholder=\"\">\n        </div>\n       \n          \n\n\n    </div>\n\n    <div class=\"container row\">\n      <div class=\"col-md-12\">\n        <div *ngIf=message>Select File</div>\n      </div>\n    </div>\n\n    <!-- <input #imageInput type=\"file\" accept=\"image/*\" name=\"clientLogo\" [(ngModel)]=\"form.clientLogo\"> -->\n    <!-- </label> -->\n    <br>\n    <br>\n\n    <mat-radio-group aria-label=\"Select Status\" name=\"clientActive\" [(ngModel)]=\"form.active\">\n      <mat-radio-button for=\"clientActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\"\n        [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n    </mat-radio-group>\n    <br><br><br>\n    <div class=\"example-button-row\">\n\n      <button mat-raised-button color=\"primary\" (click)=\"upload()\">Save</button>\n      <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n\n\n    </div>\n  </form>\n</div>\n<br>\n<!-- <div class=\"form-group\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message style=\"width: 35%;margin-left: 358px;\">\n    <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n\n  </div>\n</div> -->\n<br><br>\n<div class=\"example-header\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" matSort>\n\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"clientId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Client ID </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.clientId}} </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"clientName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.clientName}} </mat-cell>\n    </ng-container>\n\n    <!-- Domain Column -->\n    <ng-container matColumnDef=\"clientIndustry\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Domain </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.clientIndustry}} </mat-cell>\n    </ng-container>\n\n    <!-- LOGO Column -->\n    <ng-container matColumnDef=\"imageUrl\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Logo </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> <img src=\"{{element.clientLogo}}\" style=\"width: 60px;\"/></mat-cell>\n\n\n      <!-- <img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\"> \n      D:\\WeCaast_Updated\\employee-management\\src\\assets\\icons\n      -->\n    </ng-container>\n\n    <!-- Active Column -->\n    <ng-container matColumnDef=\"active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\"\n          (click)=\"editClient('Update',row)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n      </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"> </mat-row>\n  </mat-table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n\n</div>","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Component, Optional, Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\n\r\nexport interface clientData {\r\n  clientId: number;\r\n  clientName: string;\r\n  clientIndustry: string;\r\n  active: number;\r\n  clientLogo: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-edit',\r\n  templateUrl: 'dialog-edit.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\n\r\n\r\n\r\nexport class DialogEditClient {\r\n\r\n  action: string;\r\n  local_data: any;\r\n  form2: FormGroup;\r\n  error: string;\r\n  userId: number = 1;\r\n  uploadResponse = { status: '', message: '', filePath: '' };\r\n  title = 'File-Upload-Save';\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  selectedFile = null;\r\n  changeImage = false;\r\n  logo: any;\r\n  clientLogo: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogEditClient>, private service: RestapiserviceService,\r\n    //@Optional() is used to prevent error if no data is passed\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: clientData) {\r\n    console.log(data);\r\n    this.local_data = data;\r\n    this.action = this.local_data.action;\r\n\r\n    this.logo = this.currentFileUpload;\r\n  }\r\n  doAction() {\r\n    this.progress.percentage = 0;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n\r\n    console.log(\"this.selectedFiles : \", this.currentFileUpload);\r\n\r\n\r\n    debugger\r\n    this.service.pushFileToStorage(this.currentFileUpload).subscribe(result => {\r\n      console.log(\"LOGOPATHEDIT::\", result);\r\n      if (result) {\r\n      this.currentFileUpload = result;\r\n      this.local_data.clientLogo=result;\r\n      }\r\n      this.dialogRef.close({ event: this.action, data: this.local_data, logo: this.currentFileUpload });\r\n    });\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close({ event: 'Cancel' });\r\n  }\r\n\r\n  selectFile(event) {\r\n    //Select File\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n  upload() {\r\n    this.progress.percentage = 0;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n\r\n    console.log(\"this.selectedFiles : \", this.currentFileUpload);\r\n\r\n\r\n\r\n    this.service.pushFileToStorage(this.currentFileUpload).subscribe(event => {\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} ClientName\" name =\"clientName\" matInput [(ngModel)]=\"local_data.clientName\">\r\n        \r\n      </mat-form-field><br>\r\n     \r\n  \r\n  <mat-form-field appearance=\"fill\">\r\n        \r\n    <input placeholder=\"{{action}} clientIndustry\" name =\"clientIndustry\" matInput [(ngModel)]=\"local_data.clientIndustry\">\r\n    \r\n  </mat-form-field>\r\n\r\n  <br>\r\n <div class=\"col-md-6\">\r\n  <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\r\n            <input type=\"hidden\" class=\"form-control\" name=\"uploadFilePath\" [(ngModel)]=\"local_data.uploadFilePath\"\r\n            id=\"uploadFilePath\" placeholder=\"\">\r\n        </div>\r\n       \r\n <div>\r\n   <span><img src=\"{{local_data.clientLogo}}\" style=\"width: 60px;\"></span>     \r\n   \r\n</div>   \r\n <br>\r\n  <br>\r\n  <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n    <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n    <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n  </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Observable } from \"rxjs\";\nimport { Component, OnInit } from '@angular/core';\n\nimport { HttpClientService, UserRequest } from '../service/http-client.service';\nimport { Router } from '@angular/router';\n\n\n\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  employees:  Observable<UserRequest[]>;\n   \n  constructor(\n    private httpClientService:HttpClientService, private router: Router\n  ) { }\n\n\n\n\n  ngOnInit() {\n    this.httpClientService.getUserRequestList().subscribe(\n     response =>this.handleSuccessfulResponse(response),\n    );\n  }\n\nhandleSuccessfulResponse(response)\n{\n    this.employees=response;\n}\n\n}","<!doctype html>\n<html lang=\"en\">\n<head>\n<!-- Required meta tags -->\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<title>WeCaast - Audit Scan</title>\n\n</head>\n<body>\n\n\n\n<!-- Content Start -->\n\n<div class=\"container\">\n  <main class=\"row mt-4 mb-5\">\n    <section class=\"col-xl-8 mb-5 mb-xl-0\">\n      <div class=\"pageHeding\">Audit Scan</div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group mb-4\">\n           <label>Type Project Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"projectName\" placeholder=\"\">\n          </div>\n        </div>\n      </div>\n      <!-- row End -->\n      <div class=\"row mb-4\">\n        <div class=\"col-lg-4\">\n          <div class=\"radiotitle mb-2\">Type of SCan</div>\n          <section class=\"imgRadioWrapper\">\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioScan_1\" name=\"selectScanOption\" value=\"1\">\n                <label for=\"radioScan_1\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon1\"> </em> </div>\n                <div class=\"text-center radioicotxt\">URL Based</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioScan_2\" name=\"selectScanOption\" value=\"2\" checked>\n                <label for=\"radioScan_2\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon2\"> </em> </div>\n                <div class=\"text-center radioicotxt\">File Based</div>\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n        <!-- Col end -->\n        <div class=\"col-lg-4\">\n          <div class=\"radiotitle mb-2\">Extract Tags From</div>\n          <section class=\"imgRadioWrapper\">\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioTag_1\" name=\"selectTagOption\" value=\"1\" checked>\n                <label for=\"radioTag_1\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon1\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Beacon</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioTag_2\" name=\"selectTagOption\" value=\"2\">\n                <label for=\"radioTag_2\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon2\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Data Layer</div>\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n        <!-- Col end -->\n        <div class=\"col-lg-4\">\n          <div class=\"radiotitle mb-2\">Page Depth</div>\n          <div class=\"row\">\n            <div class=\"col sliderLabel\">0</div>\n            <div class=\"col sliderLabel ml-auto text-right\">10</div>\n            <div class=\"col-12 mb-3\">\n              <input id=\"slider\" data-slider-id=\"ex1Slider\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"10\" data-slider-step=\"1\" data-slider-value=\"6\" onchange=\"funSlider(this)\"/>\n            </div>\n            <div class=\"col-12\">\n              <ul class=\"list-inline sliderCount\">\n                <li class=\"list-inline-item slideNum\">1</li>\n                <li class=\"list-inline-item slideNum\">2</li>\n                <li class=\"list-inline-item slideNum\">3</li>\n                <li class=\"list-inline-item slideNum\">4</li>\n                <li class=\"list-inline-item slideNum\">5</li>\n                <li class=\"list-inline-item slideNum active\">6</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">7</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">8</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">9</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">10</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- Col end --> \n      </div>\n      <!-- row End -->\n      \n      <div class=\"row\">\n        <div class=\"col-12\">\n          <label>Starting Page URL</label>\n        </div>\n        <div class=\"col-lg-2\">\n          <select class=\"form-control\" id=\"selectURL\">\n            <option>http://</option>\n            <option>https://</option>\n          </select>\n        </div>\n        <div class=\"col-lg-10\">\n          <input type=\"text\" class=\"form-control\" id=\"txtPageURL\">\n        </div>\n      </div><br>\n      <!-- row End -->\n      \n      <!-- <div class=\"row mb-4\">\n        <div class=\"col-lg-12 mt-5\">\n          <div class=\"form-group\">\n            <label>Add Keywords</label>\n            <div class=\"selectDiv1\">\n              <select id=\"keywordSelect\" name=\"character\" class=\"form-control\" multiple=\"multiple\">\n                <option value=\"Peter\">Shopping Cart</option>\n                <option value=\"Lois\">Add to Cart</option>\n                <option value=\"Chris\">Big Sale</option>\n                <option value=\"Meg\">Discount</option>\n                <option value=\"Stewie\">Festival offer</option>\n                <option value=\"Cleveland\">Big Offer</option>\n                <option value=\"Joe\">Add to Favourite</option>\n                <option value=\"Quagmire\">Glwenn Qtuagmire</option>\n                <option value=\"Evil Monkey\">Etgvil Monkey</option>\n                <option value=\"Herbert\">Jiohn Herbert</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div> -->\n      <!-- row End -->\n      \n      <div class=\"row mb-4\">\n        <div class=\"col-lg-12\">\n          <div class=\"radiotitle mb-2\">Select Browser</div>\n          <section class=\"imgRadioWrapper radioForBrowser\">\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioBrowser_1\" name=\"selectBrowser\" value=\"1\">\n                <label for=\"radioBrowser_1\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon1\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Google Chrome</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioBrowser_2\" name=\"selectBrowser\" value=\"2\" checked>\n                <label for=\"radioBrowser_2\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon2\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Mozilla Firefox</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioBrowser_3\" name=\"selectBrowser\" value=\"3\">\n                <label for=\"radioBrowser_3\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon3\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Internet Explorer</div>\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n        <!-- Col end --> \n      </div>\n      <!-- row End -->\n      \n      <div class=\"row mb-4\">\n        <div class=\"col-12\">\n          <div class=\"custom-control custom-checkbox mb-3\">\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck\" name=\"example1\">\n            <label class=\"custom-control-label customCheckboxLabel\" for=\"customCheck\">Authenticated</label>\n          </div>\n        </div>\n      </div>\n      <!-- row End -->\n      \n      <div class=\"row buttonWrapper\">\n        <div class=\"col\">\n          <button type=\"button\" class=\"btn btn-primary\">Start Scan</button>\n          <div class=\"d-inline-block orBlock\"><span class=\"\">OR</span></div>\n          <button type=\"button\" class=\"btn btn-outline-info\">Schedule Audit</button>\n        </div>\n      </div>\n    </section>\n    <!-- section End -->\n    \n    <section class=\"col-xl-4\">\n      <div class=\"color_box colorGray border-bottom pb-3 mb-5 mb-xl-4\">\n        <div class=\"mb-2 d-table\">\n          <div class=\"d-table-cell\">\n            <div class=\"border-right pr-2\">\n              <div class=\"blockHeading fontSize13\">Search Volume</div>\n              <div class=\"bignumber\">4.3K</div>\n            </div>\n          </div>\n          <div class=\"d-table-cell\">\n            <div class=\"border-right px-2\">\n              <div class=\"blockHeading fontSize13\">Return Rate</div>\n              <div class=\"bignumber\">1.5</div>\n            </div>\n          </div>\n          <div class=\"d-table-cell\">\n            <ul class=\"topGraphLabel fontSize13 px-2\">\n              <li class=\"greenTxt\">With clicks 63%</li>\n              <li class=\"blackTxt\">Without clicks 37%</li>\n            </ul>\n          </div>\n        </div>\n        <div id=\"topStackChart\" style=\"width: 100%; height: 180px; margin: 0 auto\"></div>\n      </div>\n      <!-- color_box End -->\n      \n      <div class=\"border-bottom pb-4 mb-5 mb-xl-4\">\n        <div class=\"blockHeading mt-3\">URL’s by Depth</div>\n        <div id=\"secondStackChart\" style=\"width: 100%; height: 180px; margin: 0 auto\"></div>\n      </div>\n      <!-- End -->\n      \n      <div class=\"mb-1 mb-xl-0\">\n        <div class=\"blockHeading\">Recent URL Searched</div>\n        <ul class=\"list-group list-group-flush mb-4\">\n          <li class=\"list-group-item\">www.dell.com/en-in</li>\n          <li class=\"list-group-item\">www.dellemc.com/hi-in/big-data</li>\n          <li class=\"list-group-item\">www.dell.com/laptops/</li>\n          <li class=\"list-group-item\">www.dellemc.com/hi-in/big-data</li>\n          <li class=\"list-group-item\">www.dellemc.com/hi-in/big-data</li>\n        </ul>\n        <div> <a href=\"\" class=\"linkWidArrow\">View All URL’s</a> </div>\n      </div>\n      <!-- End --> \n    </section>\n    <!-- section End --> \n  </main>\n  <!-- main End --> \n  \n</div>\n<!-- container-fluid End --> \n\n<!-- Content End --> \n\n</body>\n</html>","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface featureData {\r\n\r\n  featureName: string;\r\n  featureId: number;\r\n    active: number;\r\n   \r\n    applicationName:any\r\napplicationId:any;\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-editFeature',\r\n    templateUrl: 'dialog-editFeature.html',\r\n    styleUrls: ['./feature.component.css']\r\n  })\r\n\r\n \r\n\r\n  export class DialogEditFeature {\r\n  \r\n    action:string;\r\n    local_data:any;\r\n    drpApplication:any;\r\n    \r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEditFeature>,\r\n      //@Optional() is used to prevent error if no data is passed\r\n      @Optional() @Inject(MAT_DIALOG_DATA) public data) {\r\n      console.log(data);\r\n      if(data){\r\n        this.local_data =data.row\r\n        this.action = this.local_data.action;\r\n        this.drpApplication=data.applicationName;\r\n      }\r\n      \r\n    }\r\n    doAction(){\r\n      this.dialogRef.close({event:this.action,data:this.local_data});\r\n      \r\n    }\r\n  \r\n    closeDialog(){\r\n      this.dialogRef.close({event:'Cancel'});\r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Select Application</mat-label>\r\n    <mat-select  name=\"applicationName\" [(ngModel)]=\"local_data.applicationName\">\r\n      <mat-option *ngFor=\"let apps of drpApplication\" value={{apps.applicationName}}>\r\n        {{apps.applicationName}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field><br>\r\n    <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} featureName\" name =\"featureName\" matInput [(ngModel)]=\"local_data.featureName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewChild, AfterViewInit,Optional,Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource,MatTable} from '@angular/material/table';\nimport{DialogEditFeature} from './dialog-editFeature'\ninterface Apps {\n  name: string;\n \n}\nexport interface featureData {\n  featureId: number;\n  featureName: string;\n  active:number;\napplicationName:string;\napplicationId:number\n}\n\n\n@Component({\n  selector: 'app-feature',\n  templateUrl: './feature.component.html',\n  styleUrls: ['./feature.component.css']\n})\n\nexport class FeatureComponent implements OnInit {\n  app: Apps[] = [];\n  applicationname:any\n  form: any = {active:1,featureName:'',applicationName:''};\n  message: any\n features: featureData[] = [];\n listStatus =[\n  {name:'Active',value:1,checked:true},\n  {name:'Inactive',value:0,checked:false}\n];\n  displayedColumns: string[] = ['featureId', 'applicationName','featureName',  'active', 'action'];\n  dataSource = new MatTableDataSource(this.features);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n\n  featureNameInvalid:boolean\n  applicationNameInvalid:boolean\n\n  constructor(private service: RestapiserviceService,private router:Router,public dialog:MatDialog) { }\n\n  ngOnInit(): void {\n    this.service.getApplicationName().subscribe(result => {\n      this.applicationname = result;\n      console.log(\"ApplicationName::\"+JSON.stringify(this.applicationname))\n    }, \n    error => console.error(error));\n\n    this.service.getFeatureData().subscribe(\n      data => {\n        this.features = data;\n        this.dataSource = new MatTableDataSource(this.features);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log(\"getFeatureData\" + JSON.stringify(data))\n      }\n    );\n  }\n\n  doSaveFeature(){\n    if(this.ValidateForm()){\n    let resp = this.service.doSaveFeature(this.form,{observe:'response'}).subscribe((response: any) => {\n\n      if (response === 200) {\n        const dialogRef = this.dialog.open(DialogClose, {\n          width: '250px',\n\n        });\n\n      } else {\n\n        this.message = 'Details not saved successfully';\n\n      }\n    }\n\n    );\n  \n    \n  }\n  }\n\n  ngAfterViewInit() {\n   // this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  \n\n  editFeature(action, obj) {\n    \n    obj.action = action;\n    let params = {\n      row: obj,\n      applicationName: this.applicationname\n    };\n    const dialogRef = this.dialog.open(DialogEditFeature, {\n      width: '250px',\n      data: params,\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n  updateRow(row_obj) {\n\n  this.dataSource.data.filter((value, key) => {\n      if (value.featureId == row_obj.featureId) {\n        value.featureName = row_obj.featureName;\n        value.active = row_obj.active;\n\n      }\n\n      return true;\n\n    });\n    let resp = this.service.doEditFeature(row_obj);\n\n  }\n\n  ValidateForm() {\n    let _isValid = true;\n    this.applicationNameInvalid = (!this.form.applicationName || this.form.applicationName == '')\n    this.featureNameInvalid = (!this.form.featureName || this.form.featureName == '')\n    \n    if (this.applicationNameInvalid || this.featureNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n\n}\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>){}\n   \n\n   close() {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"example-container\" style=\"margin-left: 250px;\">\n    <form id=\"accesspanel\" action=\"\"  name=\"form\"  #featureForm=\"ngForm\" (ngSubmit)=\"featureForm.form.valid\" novalidate class=\"feature-form\">\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Select Application</mat-label>\n            <mat-select name=\"applicationName\" [(ngModel)]=\"form.applicationName\" #featureForm=\"ngModel\"\n            (click)=\"applicationNameInvalid == false\" [ngClass]=\"{ 'is-invalid': applicationNameInvalid}\" required>\n              <mat-option *ngFor=\"let apps of applicationname\" value={{apps.applicationName}}>\n                {{apps.applicationName}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <div>\n            <span *ngIf=\"applicationNameInvalid\" style=\"color: red;\">Please Select Application Name </span>\n        </div><br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Feature Name</mat-label>\n      <input matInput class=\"form-control\" name =\"featureName\" [(ngModel)]=\"form.featureName\" #featureForm=\"ngModel\"\n      (click)=\"featureNameInvalid == false\" [ngClass]=\"{ 'is-invalid': featureNameInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"featureNameInvalid\" style=\"color: red;\">Please enter Feature Name </span>\n  </div>\n    <br>\n    <br>\n  \n  <mat-radio-group aria-label=\"Select Status\"  name=\"featureActive\" [(ngModel)]=\"form.active\">\n    <mat-radio-button for=\"featureActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n  </mat-radio-group>\n  <br><br><br>\n  <div class=\"example-button-row\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"doSaveFeature()\">Save</button>\n    <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n   \n  \n  </div>\n  </form>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n      <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n  \n    </div>\n  </div>\n  <br><br>\n  <div class=\"example-header\">\n    <mat-form-field>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n    </mat-form-field>\n  </div>\n  <br>\n  <div class=\"example-container mat-elevation-z8\">\n\n    <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n    \n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- Position Column -->\n      <ng-container matColumnDef=\"featureId\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Feature Id </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.featureId}} </mat-cell>\n      </ng-container>\n    \n       <!-- ApplicationName Column -->\n       <ng-container matColumnDef=\"applicationName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Application Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.applicationName}} </mat-cell>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"featureName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Feature Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.featureName}} </mat-cell>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"active\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n      </ng-container>\n    \n       <!-- Action Column -->\n       <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"editFeature('Update',row)\">\n              <mat-icon aria-label=\"Edit\">edit</mat-icon>\n            </button>\n         \n        </mat-cell>\n      </ng-container>\n\n    \n      \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n      </mat-table>\n    \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    \n   \n    </div>\n  ","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <p  class=\"text-xs-center\">© Copyright 2020. All rights reserved.</p>\n  </footer>","import { Injectable } from '@angular/core';\r\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CustomvalidationService {\r\npatternValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!control.value) {\r\n        return null;\r\n      }\r\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\r\n      const valid = regex.test(control.value);\r\n      return valid ? null : { invalidPassword: true };\r\n    };\r\n  }\r\n\r\n\r\n// custom validator to check that two fields match\r\n   MustMatch(controlName: string, matchingControlName: string) {\r\n    \r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\n//import { MustMatch } from './must-match.validator';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router } from '@angular/router';\r\nimport { CustomvalidationService } from './customValidationService';\r\n\r\nexport interface DialogData {\r\n  userName: any;\r\n  userPassword: string;\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-editHeader',\r\n  templateUrl: 'dialog-editHeader.html',\r\n  // styleUrls: ['./header.component.css']\r\n})\r\n\r\n\r\n\r\nexport class DialogEditHeader implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n\r\n  form: any = {};\r\n  action: string;\r\n  local_data: any;\r\n  username: any;\r\n  message:any;\r\n\r\n  constructor(public service: RestapiserviceService, private formBuilder: FormBuilder,private router: Router, private customValidator: CustomvalidationService,\r\n    public dialogRef: MatDialogRef<DialogEditHeader>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    //  this.local_data=data.newPassword\r\n    //this.local_data=data.userPassword\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\r\n   // this.username = history.state;\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      oldPassword: ['', Validators.required],\r\n      newPassword: ['', //[Validators.required, Validators.minLength(6)]],\r\n      Validators.compose([Validators.required, this.customValidator.patternValidator()])],\r\n\r\n      confirmPassword: ['', Validators.required],\r\n\r\n    }, {\r\n      validator: this.customValidator.MustMatch('newPassword', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log(\"FormControl Data\", JSON.stringify(this.registerForm.value, null, 4))\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    let data = { username: this.username, password: this.registerForm.value }\r\n    this.service.doChangePassword(data,{observe:'response'}).subscribe((response: any) => {\r\n\r\n      if (response === 200) {\r\n        this.message = 'Password Changed successfully';\r\n\r\n        this.dialogRef.close();\r\n        this.router.navigate([\"wecaast/user/login\"])\r\n       \r\n\r\n      } else {\r\n\r\n        this.message = 'Old Password is wrong!';\r\n\r\n      }\r\n    }\r\n\r\n    );\r\n  \r\n    \r\n  }\r\n   \r\n  \r\n\r\n \r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n","<h1 mat-dialog-title>Change Password</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"f.form.valid && onSubmit()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-5\">\r\n  <mat-form-field>\r\n    <mat-label>Old Password</mat-label>\r\n    <input matInput type=\"password\"   formControlName=\"oldPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.oldPassword.errors }\" required>\r\n    \r\n    <div *ngIf=\"submitted && f.oldPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.oldPassword.errors.required\">Password is required</div>\r\n      <div *ngIf=\"f.oldPassword.errors.minlength\">Password must be at least 6 characters</div>\r\n      \r\n  </div>\r\n\r\n  \r\n  </mat-form-field></div><br>\r\n  <div class=\"form-group col\">\r\n  <mat-form-field>\r\n    <mat-label>New Password</mat-label>\r\n    <input matInput type=\"password\"  formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\" required>\r\n    <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.newPassword.errors.required\">Password is required</div>\r\n      <div *ngIf=\"f.newPassword.errors.minlength\">Password must be at least 6 characters</div>\r\n      <span class=\"text-danger\"\r\n                                *ngIf=\"f.newPassword.touched && f.newPassword.errors?.invalidPassword\">\r\n                                Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\r\n                                letter and 1 number\r\n                            </span>\r\n  </div>\r\n  \r\n  </mat-form-field></div><br>\r\n  <div class=\"form-group col\">\r\n  <mat-form-field>\r\n    <mat-label>Confirm Password</mat-label>\r\n    <input matInput type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"  required>\r\n    <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n      <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n  </div>\r\n  \r\n  </mat-form-field></div>\r\n</div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\r\n    <span style=\"color: red;\">{{ message }}</span>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button class=\"btn btn-primary mr-1\" (click)=\"onSubmit()\">Save</button>\r\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport {DialogEditHeader} from './dialog-editHeader';\nimport { RestapiserviceService } from '../restapiservice.service';\n\n\n\n\n\n\nexport interface UserToApplication {\n  applicationId: number;\n  applicationName: string;\n  servicePath: string;\n  appSequence: number;\n \n}\n\n\n\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  oldPassword: string;\n  newPassword: string;\n  role;\n  data;\n paswdData;\nusername:string;\nappdata:any;\nshowMenu:Boolean\n  constructor(private router:Router,public dialog: MatDialog,private service:RestapiserviceService) { }\n  local_data:any\n  ngOnInit(): void {\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    let app =this.service.getUserToApplication(this.username);\n    app.subscribe(result=>{\n      this.appdata = JSON.parse(JSON.stringify(result));\n      \n      console.log(\"ApplicationName DATTATATTATTATATTA : \",this.appdata)\n      console.log(\"ApllicationID:::\",this.appdata[1].applicationId)\n      // setTimeout(() => {\n      //   this.loading=false;\n      // }, 500);\n    })\n\n   \n\n    this.local_data = history.state;\n // this.username=this.local_data.obj.username\n    \n    //sessionStorage.setItem('UserNameInSession',this.username)\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    \n    console.log( this.username)\n    this.role=JSON.parse(sessionStorage.getItem('ROLEInSession'));\n\n    if(this.role==\"ROLE_ADMIN\"){\n      this.showMenu=true;\n    }\n    \n    console.log( \"HEADER_ROLE::\",this.role);\n\n\n\n\n    /*********** 21 May ***********/\n\n\n  // this.service.getUserToApplication(this.username).subscribe(\n  // data => {\n  //  console.log(\"MAPPING DATA : \" , data);\n  // }\n  // );\n\n\n\n\n\n\n  }\n  applicationId:any;\n\n  getApp(apps){\n\n    this.applicationId=sessionStorage.setItem('applicationIdInSession',JSON.stringify(apps.applicationId))\n    console.log(JSON.parse(sessionStorage.getItem('applicationIdInSession')));\n  }\n \n  doChangePassword(): void {\n    const dialogRef = this.dialog.open(DialogEditHeader, {\n      width: '250px',\n      data: {oldPassword: this.oldPassword, newPassword: this.newPassword}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n     //this.oldPassword=result\n      this.newPassword = result;\n // this.paswdData ={getUsername:this.username,getNewPassword:this.newPassword,getOldPassword:this.oldPassword};\n\n\n    //  let resp=this.service.doChangePassword(this.paswdData);\n      console.log('Newpaswd::',this.newPassword);\n      console.log('old::',this.oldPassword)\n      console.log('user::',this.username)\n    });\n  \n  } \n\n  doLogout(){\n    sessionStorage.clear();\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    this.router.navigate([\"wecaast/user/login\"])\n  }\n\n\n\n\n \n\n\n\n\n\n}\n\n\n\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container\">\n  <img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\">\n    \n    <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\" aria-controls=\"navbarCollapse\"\n      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n\n\n\n      \n  \n\n\n\n\n      <ul class=\"navbar-nav mr-auto\">\n\n        <li class=\"nav-item\"  *ngFor=\"let apps of appdata\" value={{apps.applicationName}} style=\"width: max-content;\">\n          <a class=\"nav-link\" href={{apps.servicePath}} (click)=\"getApp(apps)\"> {{apps.applicationName}}\n          </a>\n        </li>\n        \n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"wecaast/auditscan/\">TagSure</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/eSat\">eSat</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/WebAssure\">WebAssure</a>\n        </li> -->\n        <li class=\"nav-item dropdown\" *ngIf=\"showMenu\" style=\"width: max-content;\">\n          <a class=\"nav-link menu-item dropdown-toggle\" [matMenuTriggerFor] = \"menu\" style=\"cursor:pointer;\">Configuration</a>\n          \n          <mat-menu #menu = \"matMenu\">\n            <button mat-menu-item [matMenuTriggerFor] = \"role\">Role</button>\n            <button mat-menu-item [matMenuTriggerFor] = \"user\">User</button>\n             <button mat-menu-item  [matMenuTriggerFor] = \"application\">Application</button>\n             <button mat-menu-item  [matMenuTriggerFor] = \"feature\">Feature</button>\n             <button mat-menu-item [matMenuTriggerFor] = \"client\">Client</button>\n          </mat-menu>\n          <mat-menu #user = \"matMenu\">\n            <button mat-menu-item  [routerLink]=\"['/wecaast/user/adduser']\">Add/Edit User</button>\n            \n         </mat-menu>\n          <mat-menu #application = \"matMenu\">\n            <button mat-menu-item [routerLink]=\"['/wecaast/user/application']\">Add/Edit Application</button>\n            \n         </mat-menu>\n         <mat-menu #feature = \"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/wecaast/user/feature']\">Add/Edit Feature</button>\n          \n       </mat-menu>\n\n         <mat-menu #client = \"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/wecaast/user/client']\">Add/Edit Client</button>\n          \n       </mat-menu>\n          <mat-menu #role = \"matMenu\">\n            \n             <button mat-menu-item [routerLink]=\"['/wecaast/user/role']\">Add/Edit Role</button>\n            \n          </mat-menu>\n          \n          </li>         \n                    \n          <li class=\"nav-item\">\n            <a name =\"username\" class=\"nav-link menu-item dropdown-toggle\" [matMenuTriggerFor] = \"userMenu\" style=\"cursor: pointer;margin-left: 450px;\">{{username}}</a>\n            <mat-menu #userMenu = \"matMenu\">\n              <button mat-menu-item (click)=\"doChangePassword()\">Change Password</button>\n              <button mat-menu-item (click)=\"doLogout()\">Logout</button>\n               \n            </mat-menu>\n          </li>\n      </ul>\n<div>\n\n\n  \n\n\n</div>\n\n\n\n</div> \n</div>\n  </nav>","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'dialogOpen',\r\n    templateUrl: 'dialogOpen.html',\r\n    styleUrls: ['../role/role.component.css']\r\n  })\r\n\r\n\r\n  \r\n  export class DialogOpen {\r\n    form: any = { emailId: '' };\r\n\r\n    constructor(private service: RestapiserviceService, private router: Router,\r\n        public dialogRef: MatDialogRef<DialogOpen>) {\r\n        \r\n      }\r\n\r\n  doSubmit(){\r\n\r\n    console.log(\"email::\",this.form.emailId)\r\n\r\n    this.service.forgotPasswordEmail(this.form.emailId);\r\n    this.dialogRef.close({});\r\n    \r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n}","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong> Enter Email-ID</strong></h1>\r\n<form name=\"form\" class=\"forgotPassword-form\">\r\n<div mat-dialog-content>\r\n    <mat-form-field>\r\n        \r\n        <input  type=\"email\" placeholder=\"Email-ID\"  class=\" form-control\" name =\"emailId\" matInput [(ngModel)]=\"form.emailId\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n        \r\n      </mat-form-field><br><br>\r\n      \r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doSubmit()\" mat-flat-button color=\"primary\">Submit</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>\r\n</form>","import { Component, OnInit } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { DialogOpen } from './dialogOpen';\n\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  imgCaptcha:any;\n  captchaShow = false;\n  hide = true;\n  username: string;\n  password: string;\n  message: any\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = 'Bad Credentials';\n  loginCounter = 1;\n  counter: any;\n  captchaStr: any;\n  local_data:any;\n  action:any;\n  constructor(private service: RestapiserviceService, private router: Router,public dialog: MatDialog) { \n   // this.local_data =data;\n   // this.action = this.local_data.action;\n  }\n\n  ngOnInit(): void {\n\n    // console.log( sessionStorage.getItem('UserNameInSession'));\n  }\n\n\n\n  doLogin() {\n    debugger;\n     if(this.form.captchaText==this.imgCaptcha){\n       console.log(\"EQUAL CAPTCH\")\n     }\n\n    let resp = this.service.login(this.form);\n    resp.subscribe(data => {\n      this.message = data;\n      console.log(data);\n      this.isLoginFailed = false;\n      this.isLoggedIn = true;\n      sessionStorage.setItem('UserNameInSession', JSON.stringify(this.form.username))\n      console.log(JSON.parse(sessionStorage.getItem('UserNameInSession')));\n\n      sessionStorage.setItem('ROLEInSession', JSON.stringify(data))\n      console.log(\"ROLENAME::\", JSON.parse(sessionStorage.getItem('ROLEInSession')));\n\n      if (data == \"ROLE_ADMIN\") {\n        this.router.navigateByUrl('wecaast/user', { state: { obj: this.form } });\n\n      }\n      else if (data == \"POC, ROLE_USER, SME\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"ROLE_USER\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"ROLE_USER, SME\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"POC, SME\" || \"SME, POC\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"SME\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"POC\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"POC, ROLE_USER\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n    },\n\n\n      err => {\n\n        this.errorMessage = \"Username or Password is incorrect\";\n        this.isLoginFailed = true;\n        this.setLoginCounter(this.isLoginFailed);\n\n      });\n\n\n\n  }\n\n  setLoginCounter(loginForm) {\n    this.loginCounter = this.loginCounter + 1;\n    localStorage.setItem('logCount', this.loginCounter.toString());\n\n    if (this.loginCounter > 1) {\n      //this.counter = 30 * (Math.pow(2, (this.loginCounter / 3) - 1));\n\n      this.captchaLogo();\n      this.captchaShow = true;\n    }\n\n  }\n\n\n  captchaLogo() {\n\n    this.service.captchaLogo().subscribe(data => {\n      debugger;\n      this.imgCaptcha=data\n\n      this.captchaShow = true;\n      //   this.captcha();\n\n      console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX : \",  event.preventDefault());\n\n      event.preventDefault();\n\n       console.log(\"Captcha\", JSON.stringify(this.imgCaptcha));\n\n    });\n    return false;\n     \n  }\n\n  \n  forgotPassword(){\n  \n    const dialogRef = this.dialog.open(DialogOpen, {\n      width: '250px',\n     \n    });\n    dialogRef.afterClosed().subscribe(result => {\n    \n    })\n\n   // this.router.navigate([\"wecaast/user/login/resetPassword\"])\n\n  }\n\n  \n}","<div class=\"background-wrap\">\n  <div class=\"background\"></div>\n</div>\n\n<form id=\"accesspanel\" action=\"\" *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && doLogin()\" #f=\"ngForm\"\n  novalidate>\n  <h1 id=\"litheader\"><img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\"></h1>\n  <div class=\"inset\">\n    <p>\n      <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" required #username=\"ngModel\"\n        id=\"username\" placeholder=\"Username\">\n\n    </p>\n    <div class=\"alert alert-danger\" style=\"background-color:#000\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n      <span style=\"color: red;\"> Username is required!</span>\n\n    </div>\n    <p>\n      <input matInput [type]=\"hide ? 'password' : 'text'\"  name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\n        #password=\"ngModel\" id=\"password\" placeholder=\"Password\">\n\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </p>\n\n    <div class=\"alert alert-danger\" style=\"background-color:#000\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\">\n      <div *ngIf=\"password.errors.required\" style=\"color: red;\">Password is required</div>\n      <div *ngIf=\"password.errors.minlength\" style=\"color: red;\">\n        Password must be at least 8 characters\n      </div>\n    </div>\n    <a  name=\"Forgot Password\" style=\"cursor: pointer;color: red;\" (click)=\"forgotPassword()\">Forgot Password</a>\n  </div>\n\n\n\n  <div class=\"row\" style=\"margin-left: 23%;\" *ngIf=\"captchaShow\">\n\n    <img id=\"captcha_id\" name=\"imgCaptcha\" src=\"../../assets/img/captcha.png\">\n\n\n    <div class=\"col-md-6\" style=\" margin-top: 9px;\" >\n      <a title=\"change captcha text\">\n        <input type=\"button\" style=\"font-weight: bold;color: #8e8efa;\" (click)=\"captchaLogo()\" value=\"refresh\">\n\n      </a>\n    </div>\n  \n<br>\n<input type=\"text\" class=\"form-control\" name=\"captchaText\" [(ngModel)]=\"form.captchaText\" required style=\"width: 50.5%;\">\n  \n</div>\n<br>\n<div class=\"row\">\n\n    <div class=\"col-md-4\" style=\"margin-left: 37px;\">\n\n\n      <input type=\"submit\" class=\"loginButtons\" value=\"Login\" name=\"Login\">\n\n    </div>&nbsp;\n\n\n    <div class=\"col-md-4\" style=\"margin-left: 37px;\">\n      <input type=\"reset\" class=\"loginButtons\" name=\"Cancel\" value=\"Cancel\"></div>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"alert alert-danger\" style=\"background-color:#000\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\n      <span style=\"color: red; margin-left: 37px;\">{{ errorMessage }}</span>\n\n    </div>\n  </div>\n\n</form>\n\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\n//import { MustMatch } from './must-match.validator';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router } from '@angular/router';\r\nimport { CustomvalidationService } from '../header/customValidationService';\r\n\r\n\r\nexport interface DialogData {\r\n    userName: any;\r\n   // userPassword: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n  }\r\n\r\n@Component({\r\n    selector: 'resetPassword',\r\n    templateUrl: './resetPassword.html',\r\n    styleUrls: ['./resetPassword.css']\r\n  })\r\n\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n    registerForm: FormGroup;\r\n    submitted = false;\r\n  \r\n    form: any = {};\r\n    action: string;\r\n    local_data: any;\r\n    username: any;\r\n    message:any;\r\n\r\n    constructor(public service: RestapiserviceService, private formBuilder: FormBuilder,private router: Router, private customValidator: CustomvalidationService) { \r\n        // this.local_data =data;\r\n        // this.action = this.local_data.action;\r\n       }\r\n     \r\n       ngOnInit(): void {\r\n     \r\n        this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\r\n   // this.username = history.state;\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      newPassword: ['', //[Validators.required, Validators.minLength(6)]],\r\n      Validators.compose([Validators.required, this.customValidator.patternValidator()])],\r\n\r\n      confirmPassword: ['', Validators.required],\r\n\r\n    }, {\r\n      validator: this.customValidator.MustMatch('newPassword', 'confirmPassword')\r\n    });\r\n       }\r\n\r\n\r\n// convenience getter for easy access to form fields\r\nget f() { return this.registerForm.controls; }\r\n\r\nresetPassword(){\r\n    this.submitted = true;\r\n    console.log(\"FormControl Data\", JSON.stringify(this.registerForm.value, null, 4))\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    let data = { username: this.registerForm.value.userName, password: this.registerForm.value }\r\n    this.service.doChangePassword(data,{observe:'response'}).subscribe((response: any) => {\r\n\r\n      if (response === 200) {\r\n        this.message = 'Password Changed successfully';\r\n\r\n       // this.dialogRef.close();\r\n        this.router.navigate([\"wecaast/user/login\"])\r\n       \r\n\r\n      } else {\r\n\r\n        this.message = 'Password is wrong!';\r\n\r\n      }\r\n    }\r\n\r\n    );\r\n}\r\n\r\n}","<mat-card class=\"z-depth center\" flex=\"50\" >\r\n<label style=\"font-size: xx-large;\">Reset Password</label>\r\n<br><br>\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"f.form.valid && resetPassword()\">\r\n\r\n\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-5\">\r\n        <mat-form-field>\r\n          <mat-label>UserName</mat-label>\r\n          <input matInput type=\"text\"  formControlName=\"userName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\" required>\r\n          <div *ngIf=\"submitted && f.userName.errors\" class=\"invalid-feedback\">\r\n            \r\n        </div>\r\n        \r\n        </mat-form-field></div></div>\r\n\r\n    <div class=\"form-row\">\r\n  <div class=\"form-group col-5\">\r\n  <mat-form-field>\r\n    <mat-label>New Password</mat-label>\r\n    <input matInput type=\"password\"  formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\" required>\r\n    <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.newPassword.errors.required\">Password is required</div>\r\n      <div *ngIf=\"f.newPassword.errors.minlength\">Password must be at least 6 characters</div>\r\n      <span class=\"text-danger\"\r\n                                *ngIf=\"f.newPassword.touched && f.newPassword.errors?.invalidPassword\">\r\n                                Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\r\n                                letter and 1 number\r\n                            </span>\r\n  </div>\r\n  \r\n  </mat-form-field></div></div>\r\n  <div class=\"form-row\">\r\n  <div class=\"form-group col\">\r\n  <mat-form-field>\r\n    <mat-label>Confirm Password</mat-label>\r\n    <input matInput type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"  required>\r\n    <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n      <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n  </div>\r\n  \r\n  </mat-form-field></div>\r\n</div>\r\n  </form>\r\n\r\n  <button class=\"btn btn-primary mr-1\" (click)=\"resetPassword()\">Reset</button>\r\n  \r\n</mat-card>","import { Component, OnInit, Input, ViewChild, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\n\nimport { Location } from '@angular/common';\n\n\n\n\nexport interface userData {\n\n  userName: string;\n\n}\ninterface Roles {\n  roleName: string;\n\n}\nexport class RoleFeature {\n  featureId:number;\n  roleId:number;\n}\n\nexport class UserRoleMenus {\n  userName: string;\n  roleName: string;\n  roleId: number;\n  dyRows: Array<any>;\n}\n\n@Component({\n  selector: 'app-managePermission',\n\n  templateUrl: './managePermission.component.html',\n  styleUrls: ['./managePermission.component.css']\n})\nexport class ManagePermissionComponent implements OnInit {\n\n  columns: any\n  displayedColumns: any\n\n  users: userData[] = [];\n\n  local_data: any = {};\n  userName: string;\n  applicationName: string;\n  userEmail: string;\n  role: Roles[] = [];\n  role_name: any = { userName: 'AAA' };\n  clientName: string;\n  roleName: string;\n  featureData: any;\n  username: string;\n  checkBoxSelected: any;\n  valueChecked: any;\n  featureName: string;\n  roleNamebyuserId: any;\n  userId: any;\n\n  //displayedColumns: string[] = ['userName', 'roleName','empLastName','userEmail'];\n  // dataSource = new MatTableDataSource(this.role_name);\n  listFeatureID: Array<RoleFeature> = new Array<RoleFeature>();\n\n  listUserRoleMenus: Array<UserRoleMenus> = new Array<UserRoleMenus>();\n  dataSource = new MatTableDataSource(this.listUserRoleMenus);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n  constructor(private service: RestapiserviceService, private router: Router, private location: Location) {\n    //this.displaycolumndefs =this.role_name;\n\n\n  }\n\n\n\n  ngOnInit(): void {\n   // this.local_data = history.state;\n    this.userName = sessionStorage.getItem('SessionUserName');\n\n    this.applicationName = sessionStorage.getItem('SessionApplicationName');\n    this.userEmail = sessionStorage.getItem('SessionUserEmail');\n    this.clientName =sessionStorage.getItem('SessionClientName');\n    this.roleName = sessionStorage.getItem('SessionRoleName');\n\n\n\n    //this is Api\n\n    this.service.getRoleByUserId(this.userName).subscribe(\n      data => {\n        debugger;\n        if (data) {\n          this.roleNamebyuserId = data;\n\n          this.roleNamebyuserId.forEach(roleItem => {\n            let _userRoleMenus: UserRoleMenus = new UserRoleMenus();\n            _userRoleMenus.userName = this.userName;\n            _userRoleMenus.roleName = roleItem.roleName;\n            _userRoleMenus.roleId = roleItem.roleId;\n            _userRoleMenus.dyRows = new Array<any>();\n            this.listUserRoleMenus.push(_userRoleMenus);\n          });\n\n\n        }\n        this.BindFeatureData();\n        console.log(this.roleNamebyuserId)\n      }\n    )\n\n\n\n\n\n\n\n\n\n\n  }\n\n  BindFeatureData() {\n    this.service.getUserFeatureMapping(this.userName).subscribe(\n      data => {\n        debugger;\n        this.listFeatureID = data;\n        console.log(data);\n        this.BindDataSource();\n\n      }\n    );\n\n  }\n\n\n  BindDataSource() {\n\n    this.service.getFeatureData().subscribe(\n      data => {\n\n        this.featureData = data;\n        //this.local_data = history.state;\n        this.userName = sessionStorage.getItem('SessionUserName');\n\n        this.userId = sessionStorage.getItem('SessionUserId');\n       \n        this.columns = [];\n        this.columns.push({ columnDef: 'userName', columnId: 0, header: 'UserName', isCheckBox: false });\n        this.columns.push({ columnDef: 'roleName', columnId: 0, header: 'Role', isCheckBox: false });\n        data.map((a, e) => { return { columnDef: a.featureName, columnId: a.featureId, header: a.featureName, isCheckBox: true }; })\n          .forEach(element => {\n            this.columns.push(element);\n\n          });\n\n\n        this.listUserRoleMenus.forEach(x => {\n          data.forEach(e => {\n            debugger;\n\n            var _markCheck = this.listFeatureID?.some((i) => (i.featureId ?? 0) == e.featureId && i.roleId == x.roleId);\n\n            x.dyRows.push({ id: e.featureId, name: e.featureName, isChecked: _markCheck });\n          });\n        });\n\n        this.dataSource.data = this.listUserRoleMenus;\n      \n        this.displayedColumns = this.columns.map(c => c.columnDef);\n\n        console.log(\"getUserRoleFeatureData:::\" + this.displayedColumns)\n      }\n    );\n  }\n\n  OnSave() {\n    debugger;\n    let columndata: any[] = [];\n\n    var userName = this.userName;\n\n\n    this.listUserRoleMenus.forEach(element => {\n      var dyColumns = element.dyRows;\n\n      var featureIdList = dyColumns\n        .filter((x, i) => x.isChecked == true)\n        .map((x, i) => { return x.id; });\n      columndata.push({ userId: this.userId, roleId: element.roleId, featureIdList });\n      console.log(columndata)\n\n    });\n\n    this.service.doSaveUserFeatureData(columndata);\n  }\n}\n","\n<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\"  name=\"form\" #f=\"ngForm\" novalidate>\n\n    <mat-form-field>\n      <mat-label>UserName</mat-label>\n      <input matInput name =\"userName\" [(ngModel)]=\"userName\" disabled>\n    </mat-form-field><br> \n\n    <mat-form-field>\n      <mat-label>Email Id</mat-label>\n      <input matInput name =\"userEmail\" [(ngModel)]=\"userEmail\" disabled>\n    </mat-form-field>\n<br>\n\n    <mat-form-field>\n      <mat-label>Application Name</mat-label>\n      <input matInput name =\"applicationName\" [(ngModel)]=\"applicationName\" disabled>\n    </mat-form-field><br>\n\n    <mat-form-field>\n      <mat-label>Client Name</mat-label>\n      <input matInput name =\"clientName\" [(ngModel)]=\"clientName\" disabled>\n    </mat-form-field>\n\n  <br>\n  <mat-form-field>\n    <mat-label>Role</mat-label>\n    <input matInput name =\"roleName\" [(ngModel)]=\"roleName\" disabled>\n  </mat-form-field><br>\n  <br><br>\n\n  \n  </form>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n  \n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n          <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.columnDef\">\n            <mat-header-cell *matHeaderCellDef>{{ col.header }}</mat-header-cell>\n            <mat-cell  *matCellDef=\"let row\">\n              <span *ngIf=\"!col.isCheckBox\">{{ row[col.columnDef]}}</span>\n              \n              <div *ngFor=\"let _cRow of row.dyRows\">\n                <mat-checkbox *ngIf=\"_cRow.id==col.columnId\" [(ngModel)]=\"_cRow.isChecked\"></mat-checkbox>\n              </div>\n\n              \n             </mat-cell>\n           \n          </ng-container>\n\n    \n   <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n    </mat-table>\n<br><br>\n    <div class=\"example-button-row\">\n  \n      <button mat-raised-button color=\"primary\" (click)=\"OnSave()\">Save</button>\n      <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n     \n    \n    </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'reportAuditScan',\r\n    templateUrl: './reportAuditScan.html',\r\n   // styleUrls: ['./login.component.css']\r\n  })\r\n  export class ReportAuditScanComponent {\r\n\r\n  }","<button>Download Report </button>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders ,HttpEvent, HttpErrorResponse, HttpEventType,HttpRequest} from '@angular/common/http'; \r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Restapi_auditScan_Service {\r\n\r\n  constructor(private http: HttpClient,private https: HttpClient,private router: Router) { }\r\n  url = \"http://localhost:8002/wecaast/auditscan\";\r\n\r\n\r\n   startScan(auditInput,userName){\r\n        return this.http.post(`${this.url}/seedUrlFunction/`+userName,auditInput).subscribe((result) => {\r\n   \r\n   debugger         // This code will be executed when the HTTP call returns successfully \r\nconsole.log(result);\r\n\r\nif(result!=0){\r\n  this.router.navigate([\"wecaast/auditscan/reportAuditScan\"]);\r\n}\r\n\r\nelse{\r\n  this.router.navigate([\"wecaast/auditscan/seedUrlFunction\"]);\r\n}\r\n\r\n      });\r\n      } \r\n\r\n\r\n  getApplicationToFeature(applicationId:String): Observable<any> {\r\n   \r\n    return this.http.get(`${this.url}/getApplicationToFeature/`+applicationId);\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   pushFileToStorage(file:File): Observable<any> {\r\n          const data: FormData = new FormData();\r\n          data.append('file', file);\r\n       \r\n          console.log(\"DATAAAAAAAAA: \" , data);\r\n          return this.http.post('http://localhost:8002/wecaast/auditscan/savefile', data,{responseType:'text' as 'json'}\r\n      );\r\n    } \r\n\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpEvent,HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestapiserviceService {\n\n  isPasswordEnter = false;\n  isPasswordFailed = false;\n  errorMessage = 'Bad Credentials';\n  message:any;\n\n  constructor(private http: HttpClient) { }\n  url = \"http://localhost:8000/wecaast/user\";\n\n\n\n  login(credentials): Observable<any> {\n\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/login`, { headers, responseType: 'text' as 'json' })\n  }\n\n  doChangePassword(paswdData,response:any){\n\n    //const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(paswdData.username.obj.username + ':' + paswdData.password) });\n    const data= {userName:paswdData.username,userPassword:paswdData.password.oldPassword,newPassword:paswdData.password.newPassword};\n    return this.http.put(`${this.url}/changePassword`, data)\n         \n         \n\n      \n\n  }\n  getClientName(): Observable<any> {\n\n    return this.http.get(`${this.url}/getClientByActive`);\n\n  }\n  getApplicationName(): Observable<any> {\n\n    return this.http.get(`${this.url}/getApplicationByActive`);\n\n  }\n\n  doSaveRole(roleData: any,response:any) {\n    return this.http.post(`${this.url}/createRole`, roleData)\n          \n  }\n  doSaveUser(userData: string,response:any) {\n\n\n    return this.http.post(`${this.url}/createUser`, userData);\n  }\n  doSaveApplication(applicationData: string,response:any) {\n\n\n    return this.http.post(`${this.url}/createApplication`, applicationData);\n  }\n  doSaveFeature(featureData: string,response:any) {\n\n\n    return this.http.post(`${this.url}/createFeatures`, featureData);\n  }\n\n\n  doEditRole(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editRole`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n  doEditFeature(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editFeatures`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  doEditApplication(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editApplication`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  doEditClient(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editClient`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n  doEditUser(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editUser`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  getRoleData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getRole`);\n\n  }\n\n  getUserData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getuser`);\n\n  }\n\n  getApplicationData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getApplication`);\n\n  }\n  getFeatureData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getFeatures`);\n\n  }\n  getRoleByUserId(userName){\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getRoleByUserId/`+userName);\n\n  }\n  \n  doSaveClient(client: string,response:any) {\n    //const body = {clientname: clientName, domainname: domain,clientlogo:clientLogo};\n\n    return this.http.post(`${this.url}/createClient`,client);\n  }\n\n\n  // pushFileToStorage(file:File): Observable<HttpEvent<{}>> {\n  //         const data: FormData = new FormData();\n  //         data.append('file', file);\n  //      \n  //         console.log(\"DATAAAAAAAAA: \" , data);\n  //         const newRequest = new HttpRequest('POST', 'http://localhost:8000/wecaast/user/savefile', data, {\n  //        // reportProgress: true,\n  //        // responseType: 'json'\n  //         });\n  //         return this.http.request(newRequest);\n  //         } \n\n  debugger\n    pushFileToStorage(file:File): Observable<any> {\n       const data: FormData = new FormData();\n          data.append('file', file);\n       \n          console.log(\"DATAAAAAAAAA: \" , data);\n      return this.http.post('http://localhost:8000/wecaast/user/savefile', data,{responseType:'text' as 'json'});\n    }\n\n\n  getClientData(): Observable<any> {\n\n    return this.http.get(`${this.url}/getClient`);\n\n  }\n\n  doSaveUserFeatureData(columnData){\n    return this.http.post(`${this.url}/createUserFeatureMapping`, columnData).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  getUserFeatureMapping(username): Observable<any> {\n\n    return this.http.get(`${this.url}/getUserFeatureMapping/`+username);\n\n  }\n  \n  getRoleName(): Observable<any> {\n\n    return this.http.get(`${this.url}/getRoleByStatus`);\n\n  }\n\n  getApplicationTaggedToUser(username:String):Observable<any> {\n\n    return this.http.get(`${this.url}/getApplicationTaggedToUser/`+username);\n\n  }\n\n\n\n/*********** 21 May ***********/\n\n\ngetUserToApplication(username:String): Observable<any> {\n\n  return this.http.get(`${this.url}/getUserToApplication/`+username);\n\n}\n\n\ncaptchaLogo(): Observable<any> {\n  return this.http.get(`${this.url}/getCaptcha`,{responseType: 'text' as 'json' });\n}\n\nforgotPasswordEmail(emailId){\n  debugger\n  return this.http.post(`${this.url}/forgotPassword/`+emailId, emailId).subscribe(\n    (response) => console.log(response),\n    (error) => console.log(error)\n  );\n}\n\n\n\n}\n\n\n\n","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface roleData {\r\n\r\n    roleName: string;\r\n    roleId: number;\r\n    active: number;\r\n    Action:string;\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-edit',\r\n    templateUrl: 'dialog-edit.html',\r\n    styleUrls: ['./role.component.css']\r\n  })\r\n\r\n \r\n\r\n  export class DialogEdit {\r\n  \r\n    action:string;\r\n    local_data:any;\r\n  \r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEdit>,\r\n      //@Optional() is used to prevent error if no data is passed\r\n      @Optional() @Inject(MAT_DIALOG_DATA) public data: roleData) {\r\n      console.log(data);\r\n      this.local_data =data\r\n      this.action = this.local_data.action;\r\n    }\r\n    doAction(){\r\n      this.dialogRef.close({event:this.action,data:this.local_data});\r\n      \r\n    }\r\n  \r\n    closeDialog(){\r\n      this.dialogRef.close({event:'Cancel'});\r\n    }\r\n  \r\n  }\r\n  \r\n  ","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field>\r\n        \r\n        <input placeholder=\"{{action}} RoleName\"  class=\" form-control\" name =\"roleName\" matInput [(ngModel)]=\"local_data.roleName\">\r\n        \r\n      </mat-form-field><br><br>\r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div><br><br>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewChild, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { DialogEdit } from './dialog-edit';\n\nexport interface roleData {\n\n  roleName: string;\n  roleId: number;\n  active: number;\n  Action: string;\n\n}\n\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\n\nexport class RoleComponent implements OnInit {\n\n\n  form: any = { active: 1, roleName: '' };\n  message: any\n  users: roleData[] = [];\n  displayedColumns: string[] = ['roleId', 'roleName', 'active', 'action'];\n  dataSource = new MatTableDataSource(this.users);\n\n\n  listStatus = [\n    { name: 'Active', value: 1, checked: true },\n    { name: 'Inactive', value: 0, checked: false }\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n  //=============================================================\n\n  roleNameInvalid: boolean;\n\n\n  constructor(private service: RestapiserviceService, private router: Router, public dialog: MatDialog) { }\n\n  onSubmit(form) {\n    console.log(form.value)\n  }\n  ngOnInit(): void {\n\n\n    this.service.getRoleData().subscribe(\n      data => {\n        this.users = data;\n        this.dataSource = new MatTableDataSource(this.users);\n\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n\n        console.log(\"GETROLE\" + JSON.stringify(data))\n      }\n    );\n  }\n  doSaveRole() {\n    //this.form.valid\n    debugger;\n    if (this.ValidateForm()) {\n      \n      this.service.doSaveRole(this.form, { observe: 'response' })\n\n        .subscribe((response: any) => {\n\n          if (response === 200) {\n            const dialogRef = this.dialog.open(DialogClose, {\n              width: '250px',\n\n            });\n\n          } else {\n\n            this.message = 'Role not saved successfully';\n\n          }\n        }\n\n        );\n\n    }\n\n  }\n\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  editValue(action, obj) {\n    obj.action = action;\n    const dialogRef = this.dialog.open(DialogEdit, {\n      width: '250px',\n      data: obj\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n\n  updateRow(row_obj) {\n\n    this.dataSource.data.filter((value, key) => {\n      if (value.roleId == row_obj.roleId) {\n        value.roleName = row_obj.roleName;\n        value.active = row_obj.active;\n\n      }\n\n      return true;\n\n    });\n    let resp = this.service.doEditRole(row_obj);\n\n  }\n\n  ValidateForm() {\n    let _isValid = true;\n\n    this.roleNameInvalid = (!this.form.roleName || this.form.roleName == '')\n\n    if (this.roleNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n}\n\n\n\n\n\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>) { }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n","<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\"  name=\"form\" #roleForm=\"ngForm\" (ngSubmit)=\"roleForm.form.valid && onSubmit(roleForm)\" novalidate class=\"role-form\">\n    <div class=\"form-group\">\n    <mat-form-field class=\"example-full-width\">\n    <mat-label>Role Name</mat-label>\n    <input matInput class=\"form-control\" name =\"roleName\" [(ngModel)]=\"form.roleName\" #roleName=\"ngModel\"\n    (click)=\"roleNameInvalid == false\" [ngClass]=\"{ 'is-invalid': roleNameInvalid}\" required>\n  </mat-form-field>\n  <div>\n    <span *ngIf=\"roleNameInvalid\" style=\"color: red;\">Name is required</span>\n</div>\n\n \n  </div>\n  \n<mat-radio-group aria-label=\"Select Status\" name=\"roleActive\" [(ngModel)]=\"form.active\">\n  <mat-radio-button for=\"roleActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n \n</mat-radio-group>\n<br><br><br>\n<div class=\"example-button-row\">\n\n  <button mat-raised-button color=\"primary\" (click)=\"doSaveRole()\">Save</button>\n  <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n \n\n</div>\n</form>\n</div>\n\n\n\n<br><br>\n\n\n<div class=\"form-group\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n    <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n\n  </div>\n</div>\n     \n\n       \n  \n     \n\n<br><br>\n\n<div class=\"example-header\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n  \n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"roleId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Role Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.roleId}} </mat-cell>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"roleName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Role Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.roleName}} </mat-cell>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n    </ng-container>\n  \n     <!-- Action Column -->\n     <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"editValue('Update',row)\">\n            <mat-icon aria-label=\"Edit\">edit</mat-icon>\n          </button>\n       \n      </mat-cell>\n    </ng-container>\n    \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n    </mat-table>\n  \n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  \n \n  </div>","\r\n<div mat-dialog-content>\r\n  <p>Details have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class UserRequest{\n\n  //private baseUrl = '/wecaast/user';\n\n  userId:string;\n   userName:string;\n   userEmail:string;\n     \n  constructor(\n    private _userId:string,\n    public _userName:string,\n    private _userEmail:string\n   \n  ) {\n\t   this.userId = _userId;\n       this.userName = _userName;\n\t   this.userEmail = _userEmail;\n      \n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientService {\n\n  url = 'http://localhost:8000/wecaast/user/getName';  \n\n  constructor(private http:HttpClient) { }\n\n getUserRequestList(): Observable<UserRequest[]> {  \n  var response = this.http.get<UserRequest[]>(this.url);  \n  console.log(\"DATA:\", response);\n  return response;\n}  \n}","import { Component, Optional, Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface userData {\r\n  userId: number;\r\n  userName: string;\r\n  userFirstName: string;\r\n  empLastName: string;\r\n  userEmail: string;\r\n  active: number;\r\n  applicationName: string;\r\n  applicationId: number\r\n  clientName: string;\r\n  role: Array<any>\r\n  client: Array<any>\r\n  application: Array<any> \r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-editUser',\r\n  templateUrl: 'dialog-editUser.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\n\r\n\r\nexport class DialogEditUser {\r\n\r\n  action: string;\r\n  local_data: any;\r\n  drpApplication: any\r\n  drpClients: any\r\n  drpRoles = new Array();\r\n  // selectedRole: any[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogEditUser>,\r\n    //@Optional() is used to prevent error if no data is passed\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data) {\r\n    console.log(data);\r\n    if (data) {\r\n      this.local_data = data.row;\r\n      this.action = this.local_data.action;\r\n      this.drpApplication = data.applicationName;\r\n      this.drpClients = data.clientName;\r\n      this.drpRoles = data.role;\r\n      this.local_data.role = data.row.roleName?.split(',');\r\n      this.local_data.client = data.row.clientName?.split(',');\r\n      this.local_data.application = data.row.applicationName?.split(',');\r\n    }\r\n\r\n  }\r\n  doAction() {\r\n    this.dialogRef.close({ event: this.action, data: this.local_data });\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close({ event: 'Cancel' });\r\n  }\r\n\r\n}\r\n\r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} UserName\" name =\"userName\" matInput [(ngModel)]=\"local_data.userName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} userFirstName\" name =\"userFirstName\" matInput [(ngModel)]=\"local_data.userFirstName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} empLastName\" name =\"empLastName\" matInput [(ngModel)]=\"local_data.empLastName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} userEmail\" name =\"userEmail\" matInput [(ngModel)]=\"local_data.userEmail\">\r\n        \r\n      </mat-form-field><br>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Select Application</mat-label>\r\n        <mat-select  name=\"applicationName\" [(ngModel)]=\"local_data.application\" multiple>\r\n          <mat-option *ngFor=\"let apps of drpApplication\" value={{apps.applicationName}}>\r\n            {{apps.applicationName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Select Client</mat-label>\r\n        <mat-select  name=\"clientName\" [(ngModel)]=\"local_data.client\" multiple>\r\n          <mat-option *ngFor=\"let clients of drpClients\" value={{clients.clientName}}>\r\n            {{clients.clientName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br>\r\n      <mat-form-field>\r\n        <mat-label>Select Role</mat-label>\r\n        <mat-select  name=\"role\" [(ngModel)]=\"local_data.role\" multiple>\r\n          <mat-option *ngFor=\"let roles of drpRoles\" value={{roles.roleName}}>\r\n            {{roles.roleName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br>\r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewChild, ChangeDetectorRef, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { DialogEditUser } from './dialog-editUser';\nimport { FormControl } from '@angular/forms';\n\n\ninterface Apps {\n  name: string;\n\n}\n\nexport interface userData {\n  userId: number;\n  userName: string;\n  userFirstName: string;\n  empLastName: string;\n  userEmail: string;\n  active: any;\n  applicationName: string;\n  applicationId: number;\n  clientName: string;\n  roleName: string;\n  role: Array<any>;\n  client: Array<any>;\n  application:Array<any>;\n}\n\n\n\n@Component({\n  selector: 'app-user',\n\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  statusCheck: boolean;\n\n  userId: any;\n  userName: any\n  applicationName: any;\n  userEmail: any;\n  clientName: any;\n  roleName: any;\n  users: userData[] = [];\n  app: Apps[] = [];\n  applicationname: any\n  form: any = { active: 1, userName: '', userFirstName: '', empLastName: '', userEmail: '', application: '', client: '', role: '' };\n  message: any\n  listStatus = [\n    { name: 'Active', value: 1, checked: true },\n    { name: 'Inactive', value: 0, checked: false }\n  ];\n\n  displayedColumns: string[] = ['userId', 'userName', 'userFirstName', 'empLastName', 'userEmail', 'applicationName', 'clientName', 'roleName', 'active', 'action', 'permission'];\n  dataSource = new MatTableDataSource(this.users);\n\n  role_name: any\n  clientname: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n\n\n  userEmailInvalid: boolean\n  userNameInvalid: boolean\n  applicationNameInvalid: boolean\n  roleInvalid: boolean\n  clientNameInvalid: boolean\n  userFirstNameInvalid: boolean\n  empLastNameInvalid: boolean\n\n\n  constructor(private service: RestapiserviceService, private router: Router, public dialog: MatDialog, private changeDetectorRefs: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.users);\n\n\n\n\n\n    this.service.getApplicationName().subscribe(result => {\n      this.applicationname = result;\n\n    }, error => console.error(error));\n\n    this.service.getClientName().subscribe(result => {\n      this.clientname = result;\n    }, error => console.error(error));\n\n    this.service.getRoleName().subscribe(result => {\n      this.role_name = result;\n    }, error => console.error(error));\n\n    this.service.getUserData().subscribe(\n      data => {\n        this.users = data;\n        this.dataSource = new MatTableDataSource(this.users);\n        sessionStorage.setItem('UserDataInSession', JSON.stringify(this.users));\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        sessionStorage.setItem('ROLE_NAME_MAPPING_in_Session', JSON.stringify(this.users));\n      }\n    );\n  }\n\n  doSaveUser() {\n    if (this.ValidateForm()) {\n      let resp = this.service.doSaveUser(this.form, { observe: 'response' }).subscribe((response: any) => {\n\n        if (response === 200) {\n          const dialogRef = this.dialog.open(DialogClose, {\n            width: '250px',\n\n          });\n\n        } else {\n\n          this.message = 'Details not saved successfully';\n\n        }\n      }\n\n      );\n    }\n  }\n\n  ngAfterViewInit() {\n    //this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  editUser(action, obj) {\n    obj.action = action;\n    let params = {\n      row: obj,\n      applicationName: this.applicationname,\n      clientName: this.clientname,\n      role: this.role_name,\n      \n    };\n    const dialogRef = this.dialog.open(DialogEditUser, {\n      width: '250px',\n      data: params,\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n\n  editPermission(action, obj) {\n\n    this.router.navigateByUrl('wecaast/user/adduser/managePermission', { state: { obj } });\n    this.userName = sessionStorage.setItem('SessionUserName', obj.userName);\n    this.applicationName = sessionStorage.setItem('SessionApplicationName', obj.applicationName);\n    this.userEmail = sessionStorage.setItem('SessionUserEmail', obj.userEmail);\n    this.clientName = sessionStorage.setItem('SessionClientName', obj.clientName);\n    this.roleName = sessionStorage.setItem('SessionRoleName', obj.roleName);\n    this.userId = sessionStorage.setItem('SessionUserId', obj.userId);\n  }\n\n\n  updateRow(row_obj) {\n\n\n    this.dataSource.data.filter((value, key) => {\n      if (value.userId == row_obj.userId) {\n        value.userName = row_obj.userName;\n        value.userFirstName = row_obj.userFirstName;\n        value.empLastName = row_obj.empLastName;\n        value.userEmail = row_obj.userEmail;\n        value.active = row_obj.active;\n        value.applicationName = row_obj.applicationName;\n        value.clientName = row_obj.clientName;\n        value.roleName = row_obj.roleName;\n\n      }\n\n      return true;\n\n    });\n\n    let resp = this.service.doEditUser(row_obj);\n\n\n  }\n\n\n  ValidateForm() {\n    let _isValid = true;\n    this.userFirstNameInvalid = (!this.form.userFirstName || this.form.userFirstName == '')\n    this.empLastNameInvalid = (!this.form.empLastName || this.form.empLastName == '')\n    this.userEmailInvalid = (!this.form.userEmail || this.form.userEmail == '')\n    this.userNameInvalid = (!this.form.userName || this.form.userName == '')\n    this.applicationNameInvalid = (!this.form.application || this.form.application == '')\n    this.roleInvalid = (!this.form.role || this.form.role == '')\n    this.clientNameInvalid = (!this.form.client || this.form.client == '')\n\n    if (this.userFirstNameInvalid || this.empLastNameInvalid || this.userEmailInvalid || this.userNameInvalid || this.applicationNameInvalid || this.roleInvalid || this.clientNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n}\n\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>) { }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\" name=\"form\"  #userForm=\"ngForm\" (ngSubmit)=\"userForm.form.valid\" novalidate class=\"role-form\">\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <mat-form-field>\n          <mat-label>First Name</mat-label>\n          <input matInput class=\"form-control\" name=\"userFirstName\" [(ngModel)]=\"form.userFirstName\" #userForm=\"ngModel\"\n          (click)=\"userFirstNameInvalid == false\" [ngClass]=\"{ 'is-invalid': userFirstNameInvalid}\" required>\n        </mat-form-field>\n        <div>\n          <span *ngIf=\"userFirstNameInvalid\" style=\"color: red;\">Please enter FirstName </span>\n      </div>\n      </div>\n      <br>\n\n      <div class=\"col-md-2\">\n        <mat-form-field>\n          <mat-label>Last Name</mat-label>\n          <input matInput class=\"form-control\" name=\"empLastName\" [(ngModel)]=\"form.empLastName\" #userForm=\"ngModel\"\n          (click)=\"empLastNameInvalid == false\" [ngClass]=\"{ 'is-invalid': empLastNameInvalid}\" required>\n        </mat-form-field>\n        <div>\n          <span *ngIf=\"empLastNameInvalid\" style=\"color: red;\">Please enter LastName </span>\n      </div>\n      </div>\n    </div>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n    <mat-form-field>\n      <mat-label>Email Id</mat-label>\n      <input matInput type=\"email\" class=\"form-control\" name=\"userEmail\" [(ngModel)]=\"form.userEmail\" #userForm=\"ngModel\"\n      (click)=\"userEmailInvalid == false\" [ngClass]=\"{ 'is-invalid': userEmailInvalid}\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n    </mat-form-field>\n    <div *ngIf=\"userEmailInvalid\">\n      <span *ngIf=\"userEmailInvalid\" style=\"color: red;\">Please enter Email-ID </span>\n      <span  *ngIf=\"userEmail.errors.pattern && userEmail.touched\" style=\"color: red;\">Please provide a valid email address</span>\n  </div></div>\n    <br>\n   \n      <div class=\"col-md-2\">\n    <mat-form-field>\n      <mat-label>User Name</mat-label>\n      <input matInput class=\"form-control\" name=\"userName\" [(ngModel)]=\"form.userName\" #userForm=\"ngModel\"\n      (click)=\"userNameInvalid == false\" [ngClass]=\"{ 'is-invalid': userNameInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"userNameInvalid\" style=\"color: red;\">Please enter UserName </span>\n  </div>\n    <br></div></div>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n    <mat-form-field>\n      <mat-label>Select Application</mat-label>\n      <mat-select name=\"application\" [(ngModel)]=\"form.application\" #userForm=\"ngModel\" multiple\n      (click)=\"applicationNameInvalid == false\" [ngClass]=\"{ 'is-invalid': applicationNameInvalid}\" required>\n        <mat-option *ngFor=\"let apps of applicationname\" value={{apps.applicationName}}>\n          {{apps.applicationName}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"applicationNameInvalid\" style=\"color: red;\">Please Select Application</span>\n  </div>\n  </div>\n    \n    <div class=\"col-md-3\">\n      \n      <mat-form-field>\n        <mat-label>Select Role</mat-label>\n        <mat-select  name=\"role\" [(ngModel)]=\"form.role\" multiple #userForm=\"ngModel\"\n        (click)=\"roleInvalid == false\" [ngClass]=\"{ 'is-invalid': roleInvalid}\" required>\n          <mat-option *ngFor=\"let roles of role_name\" value={{roles.roleName}}>\n            {{roles.roleName}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div>\n        <span *ngIf=\"roleInvalid\" style=\"color: red;\">Please Select Role </span>\n    </div>\n    </div></div><br>\n\n\n\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <mat-form-field>\n          <mat-label>Select Client</mat-label>\n          <mat-select  name=\"client\" [(ngModel)]=\"form.client\" #userForm=\"ngModel\" multiple\n          (click)=\"clientNameInvalid == false\" [ngClass]=\"{ 'is-invalid': clientNameInvalid}\" required>\n            <mat-option *ngFor=\"let clients of clientname\" value={{clients.clientName}}>\n              {{clients.clientName}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <div>\n          <span *ngIf=\"clientNameInvalid\" style=\"color: red;\">Please Select Client </span>\n      </div>\n\n        </div>\n    \n        <div class=\"col-md-4\">\n          <mat-radio-group aria-label=\"Select Status\" name=\"userActive\" [(ngModel)]=\"form.active\">\n            <mat-radio-button for=\"userActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n          </mat-radio-group></div></div>\n   <br>\n    <div class=\"example-button-row\" style=\"margin-left:174px;\">\n\n      <button mat-raised-button color=\"primary\" (click)=\"doSaveUser()\">Save</button>&nbsp;\n      <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n\n\n    </div>\n  </form>\n</div>\n<div class=\"form-group\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n    <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n\n  </div>\n</div>\n<br><br>\n<div class=\"example-header\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"userId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> User Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userId}} </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"userFirstName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> First Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userFirstName}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"empLastName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.empLastName}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"userEmail\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userEmail}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"userName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userName}} </mat-cell>\n    </ng-container>\n    <!-- application Column -->\n\n    <ng-container matColumnDef=\"applicationName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Application Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.applicationName}} </mat-cell>\n    </ng-container>\n\n<!-- ClientName Column -->\n<ng-container matColumnDef=\"clientName\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n  <mat-cell *matCellDef=\"let element\"> {{element.clientName}} </mat-cell>\n</ng-container>\n\n<!-- Role Column -->\n<ng-container matColumnDef=\"roleName\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header > Role </mat-header-cell>\n  <mat-cell *matCellDef=\"let element\"> {{element.roleName}} </mat-cell>\n\n</ng-container>\n    <!-- Active Column -->\n    <ng-container matColumnDef=\"active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\"\n          (click)=\"editUser('Update',row)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n      </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"permission\" >\n      <mat-header-cell *matHeaderCellDef>Manage Permissions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n  \n        <button mat-button matTooltip=\"Click to give permissions\" class=\"\" color=\"primary\" [disabled]=\"row.active === 'Inactive'\"\n        (click)=\"editPermission('Update',row)\">\n        Give Permissions\n      </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"> </mat-row>\n  </mat-table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n\n</div>","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}