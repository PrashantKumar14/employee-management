{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/application/application.component.ts","./src/app/application/application.component.html","./src/app/application/dialog-open.html","./src/app/application/dialog-editApplication.ts","./src/app/application/dialog-editApplication.html","./src/app/audit-scan-header/audit-scan-header.component.ts","./src/app/audit-scan-header/audit-scan-header.component.html","./src/app/auditscan/auditscan.component.ts","./src/app/auditscan/auditscan.component.html","./src/app/client/client.component.ts","./src/app/client/client.component.html","./src/app/client/dialog-open.html","./src/app/client/dialog-editClient.ts","./src/app/client/dialog-edit.html","./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/feature/dialog-editFeature.ts","./src/app/feature/dialog-editFeature.html","./src/app/feature/feature.component.ts","./src/app/feature/feature.component.html","./src/app/feature/dialog-open.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/customValidationService.ts","./src/app/header/dialog-editHeader.ts","./src/app/header/dialog-editHeader.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/login/dialogOpen.ts","./src/app/login/dialogOpen.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/resetPassword.ts","./src/app/login/resetPassword.html","./src/app/managePermission/managePermission.component.ts","./src/app/managePermission/managePermission.component.html","./src/app/reportForAuditScan/reportAuditScan.ts","./src/app/reportForAuditScan/reportAuditScan.html","./src/app/restapi_auditScan_Service.ts","./src/app/restapiservice.service.ts","./src/app/role/dialog-edit.ts","./src/app/role/dialog-edit.html","./src/app/role/role.component.ts","./src/app/role/role.component.html","./src/app/role/dialog-open.html","./src/app/service/http-client.service.ts","./src/app/user/dialog-editUser.ts","./src/app/user/dialog-editUser.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user/dialog-open.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n\n</style>\n</head>\n<body>\n\n<app-header></app-header>\n<div class=\"main\">\n  <br> <br>\n\n \n <router-outlet></router-outlet>\n  \n</div>\n\n</body>\n</html> \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeComponent } from './employee/employee.component';\nimport{ LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\n\nimport { RoleComponent } from './role/role.component';\nimport { ClientComponent } from './client/client.component';\nimport { UserComponent } from './user/user.component';\nimport { ApplicationComponent } from './application/application.component';\nimport {ManagePermissionComponent} from './managePermission/managePermission.component';\n\nimport { FeatureComponent } from './feature/feature.component';\nimport { AuditscanComponent } from './auditscan/auditscan.component';\nimport { ResetPasswordComponent } from './login/resetPassword';\nimport{ReportAuditScanComponent} from './reportForAuditScan/reportAuditScan';\n\nconst routes: Routes = [\n {path: \"\", redirectTo: \"/wecaast/user\", pathMatch: \"full\" },\n  {path: '', component: EmployeeComponent},\n  {path: 'wecaast/user/userpage', component: LoginComponent},\n  {path: 'wecaast/user/login', component: LoginComponent},\n  {path: 'wecaast/user/welcome', component: LoginComponent},\n  {path: 'wecaast/auditscan/seedUrlFunction', component: AuditscanComponent},\n  {path: 'wecaast/auditscan', component: AuditscanComponent},\n  {path: 'user/managePermission', component: ManagePermissionComponent},\n  {path: 'wecaast/auditscan/savefile', component: AuditscanComponent}, \n  {path:'wecaast/auditscan/reportAuditScan',component:ReportAuditScanComponent},\n  {path:'wecaast/user/login/resetPassword',component:ResetPasswordComponent},\n  {path:\"wecaast/user\",component:AdminComponent, children:[\n    {\n      path: 'role',\n      component: RoleComponent\n    },\n    {\n      path: 'client',\n      component: ClientComponent\n    },\n    {\n      path: 'adduser',\n      component: UserComponent\n    },\n    {\n      path: 'application',\n      component: ApplicationComponent\n    },\n    {\n      path: 'feature',\n      component: FeatureComponent\n    },\n    {\n      path: 'adduser/managePermission',\n      component: ManagePermissionComponent\n    },\n  ]},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weCaast';\n}\n","\r\n      <router-outlet></router-outlet>\r\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport{ReportAuditScanComponent} from './reportForAuditScan/reportAuditScan';\nimport { ResetPasswordComponent } from './login/resetPassword';\n\nimport { EmployeeComponent } from './employee/employee.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { RestapiserviceService } from './restapiservice.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\n\nimport { RoleComponent } from './role/role.component';\nimport {ClientComponent } from './client/client.component';\n\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\n\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule } from '@angular/material/form-field';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { DialogEdit } from './role/dialog-edit';\nimport { DialogEditClient } from './client/dialog-editClient';\nimport { DialogEditUser } from './user/dialog-editUser';\nimport { DialogOpen } from './login/dialogOpen';\nimport { UserComponent } from './user/user.component';\nimport { ApplicationComponent } from './application/application.component';\nimport { DialogEditApplication } from './application/dialog-editApplication';\nimport { ManagePermissionComponent } from './managePermission/managePermission.component';\nimport { FeatureComponent } from './feature/feature.component';\nimport { DialogEditFeature } from './feature/dialog-editFeature';\nimport { AuditscanComponent } from './auditscan/auditscan.component';\nimport { DialogEditHeader } from './header/dialog-editHeader';\nimport { NgxBootstrapSliderModule } from 'ngx-bootstrap-slider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { AuditScanHeaderComponent } from './audit-scan-header/audit-scan-header.component' \n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    LoginComponent,\n    AdminComponent,\n    HeaderComponent,\n    FooterComponent,\n\n    RoleComponent,\n    ClientComponent,\n    UserComponent,\n    DialogEdit, \n    DialogEditClient, \n    DialogOpen,\n    UserComponent,\n    DialogEditUser, \n    ApplicationComponent,\n    DialogEditApplication, \n    ManagePermissionComponent, FeatureComponent,DialogEditFeature, AuditscanComponent\n  ,DialogEditHeader, AuditScanHeaderComponent,ResetPasswordComponent,ReportAuditScanComponent\n    \n  ],\n  imports: [\n    MatProgressSpinnerModule ,\n    NgxBootstrapSliderModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatListModule,\n   \n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n   \n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    \n  ],\n  entryComponents: [\n    DialogEdit,\n    DialogEditClient,\n    DialogEditUser,DialogEditApplication, DialogEditFeature,DialogOpen\n  ],\n  providers: [RestapiserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit, ViewChild, Input, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { DialogEditApplication } from './dialog-editApplication';\n\n\n\ninterface Clients {\n  name: string;\n\n}\nexport interface applicationData {\n  applicationId: number;\n  applicationName: string;\n  active: number;\n  clientName: string;\n  clientId: number;\n\n}\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n \n\n  apps: applicationData[] = [];\n  client: Clients[] = [];\n  clientname: any\n  form: any = { active: 1, applicationName:'',clientName:'' };\n  displayedColumns: string[] = ['applicationId', 'clientName', 'applicationName', 'active', 'action'];\n  dataSource = new MatTableDataSource(this.apps);\n\n  listStatus = [\n    { name: 'Active', value: 1, checked: true },\n    { name: 'Inactive', value: 0, checked: false }\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n  clientNameInvalid: boolean;\n  applicationNameInvalid: boolean;\nmessage:any\n\n  constructor(private service: RestapiserviceService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n\n    this.service.getClientName().subscribe(result => {\n      this.clientname = result;\n    }, error => console.error(error));\n\n    this.service.getApplicationData().subscribe(\n      data => {\n        this.apps = data;\n        this.dataSource = new MatTableDataSource(this.apps);\n\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        console.log(\"getApplicationData\" + JSON.stringify(data))\n      }\n    );\n  }\n  doSaveApplication() {\n    if (this.ValidateForm()) {\n\n\n      let resp = this.service.doSaveApplication(this.form,{observe:'response'}).subscribe((response: any) => {\n\n        if (response === 200) {\n          const dialogRef = this.dialog.open(DialogClose, {\n            width: '250px',\n\n          });\n\n        } else {\n\n          this.message = 'Details not saved successfully';\n\n        }\n      }\n\n      );\n    }\n  }\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n    //  this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  editApplication(action, obj) {\n\n    obj.action = action;\n    let params = {\n      row: obj,\n      clientName: this.clientname\n    };\n\n    const dialogRef = this.dialog.open(DialogEditApplication, {\n      width: '250px',\n      data: params\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n  updateRow(row_obj) {\n\n    this.dataSource.data.filter((value, key) => {\n      if (value.applicationId == row_obj.applicationId) {\n        value.applicationName = row_obj.applicationName;\n        value.active = row_obj.active;\n\n      }\n\n      return true;\n\n    });\n    let resp = this.service.doEditApplication(row_obj);\n\n  }\n\n\n  ValidateForm() {\n    let _isValid = true;\n\n    this.clientNameInvalid = (!this.form.clientName || this.form.clientName == '')\n    this.applicationNameInvalid = (!this.form.applicationName || this.form.applicationName == '')\n    if (this.applicationNameInvalid || this.clientNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n\n}\n\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>) { }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"example-container\" style=\"margin-left: 250px;\">\n    <form id=\"accesspanel\" action=\"\"  name=\"form\"   #appForm=\"ngForm\" (ngSubmit)=\"appForm.form.valid\" \n    novalidate  class=\"app-form\">\n        <mat-form-field class=\"example-full-width\">\n        <mat-label>Select Client</mat-label>\n        <mat-select  name=\"clientName\" [(ngModel)]=\"form.clientName\" #appForm=\"ngModel\"\n        (click)=\"clientNameInvalid = false\" [ngClass]=\"{ 'is-invalid': clientNameInvalid }\" required>\n          <mat-option *ngFor=\"let clients of clientname\" value={{clients.clientName}}>\n            {{clients.clientName}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div>\n        <span *ngIf=\"clientNameInvalid\" style=\"color: red;\">Please Select Client</span>\n      </div>\n      <br>\n\n\n\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Application Name</mat-label>\n      <input matInput class=\"form-control\" name=\"applicationName\" [(ngModel)]=\"form.applicationName\" #appForm=\"ngModel\"\n      (click)=\"applicationNameInvalid = false\" [ngClass]=\"{ 'is-invalid': applicationNameInvalid }\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"applicationNameInvalid\" style=\"color: red;\">Application Name is required</span>\n    </div>\n    <br>\n   <!-- <mat-form-field appearance=\"fill\">\n        <mat-label>Logo</mat-label>\n        <input matInput name =\"logo\" >\n      </mat-form-field>-->\n\n  \n      \n    <br>\n  <mat-radio-group aria-label=\"Select Status\" name=\"appActive\" [(ngModel)]=\"form.active\">\n    <mat-radio-button for=\"appActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n  </mat-radio-group>\n  <br><br><br>\n  <div class=\"example-button-row\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"doSaveApplication()\">Save</button>\n    <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n   \n  \n  </div>\n  </form>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n      <span style=\"color: red;\">{{ message }}</span>\n  \n    </div>\n  </div>\n\n\n  \n\n  <br><br>\n  <div class=\"example-header\">\n    <mat-form-field>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n    </mat-form-field>\n  </div>\n  <br>\n  <div class=\"example-container mat-elevation-z8\">\n\n    <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n    \n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- ApplicationId Column -->\n      <ng-container matColumnDef=\"applicationId\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Application Id </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.applicationId}} </mat-cell>\n      </ng-container>\n    \n<!-- ClientName Column -->\n<ng-container matColumnDef=\"clientName\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n  <mat-cell *matCellDef=\"let element\"> {{element.clientName}} </mat-cell>\n</ng-container>\n\n      <!-- ApplicationName Column -->\n      <ng-container matColumnDef=\"applicationName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Application Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.applicationName}} </mat-cell>\n      </ng-container>\n      \n      <!-- Active Column -->\n      <ng-container matColumnDef=\"active\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n      </ng-container>\n    \n       <!-- Action Column -->\n       <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"editApplication('Update',row)\">\n              <mat-icon aria-label=\"Edit\">edit</mat-icon>\n            </button>\n         \n        </mat-cell>\n      </ng-container>\n      \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n      </mat-table>\n    \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    \n   \n    </div>\n  ","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface applicationData {\r\n  applicationId: number;\r\n  applicationName: string;\r\n  active:number;\r\nclientName:string;\r\nclientId:any;\r\n} \r\n\r\n@Component({\r\n    selector: 'dialog-editApplication',\r\n    templateUrl: 'dialog-editApplication.html',\r\n    styleUrls: ['./application.component.css']\r\n  })\r\n\r\n \r\n\r\n  export class DialogEditApplication {\r\n  \r\n    action:string;\r\n    local_data:any;\r\n    drpClient: any;\r\n    \r\n   \r\n  \r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEditApplication>,\r\n      //@Optional() is used to prevent error if no data is passed\r\n      @Optional() @Inject(MAT_DIALOG_DATA) public data) {\r\n      console.log(data);\r\n      if(data){\r\n      \r\n        this.local_data=data.row;\r\n        this.action = this.local_data.action;\r\n        this.drpClient=data.clientName;\r\n        \r\n      }\r\n      // this.local_data =data\r\n      \r\n    }\r\n    doAction(){\r\n      this.dialogRef.close({event:this.action,data:this.local_data});\r\n      \r\n    }\r\n  \r\n    closeDialog(){\r\n      this.dialogRef.close({event:'Cancel'});\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n\r\n\r\n\r\n    <mat-form-field>\r\n        \r\n        <input class=\"form-control\" placeholder=\"{{action}} ApplicationName\" name =\"applicationName\" matInput [(ngModel)]=\"local_data.applicationName\">\r\n        \r\n      </mat-form-field><br>\r\n\r\n\r\n      <mat-form-field>\r\n        <mat-label>Select Client</mat-label>\r\n        <mat-select  name=\"clientName\" [(ngModel)]=\"local_data.clientName\">\r\n          <mat-option *ngFor=\"let clients of drpClient\" value={{clients.clientName}}>\r\n            {{clients.clientName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br><br>\r\n  \r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Restapi_auditScan_Service } from '../restapi_auditScan_Service';\nimport { Router } from '@angular/router';\n\n\n\nexport interface ApplicationToFeature {\n  applicationId:number;\n\tfeatureId:number;\n\t featureName:String;\n\t servicePath:String;\n\t featureSequence:number;\n\t\n \n}\n\n\n@Component({\n  selector: 'app-audit-scan-header',\n  templateUrl: './audit-scan-header.component.html',\n  styleUrls: ['./audit-scan-header.component.css']\n})\nexport class AuditScanHeaderComponent implements OnInit {\n  userName: String;\n  appdata:any;\n  username:String;\n  constructor(private service: Restapi_auditScan_Service, private router: Router) { }\n  ngOnInit(): void {\n\n    this.userName = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    let applicationId=JSON.parse(sessionStorage.getItem('applicationIdInSession'));\n     \n    let app =this.service.getApplicationToFeature(applicationId);\n    app.subscribe(result=>{\n      this.appdata = JSON.parse(JSON.stringify(result));\n      console.log(\"ApplicationName DATTATATTATTATATTA : \",this.appdata)\n      // setTimeout(() => {\n      //   this.loading=false;\n      // }, 500);\n    })\n\n  }\n\n  doLogout(){\n    sessionStorage.clear();\n    this.userName = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    this.router.navigate([\"wecaast/user/login\"])\n  }\n\n}\n","\n\n<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container\">\n    <img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\">\n      \n      <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\" aria-controls=\"navbarCollapse\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav mr-auto\">\n          \n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"\">TagSure</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/eSat\">eSat</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/WebAssure\">WebAssure</a>\n          </li> -->\n         \n\n\n\n\n          \n    \n       \n      <li class=\"nav-item\"  *ngFor=\"let apps of appdata\" value={{apps.featureName}} style=\"width: max-content;\" >\n        <a class=\"nav-link\" href={{apps.servicePath}}> {{apps.featureName}} \n        </a>\n      </li>\n    \n\n      <!-- <li class=\"nav-item\">\n        <a name =\"userName\" class=\"nav-link menu-item dropdown-toggle\" [matMenuTriggerFor] = \"userMenu\" style=\"cursor: pointer;margin-left: 296px;\">{{userName}}</a>\n        <mat-menu #userMenu = \"matMenu\">\n         \n          <button mat-menu-item (click)=\"doLogout()\">Logout</button>\n           \n        </mat-menu>\n      </li> -->\n\n   \n\n        </ul>\n\n        <ul class=\"ml-auto navbar-nav\">\n          <li class=\"logoutLink\"><a class=\"nav-link\" (click)=\"doLogout()\"><mat-icon>exit_to_app</mat-icon></a></li>\n        </ul>\n        \n       \n      </div>\n    </div>\n    </nav>\n    ","import { Component, OnInit } from '@angular/core';\nimport { Restapi_auditScan_Service } from '../restapi_auditScan_Service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nexport interface AuditScanData {\n  userName: String;\n  projectName: String;\n  selectScanOption: number;\n  selectTagOption: number;\n  pageDepth: number;\n  pageUrl: String;\n  txtPageURL: String;\n  selectBrowser: number; \n  isAuthenticated:boolean;\n uploadFilePath:String; \n}\n\n\n\n\nexport interface ApplicationToFeature {\n  applicationId: number;\n  featureId: number;\n  featureName: String;\n  servicePath: String;\n  featureSequence: number;\n\n\n}\n\n\n@Component({\n  selector: 'app-auditscan',\n  templateUrl: './auditscan.component.html',\n  styleUrls: ['./auditscan.component.css']\n})\nexport class AuditscanComponent implements OnInit {\n\n  formatLabel(value: number) {\n\n\n    return value;\n  }\n\n\n  listStatus =[\n    {name:'Chrome',value:1,checked:true},\n    {name:'Mozilla',value:0,checked:false},\n    {name:'IE',value:0,checked:false}\n  ];\n\n\n  form2: FormGroup;\n  error: string;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  title = 'File-Upload-Save';\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  selectedFile = null;\n  changeImage = false;\n\n  userName: String;\n  appdata: any;\n  form: any = {};\n  uploadPath:any;\n  constructor(private service: Restapi_auditScan_Service, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n\n  }\n\n  startScan() {\n    console.log(\"UPLOAD FORM : \" , this.form);\n   this.userName = JSON.parse(sessionStorage.getItem('UserNameInSession'))\n   this.form.uploadFilePath = this.uploadPath;\n    let resp = this.service.startScan(this.form, this.userName); \n\n    \n  }\n  \n    upload() {\n        let scanType = this.form.selectScanOption;\n        if (scanType == \"2\") {\n          this.currentFileUpload = this.selectedFiles.item(0);\n          return this.service.pushFileToStorage(this.currentFileUpload).subscribe((result) => {\n            console.log(\"resultresult : \" , result);\n          this.uploadPath = result;\n          setTimeout(() => {\n            this.startScan();\n          }, 500);\n    }); \n\n  } else {\n          this.uploadPath = \"URL_Based\";\n          setTimeout(() => {\n            this.startScan();\n          }, 500);\n        }\n      }\n    \n\n   selectFile(event) {\n      this.selectedFiles = event.target.files;\n      } \n}\n","<app-audit-scan-header></app-audit-scan-header>\n\n<head>\n  <!-- Required meta tags -->\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  <title>WeCaast - Audit Scan</title>\n\n</head>\n\n<body>\n\n\n\n  <!-- Content Start -->\n\n  <div class=\"container\">\n\n    <main class=\"row mt-4 mb-5\">\n      <section class=\"col-xl-8 mb-5 mb-xl-0\">\n        <div class=\"pageHeding\">Audit Scan</div>\n        <form name=\"form\" #auditScanForm=\"ngForm\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"form-group mb-4\">\n                <label>Type Project Name</label>\n                <input type=\"text\" class=\"form-control\" name=\"projectName\" [(ngModel)]=\"form.projectName\"\n                  id=\"projectName\" placeholder=\"\">\n              </div>\n            </div>\n          </div>\n          <!-- row End -->\n          <div class=\"row mb-4\">\n            <div class=\"col-lg-4\">\n              <div class=\"radiotitle mb-2\">Type of SCan</div>\n              <section class=\"imgRadioWrapper\">\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioScan_1\" name=\"selectScanOption\" value=\"1\" [(ngModel)]=\"form.selectScanOption\">\n                    <label for=\"radioScan_1\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon1\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">URL Based</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioScan_2\" name=\"selectScanOption\" value=\"2\" checked [(ngModel)]=\"form.selectScanOption\">\n                    <label for=\"radioScan_2\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon2\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">File Based</div>\n                    </label>\n                  </div>\n                </div>\n              </section>\n            </div>\n            <!-- Col end -->\n            <div class=\"col-lg-4\">\n              <div class=\"radiotitle mb-2\">Extract Tags From</div>\n              <section class=\"imgRadioWrapper\">\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioTag_1\" name=\"selectTagOption\" value=\"1\" checked [(ngModel)]=\"form.selectTagOption\">\n                    <label for=\"radioTag_1\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon1\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Beacon</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group tagoption\">\n                    <input type=\"radio\" id=\"radioTag_2\" name=\"selectTagOption\" value=\"2\"  [(ngModel)]=\"form.selectTagOption\">\n                    <label for=\"radioTag_2\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon2\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Data Layer</div>\n                    </label>\n                  </div>\n                </div>\n              </section>\n            </div>\n            <!-- Col end -->\n            <div class=\"col-lg-4\">\n              <div class=\"radiotitle mb-2\">Page Depth</div>\n              <div class=\"row\">\n\n\n\n\n\n\n                <div class=\"col-12 mb-3\">\n                  <mat-slider class=\"custom-range\" name=\"pageDepth\" [(ngModel)]=\"form.pageDepth\" thumbLabel\n                    [displayWith]=\"formatLabel\" tickInterval=\"10\" min=\"0\" max=\"10\"></mat-slider>\n\n\n\n                </div>\n                <br><br><br>\n                <div class=\"col-12 mb-3\" style=\"margin-left: 5px;\"> <span style=\"    font-size: 0.75rem;\n              padding: 0.5rem 0 0.5rem 0;\n              text-transform: uppercase;\n              font-weight: 600;\n          \">Selected Value is :</span>\n                  <br>\n                  <ul class=\"list-inline sliderCount\">\n                    <li class=\"list-inline-item slideNum active\">{{form.pageDepth}}</li>\n\n                  </ul>\n\n                </div>\n\n\n              </div>\n            </div>\n            <!-- Col end -->\n          </div>\n          <!-- row End -->\n\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <label>Starting Page URL</label>\n            </div>\n            <div class=\"col-lg-2\">\n              <select class=\"form-control\" id=\"selectURL\" name=\"pageUrl\" [(ngModel)]=\"form.pageUrl\">\n                <option>http://</option>\n                <option>https://</option>\n              </select>\n            </div>\n            <div class=\"col-lg-10\">\n              <input type=\"text\" class=\"form-control\" id=\"txtPageURL\" name=\"txtPageURL\" [(ngModel)]=\"form.txtPageURL\">\n            </div>\n          </div><br>\n          <!-- row End -->\n\n          <!-- <div class=\"row mb-4\">\n        <div class=\"col-lg-12 mt-5\">\n          <div class=\"form-group\">\n            <label>Add Keywords</label>\n            <div class=\"selectDiv1\">\n              <select id=\"keywordSelect\" name=\"character\" class=\"form-control\" multiple=\"multiple\">\n                <option value=\"Peter\">Shopping Cart</option>\n                <option value=\"Lois\">Add to Cart</option>\n                <option value=\"Chris\">Big Sale</option>\n                <option value=\"Meg\">Discount</option>\n                <option value=\"Stewie\">Festival offer</option>\n                <option value=\"Cleveland\">Big Offer</option>\n                <option value=\"Joe\">Add to Favourite</option>\n                <option value=\"Quagmire\">Glwenn Qtuagmire</option>\n                <option value=\"Evil Monkey\">Etgvil Monkey</option>\n                <option value=\"Herbert\">Jiohn Herbert</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div> -->\n          <!-- row End -->\n\n          <div class=\"row mb-4\">\n            <div class=\"col-lg-12\">\n              <div class=\"radiotitle mb-2\">Select Browser</div>\n              <mat-radio-group class=\"imgRadioWrapper radioForBrowser\"  name=\"selectBrowser\" >\n                <div>\n                  <div class=\"input-group\">\n                    <input type=\"radio\" id=\"radioBrowser_1\" name=\"selectBrowser\" value=\"1\" checked [(ngModel)]=\"form.selectBrowser\">\n                    <label for=\"radioBrowser_1\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon1\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Google Chrome</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group\">\n                    <input type=\"radio\" id=\"radioBrowser_2\" name=\"selectBrowser\" value=\"2\"  [(ngModel)]=\"form.selectBrowser\">\n                    <label for=\"radioBrowser_2\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon2\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Mozilla Firefox</div>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <div class=\"input-group\">\n                    <input type=\"radio\" id=\"radioBrowser_3\" name=\"selectBrowser\" value=\"3\"  [(ngModel)]=\"form.selectBrowser\">\n                    <label for=\"radioBrowser_3\">\n                      <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon3\"> </em> </div>\n                      <div class=\"text-center radioicotxt\">Internet Explorer</div>\n                    </label>\n                  </div>\n                </div>\n              </mat-radio-group>\n            </div>\n            <!-- Col end -->\n          </div>\n          <!-- row End -->\n\n          <div class=\"row mb-4\">\n            <div class=\"col-12\">\n              <div class=\"custom-control custom-checkbox mb-3\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck\" name=\"isAuthenticated\" [(ngModel)]=\"form.isAuthenticated\">\n                <label class=\"custom-control-label customCheckboxLabel\" for=\"customCheck\">Authenticated</label>\n              </div>\n            </div>\n          </div>\n          <!-- row End -->\n\n          <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\n          <input type=\"hidden\" class=\"form-control\" name=\"uploadFilePath\" [(ngModel)]=\"form.uploadFilePath\"\n          id=\"uploadFilePath\" placeholder=\"\">\n\n\n        </form>\n        <div class=\"row buttonWrapper\">\n          <div class=\"col\">\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"upload()\">Start Scan</button>\n            <div class=\"d-inline-block orBlock\"><span class=\"\">OR</span></div>\n            <button type=\"button\" class=\"btn btn-outline-info\">Schedule Audit</button>\n          </div>\n        </div>\n      </section>\n      <!-- section End -->\n\n\n      <!-- section End -->\n    </main>\n    <!-- main End -->\n\n\n\n\n  </div>\n  <!-- container-fluid End -->\n\n  <!-- Content End -->\n<br>\n\n</body>\n\n","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport {MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {MatTableDataSource,MatTable} from '@angular/material/table';\nimport {DialogEditClient} from './dialog-editClient';\n\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nexport interface clientData {\n  clientId: number;\n  clientName: string;\n  clientIndustry: string;\n  clientLogo: string;\n  active: number;\n  uploadFilePath:String; \n\n}\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  form2: FormGroup;\n  error: string;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  title = 'File-Upload-Save';\n  selectedFiles: FileList;\n  currentFileUpload: File;\n  progress: { percentage: number } = { percentage: 0 };\n  selectedFile = null;\n  changeImage = false;\n uploadPath:any;\n  \n  client: clientData[] = [];\n  form: any = { active: 1,clientName:'',clientIndustry:''};\n  message: any\n  listStatus =[\n    {name:'Active',value:1,checked:true},\n    {name:'Inactive',value:0,checked:false}\n  ];\n\n  displayedColumns: string[] = ['clientId', 'clientName','clientIndustry','imageUrl', 'active','action'];\n  dataSource = new MatTableDataSource(this.client);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  table: MatTable<any>\n\n  clientNameInvalid :boolean\n  clientIndustryInvalid:boolean\n\n  constructor(private service: RestapiserviceService,private router:Router,public dialog: MatDialog, private formBuilder: FormBuilder) { }\n\n  selectFile(event) {\n     //Select File\n     this.selectedFiles = event.target.files;\n   }\n\n\n \n\n  ngOnInit(): void {\n    // this.dataSource.sort = this.sort;\n    this.service.getClientData().subscribe(\n      data => {\n        this.client = data;\n        this.dataSource = new MatTableDataSource(this.client);\n        this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n       console.log(\"GET_CLIENT::\"+JSON.stringify(data))\n      }\n    );\n  }\n\n  upload() {\n    this.progress.percentage = 0;\n    this.currentFileUpload = this.selectedFiles.item(0);\n\n    console.log(\"this.selectedFiles : \", this.currentFileUpload);\n    this.service.pushFileToStorage(this.currentFileUpload).subscribe(result => {\n    console.log(\"LOGOPARH:\",result)\n    setTimeout(() => {\n          this.doSaveClient();\n        }, 500);\n\n    });\n  }\n\n  doSaveClient(){\n\n    if(this.ValidateForm()){\n     \n       this.form.uploadFilePath = this.uploadPath;\n     \n     let resp = this.service.doSaveClient(this.form,{observe:'response'})\n\n    .subscribe((response: any) => {\n\n\n\n      \n      if (response === 200) {\n        const dialogRef = this.dialog.open(DialogClose, {\n          width: '250px',\n\n        });\n\n      } else {\nalert(\"Client not saved successfully\")\n       // this.message = 'Client not saved successfully';\n\n      }\n    });\n  }\n  }\n  \n   // let tabl = this.service.getUser();\n   \n  \n    /*resp.subscribe(data => {\n      this.message = data;\n      console.log(data);\n    });*/\n    ngAfterViewInit() {\n     \n    }\n  \n    applyFilter(filterValue: string) {\n      filterValue = filterValue.trim(); // Remove whitespace\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n      this.dataSource.filter = filterValue;\n    }\n\n\n    editClient(action,obj){\n      obj.action=action;\n      const dialogRef = this.dialog.open(DialogEditClient, {\n        width: '250px',\n      data:obj\n      });\n      dialogRef.afterClosed().subscribe(result=>{\n        this.updateRow(result.data);\n        \n        //let resp = this.service.doEditRole(result.data);\n      })\n    \n      }\n      \n      updateRow(row_obj){\n    \n        this.dataSource.data.filter((value,key)=>{\n          if(value.clientId == row_obj.clientId){\n            value.clientName = row_obj.clientName;\n            value.clientIndustry= row_obj.clientIndustry;\n            value.clientLogo=row_obj.clientLogo;\n            value.active = row_obj.active;\n            \n          }\n          \n          return true;\n          \n        });\n        this.service.doEditClient(row_obj);\n        \n      }\n      ValidateForm() {\n        let _isValid = true;\n    \n        this.clientNameInvalid = (!this.form.clientName || this.form.clientName == '')\n        this.clientIndustryInvalid = (!this.form.clientIndustry || this.form.clientIndustry == '')\n    \n        if (this.clientNameInvalid || this.clientIndustryInvalid) {\n          _isValid = false;\n        }\n    \n        return _isValid;\n    \n      }\n    \n\n}\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>){}\n   \n\n   close() {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\" name=\"form\" #clientForm=\"ngForm\" (ngSubmit)=\"clientForm.form.valid\"\n    enctype=\"multipart/form-data\" novalidate class=\"client-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Client Name</mat-label>\n      <input matInput class=\"form-control\" name=\"clientName\" [(ngModel)]=\"form.clientName\" #clientForm=\"ngModel\"\n        (click)=\"clientNameInvalid == false\" [ngClass]=\"{ 'is-invalid': clientNameInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"clientNameInvalid\" style=\"color: red;\">ClientName is required</span>\n    </div>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Domain</mat-label>\n      <input matInput class=\"form-control\" name=\"clientIndustry\" [(ngModel)]=\"form.clientIndustry\" #clientForm=\"ngModel\"\n        (click)=\"clientIndustryInvalid == false\" [ngClass]=\"{ 'is-invalid': clientIndustryInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"clientIndustryInvalid\" style=\"color: red;\">Domain is required</span>\n    </div>\n\n    <br>\n    <!-- <label class=\"image-upload-container btn btn-bwm\">\n        <span>Select Logo</span>&nbsp; -->\n\n    <div class=\"container row\">\n      <div class=\"col-md-6\">\n           <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\n          <input type=\"hidden\" class=\"form-control\" name=\"uploadFilePath\" [(ngModel)]=\"form.uploadFilePath\"\n          id=\"uploadFilePath\" placeholder=\"\">\n        </div>\n       \n          \n\n\n    </div>\n\n    <div class=\"container row\">\n      <div class=\"col-md-12\">\n        <div *ngIf=message>Select File</div>\n      </div>\n    </div>\n\n    <!-- <input #imageInput type=\"file\" accept=\"image/*\" name=\"clientLogo\" [(ngModel)]=\"form.clientLogo\"> -->\n    <!-- </label> -->\n    <br>\n    <br>\n\n    <mat-radio-group aria-label=\"Select Status\" name=\"clientActive\" [(ngModel)]=\"form.active\">\n      <mat-radio-button for=\"clientActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\"\n        [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n    </mat-radio-group>\n    <br><br><br>\n    <div class=\"example-button-row\">\n\n      <button mat-raised-button color=\"primary\" (click)=\"upload()\">Save</button>\n      <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n\n\n    </div>\n  </form>\n</div>\n<br>\n<!-- <div class=\"form-group\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message style=\"width: 35%;margin-left: 358px;\">\n    <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n\n  </div>\n</div> -->\n<br><br>\n<div class=\"example-header\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" matSort>\n\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"clientId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Client ID </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.clientId}} </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"clientName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.clientName}} </mat-cell>\n    </ng-container>\n\n    <!-- Domain Column -->\n    <ng-container matColumnDef=\"clientIndustry\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Domain </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.clientIndustry}} </mat-cell>\n    </ng-container>\n\n    <!-- LOGO Column -->\n    <ng-container matColumnDef=\"imageUrl\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Logo </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> <img src=\"{{element.clientLogo}}\" style=\"width: 60px;\"/></mat-cell>\n\n\n      <!-- <img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\"> \n      D:\\WeCaast_Updated\\employee-management\\src\\assets\\icons\n      -->\n    </ng-container>\n\n    <!-- Active Column -->\n    <ng-container matColumnDef=\"active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\"\n          (click)=\"editClient('Update',row)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n      </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"> </mat-row>\n  </mat-table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n\n</div>","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Component, Optional, Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\n\r\nexport interface clientData {\r\n  clientId: number;\r\n  clientName: string;\r\n  clientIndustry: string;\r\n  active: number;\r\n  clientLogo: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-edit',\r\n  templateUrl: 'dialog-edit.html',\r\n  styleUrls: ['./client.component.css']\r\n})\r\n\r\n\r\n\r\nexport class DialogEditClient {\r\n\r\n  action: string;\r\n  local_data: any;\r\n  form2: FormGroup;\r\n  error: string;\r\n  userId: number = 1;\r\n  uploadResponse = { status: '', message: '', filePath: '' };\r\n  title = 'File-Upload-Save';\r\n  selectedFiles: FileList;\r\n  currentFileUpload: File;\r\n  progress: { percentage: number } = { percentage: 0 };\r\n  selectedFile = null;\r\n  changeImage = false;\r\n  logo: any;\r\n  clientLogo: any;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogEditClient>, private service: RestapiserviceService,\r\n    //@Optional() is used to prevent error if no data is passed\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: clientData) {\r\n    console.log(data);\r\n    this.local_data = data;\r\n    this.action = this.local_data.action;\r\n\r\n    this.logo = this.currentFileUpload;\r\n  }\r\n  doAction() {\r\n    this.progress.percentage = 0;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n\r\n    console.log(\"this.selectedFiles : \", this.currentFileUpload);\r\n\r\n\r\n    debugger\r\n    this.service.pushFileToStorage(this.currentFileUpload).subscribe(result => {\r\n      console.log(\"LOGOPATHEDIT::\", result);\r\n      if (result) {\r\n      this.currentFileUpload = result;\r\n      this.local_data.clientLogo=result;\r\n      }\r\n      this.dialogRef.close({ event: this.action, data: this.local_data, logo: this.currentFileUpload });\r\n    });\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close({ event: 'Cancel' });\r\n  }\r\n\r\n  selectFile(event) {\r\n    //Select File\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n  upload() {\r\n    this.progress.percentage = 0;\r\n    this.currentFileUpload = this.selectedFiles.item(0);\r\n\r\n    console.log(\"this.selectedFiles : \", this.currentFileUpload);\r\n\r\n\r\n\r\n    this.service.pushFileToStorage(this.currentFileUpload).subscribe(event => {\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} ClientName\" name =\"clientName\" matInput [(ngModel)]=\"local_data.clientName\">\r\n        \r\n      </mat-form-field><br>\r\n     \r\n  \r\n  <mat-form-field appearance=\"fill\">\r\n        \r\n    <input placeholder=\"{{action}} clientIndustry\" name =\"clientIndustry\" matInput [(ngModel)]=\"local_data.clientIndustry\">\r\n    \r\n  </mat-form-field>\r\n\r\n  <br>\r\n <div class=\"col-md-6\">\r\n  <input type=\"file\" id=\"customFile\" (change)=\"selectFile($event)\">\r\n            <input type=\"hidden\" class=\"form-control\" name=\"uploadFilePath\" [(ngModel)]=\"local_data.uploadFilePath\"\r\n            id=\"uploadFilePath\" placeholder=\"\">\r\n        </div>\r\n       \r\n <div>\r\n   <span><img src=\"{{local_data.clientLogo}}\" style=\"width: 60px;\"></span>     \r\n   \r\n</div>   \r\n <br>\r\n  <br>\r\n  <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n    <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n    <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n  </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Observable } from \"rxjs\";\nimport { Component, OnInit } from '@angular/core';\n\nimport { HttpClientService, UserRequest } from '../service/http-client.service';\nimport { Router } from '@angular/router';\n\n\n\n\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  employees:  Observable<UserRequest[]>;\n   \n  constructor(\n    private httpClientService:HttpClientService, private router: Router\n  ) { }\n\n\n\n\n  ngOnInit() {\n    this.httpClientService.getUserRequestList().subscribe(\n     response =>this.handleSuccessfulResponse(response),\n    );\n  }\n\nhandleSuccessfulResponse(response)\n{\n    this.employees=response;\n}\n\n}","<!doctype html>\n<html lang=\"en\">\n<head>\n<!-- Required meta tags -->\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<title>WeCaast - Audit Scan</title>\n\n</head>\n<body>\n\n\n\n<!-- Content Start -->\n\n<div class=\"container\">\n  <main class=\"row mt-4 mb-5\">\n    <section class=\"col-xl-8 mb-5 mb-xl-0\">\n      <div class=\"pageHeding\">Audit Scan</div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"form-group mb-4\">\n           <label>Type Project Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"projectName\" placeholder=\"\">\n          </div>\n        </div>\n      </div>\n      <!-- row End -->\n      <div class=\"row mb-4\">\n        <div class=\"col-lg-4\">\n          <div class=\"radiotitle mb-2\">Type of SCan</div>\n          <section class=\"imgRadioWrapper\">\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioScan_1\" name=\"selectScanOption\" value=\"1\">\n                <label for=\"radioScan_1\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon1\"> </em> </div>\n                <div class=\"text-center radioicotxt\">URL Based</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioScan_2\" name=\"selectScanOption\" value=\"2\" checked>\n                <label for=\"radioScan_2\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon scanIcon2\"> </em> </div>\n                <div class=\"text-center radioicotxt\">File Based</div>\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n        <!-- Col end -->\n        <div class=\"col-lg-4\">\n          <div class=\"radiotitle mb-2\">Extract Tags From</div>\n          <section class=\"imgRadioWrapper\">\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioTag_1\" name=\"selectTagOption\" value=\"1\" checked>\n                <label for=\"radioTag_1\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon1\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Beacon</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioTag_2\" name=\"selectTagOption\" value=\"2\">\n                <label for=\"radioTag_2\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon tagIcon2\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Data Layer</div>\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n        <!-- Col end -->\n        <div class=\"col-lg-4\">\n          <div class=\"radiotitle mb-2\">Page Depth</div>\n          <div class=\"row\">\n            <div class=\"col sliderLabel\">0</div>\n            <div class=\"col sliderLabel ml-auto text-right\">10</div>\n            <div class=\"col-12 mb-3\">\n              <input id=\"slider\" data-slider-id=\"ex1Slider\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"10\" data-slider-step=\"1\" data-slider-value=\"6\" onchange=\"funSlider(this)\"/>\n            </div>\n            <div class=\"col-12\">\n              <ul class=\"list-inline sliderCount\">\n                <li class=\"list-inline-item slideNum\">1</li>\n                <li class=\"list-inline-item slideNum\">2</li>\n                <li class=\"list-inline-item slideNum\">3</li>\n                <li class=\"list-inline-item slideNum\">4</li>\n                <li class=\"list-inline-item slideNum\">5</li>\n                <li class=\"list-inline-item slideNum active\">6</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">7</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">8</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">9</li>\n                <li class=\"list-inline-item slideNum\" style=\"display:none;\">10</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <!-- Col end --> \n      </div>\n      <!-- row End -->\n      \n      <div class=\"row\">\n        <div class=\"col-12\">\n          <label>Starting Page URL</label>\n        </div>\n        <div class=\"col-lg-2\">\n          <select class=\"form-control\" id=\"selectURL\">\n            <option>http://</option>\n            <option>https://</option>\n          </select>\n        </div>\n        <div class=\"col-lg-10\">\n          <input type=\"text\" class=\"form-control\" id=\"txtPageURL\">\n        </div>\n      </div><br>\n      <!-- row End -->\n      \n      <!-- <div class=\"row mb-4\">\n        <div class=\"col-lg-12 mt-5\">\n          <div class=\"form-group\">\n            <label>Add Keywords</label>\n            <div class=\"selectDiv1\">\n              <select id=\"keywordSelect\" name=\"character\" class=\"form-control\" multiple=\"multiple\">\n                <option value=\"Peter\">Shopping Cart</option>\n                <option value=\"Lois\">Add to Cart</option>\n                <option value=\"Chris\">Big Sale</option>\n                <option value=\"Meg\">Discount</option>\n                <option value=\"Stewie\">Festival offer</option>\n                <option value=\"Cleveland\">Big Offer</option>\n                <option value=\"Joe\">Add to Favourite</option>\n                <option value=\"Quagmire\">Glwenn Qtuagmire</option>\n                <option value=\"Evil Monkey\">Etgvil Monkey</option>\n                <option value=\"Herbert\">Jiohn Herbert</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div> -->\n      <!-- row End -->\n      \n      <div class=\"row mb-4\">\n        <div class=\"col-lg-12\">\n          <div class=\"radiotitle mb-2\">Select Browser</div>\n          <section class=\"imgRadioWrapper radioForBrowser\">\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioBrowser_1\" name=\"selectBrowser\" value=\"1\">\n                <label for=\"radioBrowser_1\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon1\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Google Chrome</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioBrowser_2\" name=\"selectBrowser\" value=\"2\" checked>\n                <label for=\"radioBrowser_2\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon2\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Mozilla Firefox</div>\n                </label>\n              </div>\n            </div>\n            <div>\n              <div class=\"input-group\">\n                <input type=\"radio\" id=\"radioBrowser_3\" name=\"selectBrowser\" value=\"3\">\n                <label for=\"radioBrowser_3\">\n                <div class=\"input-group-prepend\"> <em class=\"radio_imageIcon browserIcon3\"> </em> </div>\n                <div class=\"text-center radioicotxt\">Internet Explorer</div>\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n        <!-- Col end --> \n      </div>\n      <!-- row End -->\n      \n      <div class=\"row mb-4\">\n        <div class=\"col-12\">\n          <div class=\"custom-control custom-checkbox mb-3\">\n            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck\" name=\"example1\">\n            <label class=\"custom-control-label customCheckboxLabel\" for=\"customCheck\">Authenticated</label>\n          </div>\n        </div>\n      </div>\n      <!-- row End -->\n      \n      <div class=\"row buttonWrapper\">\n        <div class=\"col\">\n          <button type=\"button\" class=\"btn btn-primary\">Start Scan</button>\n          <div class=\"d-inline-block orBlock\"><span class=\"\">OR</span></div>\n          <button type=\"button\" class=\"btn btn-outline-info\">Schedule Audit</button>\n        </div>\n      </div>\n    </section>\n    <!-- section End -->\n    \n    <section class=\"col-xl-4\">\n      <div class=\"color_box colorGray border-bottom pb-3 mb-5 mb-xl-4\">\n        <div class=\"mb-2 d-table\">\n          <div class=\"d-table-cell\">\n            <div class=\"border-right pr-2\">\n              <div class=\"blockHeading fontSize13\">Search Volume</div>\n              <div class=\"bignumber\">4.3K</div>\n            </div>\n          </div>\n          <div class=\"d-table-cell\">\n            <div class=\"border-right px-2\">\n              <div class=\"blockHeading fontSize13\">Return Rate</div>\n              <div class=\"bignumber\">1.5</div>\n            </div>\n          </div>\n          <div class=\"d-table-cell\">\n            <ul class=\"topGraphLabel fontSize13 px-2\">\n              <li class=\"greenTxt\">With clicks 63%</li>\n              <li class=\"blackTxt\">Without clicks 37%</li>\n            </ul>\n          </div>\n        </div>\n        <div id=\"topStackChart\" style=\"width: 100%; height: 180px; margin: 0 auto\"></div>\n      </div>\n      <!-- color_box End -->\n      \n      <div class=\"border-bottom pb-4 mb-5 mb-xl-4\">\n        <div class=\"blockHeading mt-3\">URL’s by Depth</div>\n        <div id=\"secondStackChart\" style=\"width: 100%; height: 180px; margin: 0 auto\"></div>\n      </div>\n      <!-- End -->\n      \n      <div class=\"mb-1 mb-xl-0\">\n        <div class=\"blockHeading\">Recent URL Searched</div>\n        <ul class=\"list-group list-group-flush mb-4\">\n          <li class=\"list-group-item\">www.dell.com/en-in</li>\n          <li class=\"list-group-item\">www.dellemc.com/hi-in/big-data</li>\n          <li class=\"list-group-item\">www.dell.com/laptops/</li>\n          <li class=\"list-group-item\">www.dellemc.com/hi-in/big-data</li>\n          <li class=\"list-group-item\">www.dellemc.com/hi-in/big-data</li>\n        </ul>\n        <div> <a href=\"\" class=\"linkWidArrow\">View All URL’s</a> </div>\n      </div>\n      <!-- End --> \n    </section>\n    <!-- section End --> \n  </main>\n  <!-- main End --> \n  \n</div>\n<!-- container-fluid End --> \n\n<!-- Content End --> \n\n</body>\n</html>","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface featureData {\r\n\r\n  featureName: string;\r\n  featureId: number;\r\n    active: number;\r\n   \r\n    applicationName:any\r\napplicationId:any;\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-editFeature',\r\n    templateUrl: 'dialog-editFeature.html',\r\n    styleUrls: ['./feature.component.css']\r\n  })\r\n\r\n \r\n\r\n  export class DialogEditFeature {\r\n  \r\n    action:string;\r\n    local_data:any;\r\n    drpApplication:any;\r\n    \r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEditFeature>,\r\n      //@Optional() is used to prevent error if no data is passed\r\n      @Optional() @Inject(MAT_DIALOG_DATA) public data) {\r\n      console.log(data);\r\n      if(data){\r\n        this.local_data =data.row\r\n        this.action = this.local_data.action;\r\n        this.drpApplication=data.applicationName;\r\n      }\r\n      \r\n    }\r\n    doAction(){\r\n      this.dialogRef.close({event:this.action,data:this.local_data});\r\n      \r\n    }\r\n  \r\n    closeDialog(){\r\n      this.dialogRef.close({event:'Cancel'});\r\n    }\r\n  \r\n  }\r\n  \r\n  \r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Select Application</mat-label>\r\n    <mat-select  name=\"applicationName\" [(ngModel)]=\"local_data.applicationName\">\r\n      <mat-option *ngFor=\"let apps of drpApplication\" value={{apps.applicationName}}>\r\n        {{apps.applicationName}}\r\n      </mat-option>\r\n    </mat-select>\r\n  </mat-form-field><br>\r\n    <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} featureName\" name =\"featureName\" matInput [(ngModel)]=\"local_data.featureName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewChild, AfterViewInit,Optional,Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource,MatTable} from '@angular/material/table';\nimport{DialogEditFeature} from './dialog-editFeature'\ninterface Apps {\n  name: string;\n \n}\nexport interface featureData {\n  featureId: number;\n  featureName: string;\n  active:number;\napplicationName:string;\napplicationId:number\n}\n\n\n@Component({\n  selector: 'app-feature',\n  templateUrl: './feature.component.html',\n  styleUrls: ['./feature.component.css']\n})\n\nexport class FeatureComponent implements OnInit {\n  app: Apps[] = [];\n  applicationname:any\n  form: any = {active:1,featureName:'',applicationName:''};\n  message: any\n features: featureData[] = [];\n listStatus =[\n  {name:'Active',value:1,checked:true},\n  {name:'Inactive',value:0,checked:false}\n];\n  displayedColumns: string[] = ['featureId', 'applicationName','featureName',  'active', 'action'];\n  dataSource = new MatTableDataSource(this.features);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n\n  featureNameInvalid:boolean\n  applicationNameInvalid:boolean\n\n  constructor(private service: RestapiserviceService,private router:Router,public dialog:MatDialog) { }\n\n  ngOnInit(): void {\n    this.service.getApplicationName().subscribe(result => {\n      this.applicationname = result;\n      console.log(\"ApplicationName::\"+JSON.stringify(this.applicationname))\n    }, \n    error => console.error(error));\n\n    this.service.getFeatureData().subscribe(\n      data => {\n        this.features = data;\n        this.dataSource = new MatTableDataSource(this.features);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        console.log(\"getFeatureData\" + JSON.stringify(data))\n      }\n    );\n  }\n\n  doSaveFeature(){\n    if(this.ValidateForm()){\n    let resp = this.service.doSaveFeature(this.form,{observe:'response'}).subscribe((response: any) => {\n\n      if (response === 200) {\n        const dialogRef = this.dialog.open(DialogClose, {\n          width: '250px',\n\n        });\n\n      } else {\n\n        this.message = 'Details not saved successfully';\n\n      }\n    }\n\n    );\n  \n    \n  }\n  }\n\n  ngAfterViewInit() {\n   // this.dataSource.paginator = this.paginator;\n    //this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  \n\n  editFeature(action, obj) {\n    \n    obj.action = action;\n    let params = {\n      row: obj,\n      applicationName: this.applicationname\n    };\n    const dialogRef = this.dialog.open(DialogEditFeature, {\n      width: '250px',\n      data: params,\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n  updateRow(row_obj) {\n\n  this.dataSource.data.filter((value, key) => {\n      if (value.featureId == row_obj.featureId) {\n        value.featureName = row_obj.featureName;\n        value.active = row_obj.active;\n\n      }\n\n      return true;\n\n    });\n    let resp = this.service.doEditFeature(row_obj);\n\n  }\n\n  ValidateForm() {\n    let _isValid = true;\n    this.applicationNameInvalid = (!this.form.applicationName || this.form.applicationName == '')\n    this.featureNameInvalid = (!this.form.featureName || this.form.featureName == '')\n    \n    if (this.applicationNameInvalid || this.featureNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n\n}\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>){}\n   \n\n   close() {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"example-container\" style=\"margin-left: 250px;\">\n    <form id=\"accesspanel\" action=\"\"  name=\"form\"  #featureForm=\"ngForm\" (ngSubmit)=\"featureForm.form.valid\" novalidate class=\"feature-form\">\n\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Select Application</mat-label>\n            <mat-select name=\"applicationName\" [(ngModel)]=\"form.applicationName\" #featureForm=\"ngModel\"\n            (click)=\"applicationNameInvalid == false\" [ngClass]=\"{ 'is-invalid': applicationNameInvalid}\" required>\n              <mat-option *ngFor=\"let apps of applicationname\" value={{apps.applicationName}}>\n                {{apps.applicationName}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <div>\n            <span *ngIf=\"applicationNameInvalid\" style=\"color: red;\">Please Select Application Name </span>\n        </div><br>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Feature Name</mat-label>\n      <input matInput class=\"form-control\" name =\"featureName\" [(ngModel)]=\"form.featureName\" #featureForm=\"ngModel\"\n      (click)=\"featureNameInvalid == false\" [ngClass]=\"{ 'is-invalid': featureNameInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"featureNameInvalid\" style=\"color: red;\">Please enter Feature Name </span>\n  </div>\n    <br>\n    <br>\n  \n  <mat-radio-group aria-label=\"Select Status\"  name=\"featureActive\" [(ngModel)]=\"form.active\">\n    <mat-radio-button for=\"featureActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n  </mat-radio-group>\n  <br><br><br>\n  <div class=\"example-button-row\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"doSaveFeature()\">Save</button>\n    <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n   \n  \n  </div>\n  </form>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n      <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n  \n    </div>\n  </div>\n  <br><br>\n  <div class=\"example-header\">\n    <mat-form-field>\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n    </mat-form-field>\n  </div>\n  <br>\n  <div class=\"example-container mat-elevation-z8\">\n\n    <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n    \n      <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n    \n      <!-- Position Column -->\n      <ng-container matColumnDef=\"featureId\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Feature Id </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.featureId}} </mat-cell>\n      </ng-container>\n    \n       <!-- ApplicationName Column -->\n       <ng-container matColumnDef=\"applicationName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Application Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.applicationName}} </mat-cell>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"featureName\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Feature Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.featureName}} </mat-cell>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"active\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n      </ng-container>\n    \n       <!-- Action Column -->\n       <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n        <mat-cell *matCellDef=\"let row\">\n          <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"editFeature('Update',row)\">\n              <mat-icon aria-label=\"Edit\">edit</mat-icon>\n            </button>\n         \n        </mat-cell>\n      </ng-container>\n\n    \n      \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n      </mat-table>\n    \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n    \n   \n    </div>\n  ","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <p  class=\"text-xs-center\">© Copyright 2020. All rights reserved.</p>\n  </footer>","import { Injectable } from '@angular/core';\r\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CustomvalidationService {\r\npatternValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!control.value) {\r\n        return null;\r\n      }\r\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\r\n      const valid = regex.test(control.value);\r\n      return valid ? null : { invalidPassword: true };\r\n    };\r\n  }\r\n\r\n\r\n// custom validator to check that two fields match\r\n   MustMatch(controlName: string, matchingControlName: string) {\r\n    \r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\n//import { MustMatch } from './must-match.validator';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router } from '@angular/router';\r\nimport { CustomvalidationService } from './customValidationService';\r\n\r\nexport interface DialogData {\r\n  userName: any;\r\n  userPassword: string;\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-editHeader',\r\n  templateUrl: 'dialog-editHeader.html',\r\n  // styleUrls: ['./header.component.css']\r\n})\r\n\r\n\r\n\r\nexport class DialogEditHeader implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n\r\n  form: any = {};\r\n  action: string;\r\n  local_data: any;\r\n  username: any;\r\n  message:any;\r\n\r\n  constructor(public service: RestapiserviceService, private formBuilder: FormBuilder,private router: Router, private customValidator: CustomvalidationService,\r\n    public dialogRef: MatDialogRef<DialogEditHeader>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n    //  this.local_data=data.newPassword\r\n    //this.local_data=data.userPassword\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\r\n   // this.username = history.state;\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      oldPassword: ['', Validators.required],\r\n      newPassword: ['', //[Validators.required, Validators.minLength(6)]],\r\n      Validators.compose([Validators.required, this.customValidator.patternValidator()])],\r\n\r\n      confirmPassword: ['', Validators.required],\r\n\r\n    }, {\r\n      validator: this.customValidator.MustMatch('newPassword', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log(\"FormControl Data\", JSON.stringify(this.registerForm.value, null, 4))\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    let data = { username: this.username, password: this.registerForm.value }\r\n    this.service.doChangePassword(data,{observe:'response'}).subscribe((response: any) => {\r\n\r\n      if (response === 200) {\r\n        this.message = 'Password Changed successfully';\r\n\r\n        this.dialogRef.close();\r\n        this.router.navigate([\"wecaast/user/login\"])\r\n       \r\n\r\n      } else {\r\n\r\n        this.message = 'Old Password is wrong!';\r\n\r\n      }\r\n    }\r\n\r\n    );\r\n  \r\n    \r\n  }\r\n   \r\n  \r\n\r\n \r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n","<h1 mat-dialog-title>Change Password</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"f.form.valid && onSubmit()\">\r\n    <div class=\"form-row\">\r\n      <div class=\"form-group col-5\">\r\n  <mat-form-field>\r\n    <mat-label>Old Password</mat-label>\r\n    <input matInput type=\"password\"   formControlName=\"oldPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.oldPassword.errors }\" required>\r\n    \r\n    <div *ngIf=\"submitted && f.oldPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.oldPassword.errors.required\">Password is required</div>\r\n      <div *ngIf=\"f.oldPassword.errors.minlength\">Password must be at least 6 characters</div>\r\n      \r\n  </div>\r\n\r\n  \r\n  </mat-form-field></div><br>\r\n  <div class=\"form-group col\">\r\n  <mat-form-field>\r\n    <mat-label>New Password</mat-label>\r\n    <input matInput type=\"password\"  formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\" required>\r\n    <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.newPassword.errors.required\">Password is required</div>\r\n      <div *ngIf=\"f.newPassword.errors.minlength\">Password must be at least 6 characters</div>\r\n      <span class=\"text-danger\"\r\n                                *ngIf=\"f.newPassword.touched && f.newPassword.errors?.invalidPassword\">\r\n                                Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\r\n                                letter and 1 number\r\n                            </span>\r\n  </div>\r\n  \r\n  </mat-form-field></div><br>\r\n  <div class=\"form-group col\">\r\n  <mat-form-field>\r\n    <mat-label>Confirm Password</mat-label>\r\n    <input matInput type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"  required>\r\n    <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n      <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n  </div>\r\n  \r\n  </mat-form-field></div>\r\n</div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"form-group\">\r\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\r\n    <span style=\"color: red;\">{{ message }}</span>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button class=\"btn btn-primary mr-1\" (click)=\"onSubmit()\">Save</button>\r\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport {DialogEditHeader} from './dialog-editHeader';\nimport { RestapiserviceService } from '../restapiservice.service';\n\n\n\n\n\n\nexport interface UserToApplication {\n  applicationId: number;\n  applicationName: string;\n  servicePath: string;\n  appSequence: number;\n \n}\n\n\n\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  oldPassword: string;\n  newPassword: string;\n  role;\n  data;\n paswdData;\nusername:string;\nappdata:any;\nshowMenu:Boolean\n  constructor(private router:Router,public dialog: MatDialog,private service:RestapiserviceService) { }\n  local_data:any\n  ngOnInit(): void {\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    let app =this.service.getUserToApplication(this.username);\n    app.subscribe(result=>{\n      this.appdata = JSON.parse(JSON.stringify(result));\n      \n      console.log(\"ApplicationName DATTATATTATTATATTA : \",this.appdata)\n      console.log(\"ApllicationID:::\",this.appdata[1].applicationId)\n      // setTimeout(() => {\n      //   this.loading=false;\n      // }, 500);\n    })\n\n   \n\n    this.local_data = history.state;\n // this.username=this.local_data.obj.username\n    \n    //sessionStorage.setItem('UserNameInSession',this.username)\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    \n    console.log( this.username)\n    this.role=JSON.parse(sessionStorage.getItem('ROLEInSession'));\n\n    if(this.role==\"ROLE_ADMIN\"){\n      this.showMenu=true;\n    }\n    \n    console.log( \"HEADER_ROLE::\",this.role);\n\n\n\n\n    /*********** 21 May ***********/\n\n\n  // this.service.getUserToApplication(this.username).subscribe(\n  // data => {\n  //  console.log(\"MAPPING DATA : \" , data);\n  // }\n  // );\n\n\n\n\n\n\n  }\n  applicationId:any;\n\n  getApp(apps){\n\n    this.applicationId=sessionStorage.setItem('applicationIdInSession',JSON.stringify(apps.applicationId))\n    console.log(JSON.parse(sessionStorage.getItem('applicationIdInSession')));\n  }\n \n  doChangePassword(): void {\n    const dialogRef = this.dialog.open(DialogEditHeader, {\n      width: '250px',\n      data: {oldPassword: this.oldPassword, newPassword: this.newPassword}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n     //this.oldPassword=result\n      this.newPassword = result;\n // this.paswdData ={getUsername:this.username,getNewPassword:this.newPassword,getOldPassword:this.oldPassword};\n\n\n    //  let resp=this.service.doChangePassword(this.paswdData);\n      console.log('Newpaswd::',this.newPassword);\n      console.log('old::',this.oldPassword)\n      console.log('user::',this.username)\n    });\n  \n  } \n\n  doLogout(){\n    sessionStorage.clear();\n    this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\n    this.router.navigate([\"wecaast/user/login\"])\n  }\n\n\n\n\n \n\n\n\n\n\n}\n\n\n\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container\">\n  <img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\">\n    \n    <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\" aria-controls=\"navbarCollapse\"\n      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n\n\n\n      \n  \n\n\n\n\n      <ul class=\"navbar-nav mr-auto\">\n\n        <li class=\"nav-item\"  *ngFor=\"let apps of appdata\" value={{apps.applicationName}} style=\"width: max-content;\">\n          <a class=\"nav-link\" href={{apps.servicePath}} (click)=\"getApp(apps)\"> {{apps.applicationName}}\n          </a>\n        </li>\n        \n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"wecaast/auditscan/\">TagSure</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/eSat\">eSat</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/WebAssure\">WebAssure</a>\n        </li> -->\n        <li class=\"nav-item dropdown\" *ngIf=\"showMenu\" style=\"width: max-content;\">\n          <a class=\"nav-link menu-item dropdown-toggle\" [matMenuTriggerFor] = \"menu\" style=\"cursor:pointer;\">Configuration</a>\n          \n          <mat-menu #menu = \"matMenu\">\n            <button mat-menu-item [matMenuTriggerFor] = \"role\">Role</button>\n            <button mat-menu-item [matMenuTriggerFor] = \"user\">User</button>\n             <button mat-menu-item  [matMenuTriggerFor] = \"application\">Application</button>\n             <button mat-menu-item  [matMenuTriggerFor] = \"feature\">Feature</button>\n             <button mat-menu-item [matMenuTriggerFor] = \"client\">Client</button>\n          </mat-menu>\n          <mat-menu #user = \"matMenu\">\n            <button mat-menu-item  [routerLink]=\"['/wecaast/user/adduser']\">Add/Edit User</button>\n            \n         </mat-menu>\n          <mat-menu #application = \"matMenu\">\n            <button mat-menu-item [routerLink]=\"['/wecaast/user/application']\">Add/Edit Application</button>\n            \n         </mat-menu>\n         <mat-menu #feature = \"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/wecaast/user/feature']\">Add/Edit Feature</button>\n          \n       </mat-menu>\n\n         <mat-menu #client = \"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/wecaast/user/client']\">Add/Edit Client</button>\n          \n       </mat-menu>\n          <mat-menu #role = \"matMenu\">\n            \n             <button mat-menu-item [routerLink]=\"['/wecaast/user/role']\">Add/Edit Role</button>\n            \n          </mat-menu>\n          \n          </li>         \n                    \n          <li class=\"nav-item\">\n            <a name =\"username\" class=\"nav-link menu-item dropdown-toggle\" [matMenuTriggerFor] = \"userMenu\" style=\"cursor: pointer;margin-left: 450px;\">{{username}}</a>\n            <mat-menu #userMenu = \"matMenu\">\n              <button mat-menu-item (click)=\"doChangePassword()\">Change Password</button>\n              <button mat-menu-item (click)=\"doLogout()\">Logout</button>\n               \n            </mat-menu>\n          </li>\n      </ul>\n<div>\n\n\n  \n\n\n</div>\n\n\n\n</div> \n</div>\n  </nav>","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'dialogOpen',\r\n    templateUrl: 'dialogOpen.html',\r\n    styleUrls: ['../role/role.component.css']\r\n  })\r\n\r\n\r\n  \r\n  export class DialogOpen {\r\n    form: any = { emailId: '' };\r\n\r\n    constructor(private service: RestapiserviceService, private router: Router,\r\n        public dialogRef: MatDialogRef<DialogOpen>) {\r\n        \r\n      }\r\n\r\n  doSubmit(){\r\n\r\n    console.log(\"email::\",this.form.emailId)\r\n\r\n    this.service.forgotPasswordEmail(this.form.emailId);\r\n    this.dialogRef.close({});\r\n    \r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n}","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong> Enter Email-ID</strong></h1>\r\n<form name=\"form\" class=\"forgotPassword-form\">\r\n<div mat-dialog-content>\r\n    <mat-form-field>\r\n        \r\n        <input  type=\"email\" placeholder=\"Email-ID\"  class=\" form-control\" name =\"emailId\" matInput [(ngModel)]=\"form.emailId\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n        \r\n      </mat-form-field><br><br>\r\n      \r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doSubmit()\" mat-flat-button color=\"primary\">Submit</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>\r\n</form>","import { Component, OnInit } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { DialogOpen } from './dialogOpen';\n\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  imgCaptcha:any;\n  captchaShow = false;\n  hide = true;\n  username: string;\n  password: string;\n  message: any\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = 'Bad Credentials';\n  loginCounter = 1;\n  counter: any;\n  captchaStr: any;\n  local_data:any;\n  action:any;\n  constructor(private service: RestapiserviceService, private router: Router,public dialog: MatDialog) { \n   // this.local_data =data;\n   // this.action = this.local_data.action;\n  }\n\n  ngOnInit(): void {\n\n    // console.log( sessionStorage.getItem('UserNameInSession'));\n  }\n\n\n\n  doLogin() {\n    debugger;\n     if(this.form.captchaText==this.imgCaptcha){\n       console.log(\"EQUAL CAPTCH\")\n     }\n\n    let resp = this.service.login(this.form);\n    resp.subscribe(data => {\n      this.message = data;\n      console.log(data);\n      this.isLoginFailed = false;\n      this.isLoggedIn = true;\n      sessionStorage.setItem('UserNameInSession', JSON.stringify(this.form.username))\n      console.log(JSON.parse(sessionStorage.getItem('UserNameInSession')));\n\n      sessionStorage.setItem('ROLEInSession', JSON.stringify(data))\n      console.log(\"ROLENAME::\", JSON.parse(sessionStorage.getItem('ROLEInSession')));\n\n      if (data == \"ROLE_ADMIN\") {\n        this.router.navigateByUrl('wecaast/user', { state: { obj: this.form } });\n\n      }\n      else if (data == \"POC, ROLE_USER, SME\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"ROLE_USER\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"ROLE_USER, SME\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"POC, SME\" || \"SME, POC\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"SME\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"POC\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n      else if (data == \"POC, ROLE_USER\") {\n        this.router.navigate([\"wecaast/user\"]);\n\n      }\n    },\n\n\n      err => {\n\n        this.errorMessage = \"Username or Password is incorrect\";\n        this.isLoginFailed = true;\n        this.setLoginCounter(this.isLoginFailed);\n\n      });\n\n\n\n  }\n\n  setLoginCounter(loginForm) {\n    this.loginCounter = this.loginCounter + 1;\n    localStorage.setItem('logCount', this.loginCounter.toString());\n\n    if (this.loginCounter > 1) {\n      //this.counter = 30 * (Math.pow(2, (this.loginCounter / 3) - 1));\n\n      this.captchaLogo();\n      this.captchaShow = true;\n    }\n\n  }\n\n\n  captchaLogo() {\n\n    this.service.captchaLogo().subscribe(data => {\n      debugger;\n      this.imgCaptcha=data\n\n      this.captchaShow = true;\n      //   this.captcha();\n\n      console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX : \",  event.preventDefault());\n\n      event.preventDefault();\n\n       console.log(\"Captcha\", JSON.stringify(this.imgCaptcha));\n\n    });\n    return false;\n     \n  }\n\n  \n  forgotPassword(){\n  \n    const dialogRef = this.dialog.open(DialogOpen, {\n      width: '250px',\n     \n    });\n    dialogRef.afterClosed().subscribe(result => {\n    \n    })\n\n   // this.router.navigate([\"wecaast/user/login/resetPassword\"])\n\n  }\n\n  \n}","<div class=\"background-wrap\">\n  <div class=\"background\"></div>\n</div>\n\n<form id=\"accesspanel\" action=\"\" *ngIf=\"!isLoggedIn\" name=\"form\" (ngSubmit)=\"f.form.valid && doLogin()\" #f=\"ngForm\"\n  novalidate>\n  <h1 id=\"litheader\"><img src=\"assets/img/weCaast_Logo.png\" style=\"margin-right: 2.5rem;width: 150px;\"></h1>\n  <div class=\"inset\">\n    <p>\n      <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"form.username\" required #username=\"ngModel\"\n        id=\"username\" placeholder=\"Username\">\n\n    </p>\n    <div class=\"alert alert-danger\" style=\"background-color:#000\" role=\"alert\" *ngIf=\"f.submitted && username.invalid\">\n      <span style=\"color: red;\"> Username is required!</span>\n\n    </div>\n    <p>\n      <input matInput [type]=\"hide ? 'password' : 'text'\"  name=\"password\" [(ngModel)]=\"form.password\" required minlength=\"6\"\n        #password=\"ngModel\" id=\"password\" placeholder=\"Password\">\n\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </p>\n\n    <div class=\"alert alert-danger\" style=\"background-color:#000\" role=\"alert\" *ngIf=\"f.submitted && password.invalid\">\n      <div *ngIf=\"password.errors.required\" style=\"color: red;\">Password is required</div>\n      <div *ngIf=\"password.errors.minlength\" style=\"color: red;\">\n        Password must be at least 8 characters\n      </div>\n    </div>\n    <a  name=\"Forgot Password\" style=\"cursor: pointer;color: red;\" (click)=\"forgotPassword()\">Forgot Password</a>\n  </div>\n\n\n\n  <div class=\"row\" style=\"margin-left: 23%;\" *ngIf=\"captchaShow\">\n\n    <img id=\"captcha_id\" name=\"imgCaptcha\" src=\"../../assets/img/captcha.png\">\n\n\n    <div class=\"col-md-6\" style=\" margin-top: 9px;\" >\n      <a title=\"change captcha text\">\n        <input type=\"button\" style=\"font-weight: bold;color: #8e8efa;\" (click)=\"captchaLogo()\" value=\"refresh\">\n\n      </a>\n    </div>\n  \n<br>\n<input type=\"text\" class=\"form-control\" name=\"captchaText\" [(ngModel)]=\"form.captchaText\" required style=\"width: 50.5%;\">\n  \n</div>\n<br>\n<div class=\"row\">\n\n    <div class=\"col-md-4\" style=\"margin-left: 37px;\">\n\n\n      <input type=\"submit\" class=\"loginButtons\" value=\"Login\" name=\"Login\">\n\n    </div>&nbsp;\n\n\n    <div class=\"col-md-4\" style=\"margin-left: 37px;\">\n      <input type=\"reset\" class=\"loginButtons\" name=\"Cancel\" value=\"Cancel\"></div>\n  </div>\n\n  <div class=\"form-group\">\n    <div class=\"alert alert-danger\" style=\"background-color:#000\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\n      <span style=\"color: red; margin-left: 37px;\">{{ errorMessage }}</span>\n\n    </div>\n  </div>\n\n</form>\n\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RestapiserviceService } from '../restapiservice.service';\r\n//import { MustMatch } from './must-match.validator';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router } from '@angular/router';\r\nimport { CustomvalidationService } from '../header/customValidationService';\r\n\r\n\r\nexport interface DialogData {\r\n    userName: any;\r\n   // userPassword: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n  }\r\n\r\n@Component({\r\n    selector: 'resetPassword',\r\n    templateUrl: './resetPassword.html',\r\n    styleUrls: ['./resetPassword.css']\r\n  })\r\n\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n    registerForm: FormGroup;\r\n    submitted = false;\r\n  \r\n    form: any = {};\r\n    action: string;\r\n    local_data: any;\r\n    username: any;\r\n    message:any;\r\n\r\n    constructor(public service: RestapiserviceService, private formBuilder: FormBuilder,private router: Router, private customValidator: CustomvalidationService) { \r\n        // this.local_data =data;\r\n        // this.action = this.local_data.action;\r\n       }\r\n     \r\n       ngOnInit(): void {\r\n     \r\n        this.username = JSON.parse(sessionStorage.getItem('UserNameInSession'));\r\n   // this.username = history.state;\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      newPassword: ['', //[Validators.required, Validators.minLength(6)]],\r\n      Validators.compose([Validators.required, this.customValidator.patternValidator()])],\r\n\r\n      confirmPassword: ['', Validators.required],\r\n\r\n    }, {\r\n      validator: this.customValidator.MustMatch('newPassword', 'confirmPassword')\r\n    });\r\n       }\r\n\r\n\r\n// convenience getter for easy access to form fields\r\nget f() { return this.registerForm.controls; }\r\n\r\nresetPassword(){\r\n    this.submitted = true;\r\n    console.log(\"FormControl Data\", JSON.stringify(this.registerForm.value, null, 4))\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    let data = { username: this.registerForm.value.userName, password: this.registerForm.value }\r\n    this.service.doChangePassword(data,{observe:'response'}).subscribe((response: any) => {\r\n\r\n      if (response === 200) {\r\n        this.message = 'Password Changed successfully';\r\n\r\n       // this.dialogRef.close();\r\n        this.router.navigate([\"wecaast/user/login\"])\r\n       \r\n\r\n      } else {\r\n\r\n        this.message = 'Password is wrong!';\r\n\r\n      }\r\n    }\r\n\r\n    );\r\n}\r\n\r\n}","<mat-card class=\"z-depth center\" flex=\"50\" >\r\n<label style=\"font-size: xx-large;\">Reset Password</label>\r\n<br><br>\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"f.form.valid && resetPassword()\">\r\n\r\n\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-5\">\r\n        <mat-form-field>\r\n          <mat-label>UserName</mat-label>\r\n          <input matInput type=\"text\"  formControlName=\"userName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.userName.errors }\" required>\r\n          <div *ngIf=\"submitted && f.userName.errors\" class=\"invalid-feedback\">\r\n            \r\n        </div>\r\n        \r\n        </mat-form-field></div></div>\r\n\r\n    <div class=\"form-row\">\r\n  <div class=\"form-group col-5\">\r\n  <mat-form-field>\r\n    <mat-label>New Password</mat-label>\r\n    <input matInput type=\"password\"  formControlName=\"newPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\" required>\r\n    <div *ngIf=\"submitted && f.newPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.newPassword.errors.required\">Password is required</div>\r\n      <div *ngIf=\"f.newPassword.errors.minlength\">Password must be at least 6 characters</div>\r\n      <span class=\"text-danger\"\r\n                                *ngIf=\"f.newPassword.touched && f.newPassword.errors?.invalidPassword\">\r\n                                Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\r\n                                letter and 1 number\r\n                            </span>\r\n  </div>\r\n  \r\n  </mat-form-field></div></div>\r\n  <div class=\"form-row\">\r\n  <div class=\"form-group col\">\r\n  <mat-form-field>\r\n    <mat-label>Confirm Password</mat-label>\r\n    <input matInput type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\"  required>\r\n    <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n      <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n  </div>\r\n  \r\n  </mat-form-field></div>\r\n</div>\r\n  </form>\r\n\r\n  <button class=\"btn btn-primary mr-1\" (click)=\"resetPassword()\">Reset</button>\r\n  \r\n</mat-card>","import { Component, OnInit, Input, ViewChild, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\n\nimport { Location } from '@angular/common';\n\n\n\n\nexport interface userData {\n\n  userName: string;\n\n}\ninterface Roles {\n  roleName: string;\n\n}\nexport class RoleFeature {\n  featureId:number;\n  roleId:number;\n}\n\nexport class UserRoleMenus {\n  userName: string;\n  roleName: string;\n  roleId: number;\n  dyRows: Array<any>;\n}\n\n@Component({\n  selector: 'app-managePermission',\n\n  templateUrl: './managePermission.component.html',\n  styleUrls: ['./managePermission.component.css']\n})\nexport class ManagePermissionComponent implements OnInit {\n\n  columns: any\n  displayedColumns: any\n\n  users: userData[] = [];\n\n  local_data: any = {};\n  userName: string;\n  applicationName: string;\n  userEmail: string;\n  role: Roles[] = [];\n  role_name: any = { userName: 'AAA' };\n  clientName: string;\n  roleName: string;\n  featureData: any;\n  username: string;\n  checkBoxSelected: any;\n  valueChecked: any;\n  featureName: string;\n  roleNamebyuserId: any;\n  userId: any;\n\n  //displayedColumns: string[] = ['userName', 'roleName','empLastName','userEmail'];\n  // dataSource = new MatTableDataSource(this.role_name);\n  listFeatureID: Array<RoleFeature> = new Array<RoleFeature>();\n\n  listUserRoleMenus: Array<UserRoleMenus> = new Array<UserRoleMenus>();\n  dataSource = new MatTableDataSource(this.listUserRoleMenus);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n  constructor(private service: RestapiserviceService, private router: Router, private location: Location) {\n    //this.displaycolumndefs =this.role_name;\n\n\n  }\n\n\n\n  ngOnInit(): void {\n   // this.local_data = history.state;\n    this.userName = sessionStorage.getItem('SessionUserName');\n\n    this.applicationName = sessionStorage.getItem('SessionApplicationName');\n    this.userEmail = sessionStorage.getItem('SessionUserEmail');\n    this.clientName =sessionStorage.getItem('SessionClientName');\n    this.roleName = sessionStorage.getItem('SessionRoleName');\n\n\n\n    //this is Api\n\n    this.service.getRoleByUserId(this.userName).subscribe(\n      data => {\n        debugger;\n        if (data) {\n          this.roleNamebyuserId = data;\n\n          this.roleNamebyuserId.forEach(roleItem => {\n            let _userRoleMenus: UserRoleMenus = new UserRoleMenus();\n            _userRoleMenus.userName = this.userName;\n            _userRoleMenus.roleName = roleItem.roleName;\n            _userRoleMenus.roleId = roleItem.roleId;\n            _userRoleMenus.dyRows = new Array<any>();\n            this.listUserRoleMenus.push(_userRoleMenus);\n          });\n\n\n        }\n        this.BindFeatureData();\n        console.log(this.roleNamebyuserId)\n      }\n    )\n\n\n\n\n\n\n\n\n\n\n  }\n\n  BindFeatureData() {\n    this.service.getUserFeatureMapping(this.userName).subscribe(\n      data => {\n        debugger;\n        this.listFeatureID = data;\n        console.log(data);\n        this.BindDataSource();\n\n      }\n    );\n\n  }\n\n\n  BindDataSource() {\n\n    this.service.getFeatureData().subscribe(\n      data => {\n\n        this.featureData = data;\n        //this.local_data = history.state;\n        this.userName = sessionStorage.getItem('SessionUserName');\n\n        this.userId = sessionStorage.getItem('SessionUserId');\n       \n        this.columns = [];\n        this.columns.push({ columnDef: 'userName', columnId: 0, header: 'UserName', isCheckBox: false });\n        this.columns.push({ columnDef: 'roleName', columnId: 0, header: 'Role', isCheckBox: false });\n        data.map((a, e) => { return { columnDef: a.featureName, columnId: a.featureId, header: a.featureName, isCheckBox: true }; })\n          .forEach(element => {\n            this.columns.push(element);\n\n          });\n\n\n        this.listUserRoleMenus.forEach(x => {\n          data.forEach(e => {\n            debugger;\n\n            var _markCheck = this.listFeatureID?.some((i) => (i.featureId ?? 0) == e.featureId && i.roleId == x.roleId);\n\n            x.dyRows.push({ id: e.featureId, name: e.featureName, isChecked: _markCheck });\n          });\n        });\n\n        this.dataSource.data = this.listUserRoleMenus;\n      \n        this.displayedColumns = this.columns.map(c => c.columnDef);\n\n        console.log(\"getUserRoleFeatureData:::\" + this.displayedColumns)\n      }\n    );\n  }\n\n  OnSave() {\n    debugger;\n    let columndata: any[] = [];\n\n    var userName = this.userName;\n\n\n    this.listUserRoleMenus.forEach(element => {\n      var dyColumns = element.dyRows;\n\n      var featureIdList = dyColumns\n        .filter((x, i) => x.isChecked == true)\n        .map((x, i) => { return x.id; });\n      columndata.push({ userId: this.userId, roleId: element.roleId, featureIdList });\n      console.log(columndata)\n\n    });\n\n    this.service.doSaveUserFeatureData(columndata);\n  }\n}\n","\n<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\"  name=\"form\" #f=\"ngForm\" novalidate>\n\n    <mat-form-field>\n      <mat-label>UserName</mat-label>\n      <input matInput name =\"userName\" [(ngModel)]=\"userName\" disabled>\n    </mat-form-field><br> \n\n    <mat-form-field>\n      <mat-label>Email Id</mat-label>\n      <input matInput name =\"userEmail\" [(ngModel)]=\"userEmail\" disabled>\n    </mat-form-field>\n<br>\n\n    <mat-form-field>\n      <mat-label>Application Name</mat-label>\n      <input matInput name =\"applicationName\" [(ngModel)]=\"applicationName\" disabled>\n    </mat-form-field><br>\n\n    <mat-form-field>\n      <mat-label>Client Name</mat-label>\n      <input matInput name =\"clientName\" [(ngModel)]=\"clientName\" disabled>\n    </mat-form-field>\n\n  <br>\n  <mat-form-field>\n    <mat-label>Role</mat-label>\n    <input matInput name =\"roleName\" [(ngModel)]=\"roleName\" disabled>\n  </mat-form-field><br>\n  <br><br>\n\n  \n  </form>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n  \n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n          <ng-container *ngFor=\"let col of columns\" [matColumnDef]=\"col.columnDef\">\n            <mat-header-cell *matHeaderCellDef>{{ col.header }}</mat-header-cell>\n            <mat-cell  *matCellDef=\"let row\">\n              <span *ngIf=\"!col.isCheckBox\">{{ row[col.columnDef]}}</span>\n              \n              <div *ngFor=\"let _cRow of row.dyRows\">\n                <mat-checkbox *ngIf=\"_cRow.id==col.columnId\" [(ngModel)]=\"_cRow.isChecked\"></mat-checkbox>\n              </div>\n\n              \n             </mat-cell>\n           \n          </ng-container>\n\n    \n   <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n    </mat-table>\n<br><br>\n    <div class=\"example-button-row\">\n  \n      <button mat-raised-button color=\"primary\" (click)=\"OnSave()\">Save</button>\n      <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n     \n    \n    </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'reportAuditScan',\r\n    templateUrl: './reportAuditScan.html',\r\n   // styleUrls: ['./login.component.css']\r\n  })\r\n  export class ReportAuditScanComponent {\r\n\r\n  }","<button>Download Report </button>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders ,HttpEvent, HttpErrorResponse, HttpEventType,HttpRequest} from '@angular/common/http'; \r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Restapi_auditScan_Service {\r\n\r\n  constructor(private http: HttpClient,private https: HttpClient,private router: Router) { }\r\n  url = \"http://localhost:8002/wecaast/auditscan\";\r\n\r\n\r\n   startScan(auditInput,userName){\r\n        return this.http.post(`${this.url}/seedUrlFunction/`+userName,auditInput).subscribe((result) => {\r\n   \r\n   debugger         // This code will be executed when the HTTP call returns successfully \r\nconsole.log(result);\r\n\r\nif(result!=0){\r\n  this.router.navigate([\"wecaast/auditscan/reportAuditScan\"]);\r\n}\r\n\r\nelse{\r\n  this.router.navigate([\"wecaast/auditscan/seedUrlFunction\"]);\r\n}\r\n\r\n      });\r\n      } \r\n\r\n\r\n  getApplicationToFeature(applicationId:String): Observable<any> {\r\n   \r\n    return this.http.get(`${this.url}/getApplicationToFeature/`+applicationId);\r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   pushFileToStorage(file:File): Observable<any> {\r\n          const data: FormData = new FormData();\r\n          data.append('file', file);\r\n       \r\n          console.log(\"DATAAAAAAAAA: \" , data);\r\n          return this.http.post('http://localhost:8002/wecaast/auditscan/savefile', data,{responseType:'text' as 'json'}\r\n      );\r\n    } \r\n\r\n\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders,HttpEvent,HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestapiserviceService {\n\n  isPasswordEnter = false;\n  isPasswordFailed = false;\n  errorMessage = 'Bad Credentials';\n  message:any;\n\n  constructor(private http: HttpClient) { }\n  url = \"http://localhost:8000/wecaast/user\";\n\n\n\n  login(credentials): Observable<any> {\n\n    const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/login`, { headers, responseType: 'text' as 'json' })\n  }\n\n  doChangePassword(paswdData,response:any){\n\n    //const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(paswdData.username.obj.username + ':' + paswdData.password) });\n    const data= {userName:paswdData.username,userPassword:paswdData.password.oldPassword,newPassword:paswdData.password.newPassword};\n    return this.http.put(`${this.url}/changePassword`, data)\n         \n         \n\n      \n\n  }\n  getClientName(): Observable<any> {\n\n    return this.http.get(`${this.url}/getClientByActive`);\n\n  }\n  getApplicationName(): Observable<any> {\n\n    return this.http.get(`${this.url}/getApplicationByActive`);\n\n  }\n\n  doSaveRole(roleData: any,response:any) {\n    return this.http.post(`${this.url}/createRole`, roleData)\n          \n  }\n  doSaveUser(userData: string,response:any) {\n\n\n    return this.http.post(`${this.url}/createUser`, userData);\n  }\n  doSaveApplication(applicationData: string,response:any) {\n\n\n    return this.http.post(`${this.url}/createApplication`, applicationData);\n  }\n  doSaveFeature(featureData: string,response:any) {\n\n\n    return this.http.post(`${this.url}/createFeatures`, featureData);\n  }\n\n\n  doEditRole(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editRole`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n  doEditFeature(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editFeatures`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  doEditApplication(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editApplication`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  doEditClient(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editClient`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n  doEditUser(row_obj: any) {\n\n\n    return this.http.put(`${this.url}/editUser`, row_obj).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  getRoleData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getRole`);\n\n  }\n\n  getUserData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getuser`);\n\n  }\n\n  getApplicationData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getApplication`);\n\n  }\n  getFeatureData(): Observable<any> {\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getFeatures`);\n\n  }\n  getRoleByUserId(userName){\n\n    // const headers = new HttpHeaders({ Authorization: 'Basic ' + btoa(credentials.username + ':' + credentials.password) });\n    return this.http.get(`${this.url}/getRoleByUserId/`+userName);\n\n  }\n  \n  doSaveClient(client: string,response:any) {\n    //const body = {clientname: clientName, domainname: domain,clientlogo:clientLogo};\n\n    return this.http.post(`${this.url}/createClient`,client);\n  }\n\n\n  // pushFileToStorage(file:File): Observable<HttpEvent<{}>> {\n  //         const data: FormData = new FormData();\n  //         data.append('file', file);\n  //      \n  //         console.log(\"DATAAAAAAAAA: \" , data);\n  //         const newRequest = new HttpRequest('POST', 'http://localhost:8000/wecaast/user/savefile', data, {\n  //        // reportProgress: true,\n  //        // responseType: 'json'\n  //         });\n  //         return this.http.request(newRequest);\n  //         } \n\n  debugger\n    pushFileToStorage(file:File): Observable<any> {\n       const data: FormData = new FormData();\n          data.append('file', file);\n       \n          console.log(\"DATAAAAAAAAA: \" , data);\n      return this.http.post('http://localhost:8000/wecaast/user/savefile', data,{responseType:'text' as 'json'});\n    }\n\n\n  getClientData(): Observable<any> {\n\n    return this.http.get(`${this.url}/getClient`);\n\n  }\n\n  doSaveUserFeatureData(columnData){\n    return this.http.post(`${this.url}/createUserFeatureMapping`, columnData).subscribe(\n      (response) => console.log(response),\n      (error) => console.log(error)\n    );\n  }\n\n  getUserFeatureMapping(username): Observable<any> {\n\n    return this.http.get(`${this.url}/getUserFeatureMapping/`+username);\n\n  }\n  \n  getRoleName(): Observable<any> {\n\n    return this.http.get(`${this.url}/getRoleByStatus`);\n\n  }\n\n  getApplicationTaggedToUser(username:String):Observable<any> {\n\n    return this.http.get(`${this.url}/getApplicationTaggedToUser/`+username);\n\n  }\n\n\n\n/*********** 21 May ***********/\n\n\ngetUserToApplication(username:String): Observable<any> {\n\n  return this.http.get(`${this.url}/getUserToApplication/`+username);\n\n}\n\n\ncaptchaLogo(): Observable<any> {\n  return this.http.get(`${this.url}/getCaptcha`,{responseType: 'text' as 'json' });\n}\n\nforgotPasswordEmail(emailId){\n  debugger\n  return this.http.post(`${this.url}/forgotPassword/`+emailId, emailId).subscribe(\n    (response) => console.log(response),\n    (error) => console.log(error)\n  );\n}\n\n\n\n}\n\n\n\n","import { Component, Optional,Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface roleData {\r\n\r\n    roleName: string;\r\n    roleId: number;\r\n    active: number;\r\n    Action:string;\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'dialog-edit',\r\n    templateUrl: 'dialog-edit.html',\r\n    styleUrls: ['./role.component.css']\r\n  })\r\n\r\n \r\n\r\n  export class DialogEdit {\r\n  \r\n    action:string;\r\n    local_data:any;\r\n  \r\n    constructor(\r\n      public dialogRef: MatDialogRef<DialogEdit>,\r\n      //@Optional() is used to prevent error if no data is passed\r\n      @Optional() @Inject(MAT_DIALOG_DATA) public data: roleData) {\r\n      console.log(data);\r\n      this.local_data =data\r\n      this.action = this.local_data.action;\r\n    }\r\n    doAction(){\r\n      this.dialogRef.close({event:this.action,data:this.local_data});\r\n      \r\n    }\r\n  \r\n    closeDialog(){\r\n      this.dialogRef.close({event:'Cancel'});\r\n    }\r\n  \r\n  }\r\n  \r\n  ","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field>\r\n        \r\n        <input placeholder=\"{{action}} RoleName\"  class=\" form-control\" name =\"roleName\" matInput [(ngModel)]=\"local_data.roleName\">\r\n        \r\n      </mat-form-field><br><br>\r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div><br><br>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewChild, AfterViewInit, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { DialogEdit } from './dialog-edit';\n\nexport interface roleData {\n\n  roleName: string;\n  roleId: number;\n  active: number;\n  Action: string;\n\n}\n\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\n\nexport class RoleComponent implements OnInit {\n\n\n  form: any = { active: 1, roleName: '' };\n  message: any\n  users: roleData[] = [];\n  displayedColumns: string[] = ['roleId', 'roleName', 'active', 'action'];\n  dataSource = new MatTableDataSource(this.users);\n\n\n  listStatus = [\n    { name: 'Active', value: 1, checked: true },\n    { name: 'Inactive', value: 0, checked: false }\n  ];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n  //=============================================================\n\n  roleNameInvalid: boolean;\n\n\n  constructor(private service: RestapiserviceService, private router: Router, public dialog: MatDialog) { }\n\n  onSubmit(form) {\n    console.log(form.value)\n  }\n  ngOnInit(): void {\n\n\n    this.service.getRoleData().subscribe(\n      data => {\n        this.users = data;\n        this.dataSource = new MatTableDataSource(this.users);\n\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n\n        console.log(\"GETROLE\" + JSON.stringify(data))\n      }\n    );\n  }\n  doSaveRole() {\n    //this.form.valid\n    debugger;\n    if (this.ValidateForm()) {\n      \n      this.service.doSaveRole(this.form, { observe: 'response' })\n\n        .subscribe((response: any) => {\n\n          if (response === 200) {\n            const dialogRef = this.dialog.open(DialogClose, {\n              width: '250px',\n\n            });\n\n          } else {\n\n            this.message = 'Role not saved successfully';\n\n          }\n        }\n\n        );\n\n    }\n\n  }\n\n\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  editValue(action, obj) {\n    obj.action = action;\n    const dialogRef = this.dialog.open(DialogEdit, {\n      width: '250px',\n      data: obj\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n\n  updateRow(row_obj) {\n\n    this.dataSource.data.filter((value, key) => {\n      if (value.roleId == row_obj.roleId) {\n        value.roleName = row_obj.roleName;\n        value.active = row_obj.active;\n\n      }\n\n      return true;\n\n    });\n    let resp = this.service.doEditRole(row_obj);\n\n  }\n\n  ValidateForm() {\n    let _isValid = true;\n\n    this.roleNameInvalid = (!this.form.roleName || this.form.roleName == '')\n\n    if (this.roleNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n}\n\n\n\n\n\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>) { }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n\n","<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\"  name=\"form\" #roleForm=\"ngForm\" (ngSubmit)=\"roleForm.form.valid && onSubmit(roleForm)\" novalidate class=\"role-form\">\n    <div class=\"form-group\">\n    <mat-form-field class=\"example-full-width\">\n    <mat-label>Role Name</mat-label>\n    <input matInput class=\"form-control\" name =\"roleName\" [(ngModel)]=\"form.roleName\" #roleName=\"ngModel\"\n    (click)=\"roleNameInvalid == false\" [ngClass]=\"{ 'is-invalid': roleNameInvalid}\" required>\n  </mat-form-field>\n  <div>\n    <span *ngIf=\"roleNameInvalid\" style=\"color: red;\">Name is required</span>\n</div>\n\n \n  </div>\n  \n<mat-radio-group aria-label=\"Select Status\" name=\"roleActive\" [(ngModel)]=\"form.active\">\n  <mat-radio-button for=\"roleActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n \n</mat-radio-group>\n<br><br><br>\n<div class=\"example-button-row\">\n\n  <button mat-raised-button color=\"primary\" (click)=\"doSaveRole()\">Save</button>\n  <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n \n\n</div>\n</form>\n</div>\n\n\n\n<br><br>\n\n\n<div class=\"form-group\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n    <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n\n  </div>\n</div>\n     \n\n       \n  \n     \n\n<br><br>\n\n<div class=\"example-header\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n  \n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"roleId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Role Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.roleId}} </mat-cell>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"roleName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Role Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.roleName}} </mat-cell>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n    </ng-container>\n  \n     <!-- Action Column -->\n     <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\" (click)=\"editValue('Update',row)\">\n            <mat-icon aria-label=\"Edit\">edit</mat-icon>\n          </button>\n       \n      </mat-cell>\n    </ng-container>\n    \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">   </mat-row>\n    </mat-table>\n  \n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n  \n \n  </div>","\r\n<div mat-dialog-content>\r\n  <p>Details have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class UserRequest{\n\n  //private baseUrl = '/wecaast/user';\n\n  userId:string;\n   userName:string;\n   userEmail:string;\n     \n  constructor(\n    private _userId:string,\n    public _userName:string,\n    private _userEmail:string\n   \n  ) {\n\t   this.userId = _userId;\n       this.userName = _userName;\n\t   this.userEmail = _userEmail;\n      \n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpClientService {\n\n  url = 'http://localhost:8000/wecaast/user/getName';  \n\n  constructor(private http:HttpClient) { }\n\n getUserRequestList(): Observable<UserRequest[]> {  \n  var response = this.http.get<UserRequest[]>(this.url);  \n  console.log(\"DATA:\", response);\n  return response;\n}  \n}","import { Component, Optional, Inject } from '@angular/core';\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\nexport interface userData {\r\n  userId: number;\r\n  userName: string;\r\n  userFirstName: string;\r\n  empLastName: string;\r\n  userEmail: string;\r\n  active: number;\r\n  applicationName: string;\r\n  applicationId: number\r\n  clientName: string;\r\n  role: Array<any>\r\n  client: Array<any>\r\n  application: Array<any> \r\n}\r\n\r\n@Component({\r\n  selector: 'dialog-editUser',\r\n  templateUrl: 'dialog-editUser.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\n\r\n\r\nexport class DialogEditUser {\r\n\r\n  action: string;\r\n  local_data: any;\r\n  drpApplication: any\r\n  drpClients: any\r\n  drpRoles = new Array();\r\n  // selectedRole: any[] = [];\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogEditUser>,\r\n    //@Optional() is used to prevent error if no data is passed\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data) {\r\n    console.log(data);\r\n    if (data) {\r\n      this.local_data = data.row;\r\n      this.action = this.local_data.action;\r\n      this.drpApplication = data.applicationName;\r\n      this.drpClients = data.clientName;\r\n      this.drpRoles = data.role;\r\n      this.local_data.role = data.row.roleName?.split(',');\r\n      this.local_data.client = data.row.clientName?.split(',');\r\n      this.local_data.application = data.row.applicationName?.split(',');\r\n    }\r\n\r\n  }\r\n  doAction() {\r\n    this.dialogRef.close({ event: this.action, data: this.local_data });\r\n\r\n  }\r\n\r\n  closeDialog() {\r\n    this.dialogRef.close({ event: 'Cancel' });\r\n  }\r\n\r\n}\r\n\r\n","<!-- dialog-box.component.html -->\r\n<h1 mat-dialog-title><strong>{{action}} Details</strong></h1>\r\n<div mat-dialog-content>\r\n    <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} UserName\" name =\"userName\" matInput [(ngModel)]=\"local_data.userName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} userFirstName\" name =\"userFirstName\" matInput [(ngModel)]=\"local_data.userFirstName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} empLastName\" name =\"empLastName\" matInput [(ngModel)]=\"local_data.empLastName\">\r\n        \r\n      </mat-form-field><br>\r\n      <mat-form-field appearance=\"fill\">\r\n        \r\n        <input placeholder=\"{{action}} userEmail\" name =\"userEmail\" matInput [(ngModel)]=\"local_data.userEmail\">\r\n        \r\n      </mat-form-field><br>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Select Application</mat-label>\r\n        <mat-select  name=\"applicationName\" [(ngModel)]=\"local_data.application\" multiple>\r\n          <mat-option *ngFor=\"let apps of drpApplication\" value={{apps.applicationName}}>\r\n            {{apps.applicationName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Select Client</mat-label>\r\n        <mat-select  name=\"clientName\" [(ngModel)]=\"local_data.client\" multiple>\r\n          <mat-option *ngFor=\"let clients of drpClients\" value={{clients.clientName}}>\r\n            {{clients.clientName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br>\r\n      <mat-form-field>\r\n        <mat-label>Select Role</mat-label>\r\n        <mat-select  name=\"role\" [(ngModel)]=\"local_data.role\" multiple>\r\n          <mat-option *ngFor=\"let roles of drpRoles\" value={{roles.roleName}}>\r\n            {{roles.roleName}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field><br>\r\n      <mat-radio-group aria-label=\"Select Status\" name=\"active\" [(ngModel)]=\"local_data.active\">\r\n        <mat-radio-button  value=\"Active\">Active</mat-radio-button>\r\n        <mat-radio-button  value=\"Inactive\">Inactive</mat-radio-button>\r\n      </mat-radio-group>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"doAction()\">{{action}}</button>\r\n  <button mat-button (click)=\"closeDialog()\" mat-flat-button color=\"warn\">Cancel</button>\r\n</div>","import { Component, OnInit, ViewChild, ChangeDetectorRef, Optional, Inject } from '@angular/core';\nimport { RestapiserviceService } from '../restapiservice.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { DialogEditUser } from './dialog-editUser';\nimport { FormControl } from '@angular/forms';\n\n\ninterface Apps {\n  name: string;\n\n}\n\nexport interface userData {\n  userId: number;\n  userName: string;\n  userFirstName: string;\n  empLastName: string;\n  userEmail: string;\n  active: any;\n  applicationName: string;\n  applicationId: number;\n  clientName: string;\n  roleName: string;\n  role: Array<any>;\n  client: Array<any>;\n  application:Array<any>;\n}\n\n\n\n@Component({\n  selector: 'app-user',\n\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  statusCheck: boolean;\n\n  userId: any;\n  userName: any\n  applicationName: any;\n  userEmail: any;\n  clientName: any;\n  roleName: any;\n  users: userData[] = [];\n  app: Apps[] = [];\n  applicationname: any\n  form: any = { active: 1, userName: '', userFirstName: '', empLastName: '', userEmail: '', application: '', client: '', role: '' };\n  message: any\n  listStatus = [\n    { name: 'Active', value: 1, checked: true },\n    { name: 'Inactive', value: 0, checked: false }\n  ];\n\n  displayedColumns: string[] = ['userId', 'userName', 'userFirstName', 'empLastName', 'userEmail', 'applicationName', 'clientName', 'roleName', 'active', 'action', 'permission'];\n  dataSource = new MatTableDataSource(this.users);\n\n  role_name: any\n  clientname: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  table: MatTable<any>\n\n\n\n  userEmailInvalid: boolean\n  userNameInvalid: boolean\n  applicationNameInvalid: boolean\n  roleInvalid: boolean\n  clientNameInvalid: boolean\n  userFirstNameInvalid: boolean\n  empLastNameInvalid: boolean\n\n\n  constructor(private service: RestapiserviceService, private router: Router, public dialog: MatDialog, private changeDetectorRefs: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource(this.users);\n\n\n\n\n\n    this.service.getApplicationName().subscribe(result => {\n      this.applicationname = result;\n\n    }, error => console.error(error));\n\n    this.service.getClientName().subscribe(result => {\n      this.clientname = result;\n    }, error => console.error(error));\n\n    this.service.getRoleName().subscribe(result => {\n      this.role_name = result;\n    }, error => console.error(error));\n\n    this.service.getUserData().subscribe(\n      data => {\n        this.users = data;\n        this.dataSource = new MatTableDataSource(this.users);\n        sessionStorage.setItem('UserDataInSession', JSON.stringify(this.users));\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        sessionStorage.setItem('ROLE_NAME_MAPPING_in_Session', JSON.stringify(this.users));\n      }\n    );\n  }\n\n  doSaveUser() {\n    if (this.ValidateForm()) {\n      let resp = this.service.doSaveUser(this.form, { observe: 'response' }).subscribe((response: any) => {\n\n        if (response === 200) {\n          const dialogRef = this.dialog.open(DialogClose, {\n            width: '250px',\n\n          });\n\n        } else {\n\n          this.message = 'Details not saved successfully';\n\n        }\n      }\n\n      );\n    }\n  }\n\n  ngAfterViewInit() {\n    //this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n  editUser(action, obj) {\n    obj.action = action;\n    let params = {\n      row: obj,\n      applicationName: this.applicationname,\n      clientName: this.clientname,\n      role: this.role_name,\n      \n    };\n    const dialogRef = this.dialog.open(DialogEditUser, {\n      width: '250px',\n      data: params,\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.updateRow(result.data);\n      //let resp = this.service.doEditRole(result.data);\n    })\n  }\n\n  editPermission(action, obj) {\n\n    this.router.navigateByUrl('wecaast/user/adduser/managePermission', { state: { obj } });\n    this.userName = sessionStorage.setItem('SessionUserName', obj.userName);\n    this.applicationName = sessionStorage.setItem('SessionApplicationName', obj.applicationName);\n    this.userEmail = sessionStorage.setItem('SessionUserEmail', obj.userEmail);\n    this.clientName = sessionStorage.setItem('SessionClientName', obj.clientName);\n    this.roleName = sessionStorage.setItem('SessionRoleName', obj.roleName);\n    this.userId = sessionStorage.setItem('SessionUserId', obj.userId);\n  }\n\n\n  updateRow(row_obj) {\n\n\n    this.dataSource.data.filter((value, key) => {\n      if (value.userId == row_obj.userId) {\n        value.userName = row_obj.userName;\n        value.userFirstName = row_obj.userFirstName;\n        value.empLastName = row_obj.empLastName;\n        value.userEmail = row_obj.userEmail;\n        value.active = row_obj.active;\n        value.applicationName = row_obj.applicationName;\n        value.clientName = row_obj.clientName;\n        value.roleName = row_obj.roleName;\n\n      }\n\n      return true;\n\n    });\n\n    let resp = this.service.doEditUser(row_obj);\n\n\n  }\n\n\n  ValidateForm() {\n    let _isValid = true;\n    this.userFirstNameInvalid = (!this.form.userFirstName || this.form.userFirstName == '')\n    this.empLastNameInvalid = (!this.form.empLastName || this.form.empLastName == '')\n    this.userEmailInvalid = (!this.form.userEmail || this.form.userEmail == '')\n    this.userNameInvalid = (!this.form.userName || this.form.userName == '')\n    this.applicationNameInvalid = (!this.form.application || this.form.application == '')\n    this.roleInvalid = (!this.form.role || this.form.role == '')\n    this.clientNameInvalid = (!this.form.client || this.form.client == '')\n\n    if (this.userFirstNameInvalid || this.empLastNameInvalid || this.userEmailInvalid || this.userNameInvalid || this.applicationNameInvalid || this.roleInvalid || this.clientNameInvalid) {\n      _isValid = false;\n    }\n\n    return _isValid;\n\n  }\n\n}\n\n\n@Component({\n  selector: 'dialog-open',\n  templateUrl: 'dialog-open.html',\n})\nexport class DialogClose {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogClose>) { }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"example-container\" style=\"margin-left: 250px;\">\n  <form id=\"accesspanel\" action=\"\" name=\"form\"  #userForm=\"ngForm\" (ngSubmit)=\"userForm.form.valid\" novalidate class=\"role-form\">\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <mat-form-field>\n          <mat-label>First Name</mat-label>\n          <input matInput class=\"form-control\" name=\"userFirstName\" [(ngModel)]=\"form.userFirstName\" #userForm=\"ngModel\"\n          (click)=\"userFirstNameInvalid == false\" [ngClass]=\"{ 'is-invalid': userFirstNameInvalid}\" required>\n        </mat-form-field>\n        <div>\n          <span *ngIf=\"userFirstNameInvalid\" style=\"color: red;\">Please enter FirstName </span>\n      </div>\n      </div>\n      <br>\n\n      <div class=\"col-md-2\">\n        <mat-form-field>\n          <mat-label>Last Name</mat-label>\n          <input matInput class=\"form-control\" name=\"empLastName\" [(ngModel)]=\"form.empLastName\" #userForm=\"ngModel\"\n          (click)=\"empLastNameInvalid == false\" [ngClass]=\"{ 'is-invalid': empLastNameInvalid}\" required>\n        </mat-form-field>\n        <div>\n          <span *ngIf=\"empLastNameInvalid\" style=\"color: red;\">Please enter LastName </span>\n      </div>\n      </div>\n    </div>\n    <br>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n    <mat-form-field>\n      <mat-label>Email Id</mat-label>\n      <input matInput type=\"email\" class=\"form-control\" name=\"userEmail\" [(ngModel)]=\"form.userEmail\" #userForm=\"ngModel\"\n      (click)=\"userEmailInvalid == false\" [ngClass]=\"{ 'is-invalid': userEmailInvalid}\" required pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n    </mat-form-field>\n    <div *ngIf=\"userEmailInvalid\">\n      <span *ngIf=\"userEmailInvalid\" style=\"color: red;\">Please enter Email-ID </span>\n      <span  *ngIf=\"userEmail.errors.pattern && userEmail.touched\" style=\"color: red;\">Please provide a valid email address</span>\n  </div></div>\n    <br>\n   \n      <div class=\"col-md-2\">\n    <mat-form-field>\n      <mat-label>User Name</mat-label>\n      <input matInput class=\"form-control\" name=\"userName\" [(ngModel)]=\"form.userName\" #userForm=\"ngModel\"\n      (click)=\"userNameInvalid == false\" [ngClass]=\"{ 'is-invalid': userNameInvalid}\" required>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"userNameInvalid\" style=\"color: red;\">Please enter UserName </span>\n  </div>\n    <br></div></div>\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n    <mat-form-field>\n      <mat-label>Select Application</mat-label>\n      <mat-select name=\"application\" [(ngModel)]=\"form.application\" #userForm=\"ngModel\" multiple\n      (click)=\"applicationNameInvalid == false\" [ngClass]=\"{ 'is-invalid': applicationNameInvalid}\" required>\n        <mat-option *ngFor=\"let apps of applicationname\" value={{apps.applicationName}}>\n          {{apps.applicationName}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div>\n      <span *ngIf=\"applicationNameInvalid\" style=\"color: red;\">Please Select Application</span>\n  </div>\n  </div>\n    \n    <div class=\"col-md-3\">\n      \n      <mat-form-field>\n        <mat-label>Select Role</mat-label>\n        <mat-select  name=\"role\" [(ngModel)]=\"form.role\" multiple #userForm=\"ngModel\"\n        (click)=\"roleInvalid == false\" [ngClass]=\"{ 'is-invalid': roleInvalid}\" required>\n          <mat-option *ngFor=\"let roles of role_name\" value={{roles.roleName}}>\n            {{roles.roleName}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <div>\n        <span *ngIf=\"roleInvalid\" style=\"color: red;\">Please Select Role </span>\n    </div>\n    </div></div><br>\n\n\n\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <mat-form-field>\n          <mat-label>Select Client</mat-label>\n          <mat-select  name=\"client\" [(ngModel)]=\"form.client\" #userForm=\"ngModel\" multiple\n          (click)=\"clientNameInvalid == false\" [ngClass]=\"{ 'is-invalid': clientNameInvalid}\" required>\n            <mat-option *ngFor=\"let clients of clientname\" value={{clients.clientName}}>\n              {{clients.clientName}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <div>\n          <span *ngIf=\"clientNameInvalid\" style=\"color: red;\">Please Select Client </span>\n      </div>\n\n        </div>\n    \n        <div class=\"col-md-4\">\n          <mat-radio-group aria-label=\"Select Status\" name=\"userActive\" [(ngModel)]=\"form.active\">\n            <mat-radio-button for=\"userActive\" *ngFor=\"let item of listStatus\" [value]=\"item.value\" [checked]=\"item.checked\">{{item.name}}</mat-radio-button>\n          </mat-radio-group></div></div>\n   <br>\n    <div class=\"example-button-row\" style=\"margin-left:174px;\">\n\n      <button mat-raised-button color=\"primary\" (click)=\"doSaveUser()\">Save</button>&nbsp;\n      <button mat-raised-button type=\"reset\" color=\"primary\" style=\"margin-left: 4px;\">Cancel</button>\n\n\n    </div>\n  </form>\n</div>\n<div class=\"form-group\">\n  <div class=\"alert alert-danger\" role=\"alert\" *ngIf=message>\n    <span style=\"color: red; margin-left: 37px;\">{{ message }}</span>\n\n  </div>\n</div>\n<br><br>\n<div class=\"example-header\">\n  <mat-form-field>\n    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n  </mat-form-field>\n</div>\n<br>\n<div class=\"example-container mat-elevation-z8\">\n\n  <mat-table [dataSource]=\"dataSource\" #mytable matSort>\n\n    <!--- Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"userId\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> User Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userId}} </mat-cell>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"userFirstName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> First Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userFirstName}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"empLastName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.empLastName}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"userEmail\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userEmail}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"userName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.userName}} </mat-cell>\n    </ng-container>\n    <!-- application Column -->\n\n    <ng-container matColumnDef=\"applicationName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Application Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.applicationName}} </mat-cell>\n    </ng-container>\n\n<!-- ClientName Column -->\n<ng-container matColumnDef=\"clientName\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n  <mat-cell *matCellDef=\"let element\"> {{element.clientName}} </mat-cell>\n</ng-container>\n\n<!-- Role Column -->\n<ng-container matColumnDef=\"roleName\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header > Role </mat-header-cell>\n  <mat-cell *matCellDef=\"let element\"> {{element.roleName}} </mat-cell>\n\n</ng-container>\n    <!-- Active Column -->\n    <ng-container matColumnDef=\"active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.active}} </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <mat-header-cell *matHeaderCellDef>Actions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button matTooltip=\"Click to Edit\" class=\"iconbutton\" color=\"primary\"\n          (click)=\"editUser('Update',row)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n      </mat-cell>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"permission\" >\n      <mat-header-cell *matHeaderCellDef>Manage Permissions </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n  \n        <button mat-button matTooltip=\"Click to give permissions\" class=\"\" color=\"primary\" [disabled]=\"row.active === 'Inactive'\"\n        (click)=\"editPermission('Update',row)\">\n        Give Permissions\n      </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"> </mat-row>\n  </mat-table>\n\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n\n\n</div>","\r\n<div mat-dialog-content>\r\n  <p>Deatils have been saved successfully</p>\r\n  \r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"close()\">Close</button>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}